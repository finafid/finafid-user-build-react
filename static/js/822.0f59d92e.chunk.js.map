{"version":3,"file":"static/js/822.0f59d92e.chunk.js","mappings":"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","sources":["hooks/useSearchParamsState.js","hooks/usePagination.js","components/Pagination.jsx","services/orderServices.js","pages/Orders/CancelOrder.jsx","pages/Orders/OrderHistoryCard.jsx","pages/Orders/NoOrder.jsx","pages/Orders/index.jsx","api/orderApis.js"],"sourcesContent":["import { useSearchParams } from \"react-router-dom\";\nimport { useEffect, useRef } from \"react\";\n\nexport function useSearchParamsState(\n  searchParamName,\n  defaultValue,\n  replace = false\n) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const isInitialized = useRef(false);\n\n  useEffect(() => {\n    if (!isInitialized.current) {\n      if (!searchParams.has(searchParamName) && defaultValue !== undefined) {\n        const nextParams = new URLSearchParams(searchParams);\n        nextParams.set(searchParamName, defaultValue);\n        setSearchParams(nextParams, { replace: true }); // use replace to avoid adding history entry\n      }\n      isInitialized.current = true;\n    }\n  }, [searchParams, searchParamName, defaultValue, setSearchParams]);\n\n  const acquiredSearchParam = searchParams.get(searchParamName);\n  const searchParamsState = acquiredSearchParam ?? defaultValue;\n\n  const setSearchParamsState = (newState) => {\n    const nextParams = new URLSearchParams(searchParams);\n\n    if (newState !== null && newState !== undefined) {\n      nextParams.set(searchParamName, newState);\n    } else {\n      nextParams.delete(searchParamName);\n    }\n\n    // Compare the current search params with the new search params\n    const currentParams = searchParams.toString();\n    const updatedParams = nextParams.toString();\n\n    if (currentParams !== updatedParams) {\n      setSearchParams(nextParams, { replace: replace });\n    }\n  };\n\n  return [searchParamsState, setSearchParamsState];\n}\n","import { useMemo } from \"react\";\n\nexport const DOTS = \"...\";\n\nconst range = (start, end) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport const usePagination = ({\n  totalCount,\n  limit,\n  siblingCount = 1,\n  currentPage,\n}) => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / limit);\n\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\n    const totalPageNumbers = siblingCount + 5;\n\n    /*\n      If the number of pages is less than the page numbers we want to show in our\n      paginationComponent, we return the range [1..totalPageCount]\n    */\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount\n    );\n\n    /*\n      We do not want to show dots if there is only one position left \n      after/before the left/right page count as that would lead to a change if our Pagination\n      component size which we do not want\n    */\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingCount;\n      let rightRange = range(\n        totalPageCount - rightItemCount + 1,\n        totalPageCount\n      );\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n  }, [totalCount, limit, siblingCount, currentPage]);\n\n  return paginationRange;\n};\n","import { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\nimport { DOTS, usePagination } from \"../hooks/usePagination\";\nimport { Fragment } from \"react\";\n\nconst Pagination = ({\n  onPageChange,\n  totalCount,\n  siblingCount = 1,\n  currentPage,\n  pageSize,\n}) => {\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    limit: pageSize,\n  });\n\n  const lastPage = paginationRange[paginationRange.length - 1];\n\n  if (currentPage === 0 || paginationRange.length < 2) {\n    return null;\n  }\n\n  const onNext = () => {\n    if (currentPage >= lastPage) return;\n    onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    if (currentPage <= 1) return;\n    onPageChange(currentPage - 1);\n  };\n\n  return (\n    <div className=\"my-8\">\n      <ul className=\"relative flex gap-4 max-md:gap-3 w-max mx-auto\">\n        {paginationRange.map((pageNumber, index) => (\n          <Fragment key={index}>\n            {pageNumber === DOTS && (\n              <li className=\"relative h-max top-1\">{DOTS}</li>\n            )}\n\n            {pageNumber !== DOTS && (\n              <li\n                className={`size-10 max-lg:size-8 max-md:size-6 border border-black max-lg:text-sm max-md:text-xs flex justify-center items-center cursor-pointer transition-colors duration-200 ease-in-out ${\n                  pageNumber === currentPage\n                    ? \"bg-primeRed text-white\"\n                    : \"bg-white\"\n                } ${pageNumber !== currentPage && \"hover:bg-mainGray\"}`}\n                onClick={() => onPageChange(pageNumber)}\n              >\n                {pageNumber}\n              </li>\n            )}\n          </Fragment>\n        ))}\n\n        <button\n          className={`absolute -left-10 top-1/2 -translate-y-1/2 ${\n            currentPage <= 1 && \"text-primary\"\n          }`}\n          onClick={onPrevious}\n        >\n          <FiChevronLeft size={28} />\n        </button>\n\n        <button\n          className={`absolute -right-10 top-1/2 -translate-y-1/2 ${\n            currentPage >= lastPage && \"text-primary\"\n          }`}\n          onClick={onNext}\n        >\n          <FiChevronRight size={28} />\n        </button>\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport {\n  cancelOrder,\n  downloadInvoice,\n  getAllOrders,\n  getOrderById,\n  getStatusHistory,\n} from \"../api/orderApis\";\n\nconst useOrders = () => {\n  return useQuery({\n    queryKey: [\"orders\"],\n    queryFn: getAllOrders,\n    staleTime: 1000 * 60 * 5,\n  });\n};\n\nconst useOrderById = (orderId) => {\n  return useQuery({\n    queryKey: [\"order\", orderId],\n    queryFn: () => getOrderById(orderId),\n    staleTime: 1000 * 60 * 5,\n    enabled: !!orderId,\n  });\n};\n\nconst useOrderStatus = (orderId) => {\n  return useQuery({\n    queryKey: [\"orderStatus\", orderId],\n    queryFn: () => getStatusHistory(orderId),\n    staleTime: 1000 * 60 * 5,\n    enabled: !!orderId,\n  });\n};\n\nconst useCancelOrder = (orderId) => {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: cancelOrder,\n    onSuccess: () => {\n      queryClient.invalidateQueries([\"orders\"]);\n      queryClient.invalidateQueries([\"order\", orderId]);\n      queryClient.invalidateQueries([\"orderStatus\", orderId]);\n    },\n  });\n};\n\nconst useDownloadInvoice = (orderId) => {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: downloadInvoice,\n    onSuccess: () => {\n      queryClient.invalidateQueries([\"order\", orderId]);\n    },\n  });\n};\n\nexport {\n  useOrders,\n  useOrderById,\n  useOrderStatus,\n  useCancelOrder,\n  useDownloadInvoice,\n};\n","import Button from \"../../components/Button\";\nimport { useModal } from \"../../contexts/modalContext\";\nimport { BsBagX } from \"react-icons/bs\";\n\nconst CancelOrder = ({ onClick }) => {\n  const { closeModal } = useModal();\n\n  return (\n    <div className=\"sm:w-100 bg-white rounded-xl p-12 space-y-12\">\n      <div className=\"HEAD space-y-2\">\n        <span className=\"block absolute right-1/2 translate-x-1/2 top-0 -translate-y-1/2 w-max bg-primeRed p-4 rounded-full text-white\">\n          <BsBagX size={32} />\n        </span>\n        <p className=\"font-medium text-center\">Cancel Order</p>\n        <p className=\"text-sm font-medium text-primary text-center\">\n          Do you want to cancel this order?\n        </p>\n      </div>\n\n      <div className=\"BTN-SECTION flex justify-center\">\n        <Button\n          onClick={onClick}\n          className=\"px-6 py-3 rounded-tl-md rounded-bl-md\"\n        >\n          Yes, cancel order\n        </Button>\n        <Button\n          reverse\n          onClick={() => closeModal()}\n          className=\"px-6 py-3 rounded-tr-md rounded-br-md\"\n        >\n          close\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default CancelOrder;\n","import React from \"react\";\nimport { getColorForStatus } from \"../../utils/Constants\";\nimport Button from \"../../components/Button\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { formatDate } from \"../../utils/dateUtils\";\nimport {\n  useCancelOrder,\n  useDownloadInvoice,\n} from \"../../services/orderServices\";\nimport { useToast } from \"../../contexts/toastContext\";\nimport { useModal } from \"../../contexts/modalContext\";\nimport CancelOrder from \"./CancelOrder\";\n\nconst OrderHistoryCard = ({ order }) => {\n  const toast = useToast();\n  const { openModal, closeModal } = useModal();\n  const navigate = useNavigate();\n  const cancelMutation = useCancelOrder(order._id);\n  const downloadMutation = useDownloadInvoice();\n\n  const handleCancelOrder = () => {\n    cancelMutation.mutate(order._id, {\n      onSuccess: () => {\n        toast.success(\"Order cancelled successfully!\");\n        closeModal();\n      },\n      onError: (error) => {\n        console.error(error.message);\n        toast.error(\"Unable to cancel order\");\n      },\n    });\n  };\n\n  const handleDownloadInvoice = () => {\n    downloadMutation.mutate(order._id, {\n      onSuccess: (response) => {\n        const invoiceUrl = response.invoicePath;\n        window.open(invoiceUrl, \"_blank\");\n      },\n      onError: (error) => {\n        console.error(error.message);\n        toast.error(\"This order is not shipped yet.\");\n      },\n    });\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg p-4 md:p-6 w-full border\">\n      <div className=\"flex flex-col gap-y-4\">\n        <div className=\"CARD-HEAD w-max flex items-center justify-between gap-2\">\n          <span\n            className={`text-xxs text-white px-2 py-1 leading-none rounded-full ${getColorForStatus(\n              order.status\n            )}`}\n          >\n            {order.status}\n          </span>\n          <span className=\"text-gray-600 text-sm\">\n            {formatDate(new Date(order.updatedAt))}\n          </span>\n        </div>\n\n        <div className=\"CARD-BODY flex max-lg:flex-col justify-between gap-4\">\n          <div className=\"ORDER-ITEMS w-full flex max-lg:flex-col gap-4\">\n            {order?.orderItem.slice(0, 1).map((item, index) => (\n              <div key={index} className=\"PRODUCT-MAIN flex gap-2 flex-grow\">\n                <Link to={`/order/${order._id}`} className=\"flex-shrink-0\">\n                  {item.productId ? (\n                    <img\n                      src={item.productId?.images[0]}\n                      alt={item.productId?.productGroup?.name}\n                      loading=\"lazy\"\n                      className=\"size-16 rounded\"\n                    />\n                  ) : (\n                    <div className=\"size-16 bg-lightGray flex items-center justify-center text-primary rounded text-xs text-center\">\n                      Invalid Product\n                    </div>\n                  )}\n                  {order?.orderItem.length > 1 && (\n                    <p className=\"text-xs text-center font-medium\">\n                      +{order.orderItem.length - 1} more\n                    </p>\n                  )}\n                </Link>\n                <div className=\"text-sm\">\n                  <h3 className=\"font-medium\">{item.productId?.name}</h3>\n                  {item?.productId?.attributes &&\n                    Object.keys(item?.productId?.attributes)\n                      .slice(0, 3)\n                      .map((key) => (\n                        <p index={key} className=\"capitalize\">\n                          {key}: {item?.productId?.attributes[key]}\n                        </p>\n                      ))}\n                </div>\n              </div>\n            ))}\n            <div className=\"text-sm font-medium 2xl:w-80 xl:w-60 lg:w-40 flex-shrink-0\">\n              <h2>Expected delivery on Monday, 12th March</h2>\n              <div className=\"flex gap-2\">\n                <p>Order date :</p>\n                <p>{formatDate(new Date(order.createdAt))}</p>\n              </div>\n              <div className=\"flex gap-2\">\n                <p>Total :</p>\n                <p>₹ {order.totalPrice}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"BUTTONS-SECTION flex flex-col gap-y-2 flex-shrink-0\">\n            <Button>Track order</Button>\n            <Button reverse onClick={() => navigate(`/order/${order._id}`)}>\n              View order details\n            </Button>\n            <div className=\"flex lg:flex-col justify-around items-center\">\n              <button\n                onClick={handleDownloadInvoice}\n                className=\"text-blue-500 text-sm px-4 py-2\"\n              >\n                Get Invoice\n              </button>\n              {order?.status === \"Canceled\" &&<button\n                onClick={() =>\n                  openModal(<CancelOrder onClick={handleCancelOrder} />)\n                }\n                className=\"text-blue-500 text-sm px-4 py-2\"\n              >\n                Cancel Order\n              </button>}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderHistoryCard;\n","import { useNavigate } from \"react-router-dom\";\nimport Button from \"../../components/Button\";\n\nconst NoOrder = () => {\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"space-y-6\">\n      <h4 className=\"text-lg font-secondary font-medium text-center\">\n        No order placed\n      </h4>\n      <ul className=\"flex justify-center gap-4\">\n        {Array.from({ length: 3 }).map((_, index) => (\n          <li\n            key={index}\n            className=\"size-40 max-lg:size-30 max-sm:size-20 bg-mainGray\"\n          ></li>\n        ))}\n      </ul>\n      <Button\n        onClick={() => navigate(\"/wishlist\")}\n        className=\"px-6 py-3 rounded-full text-lg mx-auto\"\n      >\n        GO TO WISHLIST\n      </Button>\n    </div>\n  );\n};\n\nexport default NoOrder;\n","import { motion } from \"framer-motion\";\nimport { useOrders } from \"../../services/orderServices\";\nimport { useMemo } from \"react\";\nimport OrderHistoryCard from \"./OrderHistoryCard\";\nimport { useSearchParamsState } from \"../../hooks/useSearchParamsState\";\nimport NoOrder from \"./NoOrder\";\nimport Pagination from \"../../components/Pagination\";\n\nconst Orders = () => {\n  const { data: orders = [], isLoading, error } = useOrders();\n  const [page, setPage] = useSearchParamsState(\"page\", 1);\n  const limit = 5;\n\n  const currentTableData = useMemo(() => {\n    const firstPageIndex = (page - 1) * limit;\n    const lastPageIndex = firstPageIndex + limit;\n    return orders.slice(firstPageIndex, lastPageIndex);\n  }, [page, orders]);\n\n  if (isLoading) {\n    return (\n      <div className=\"w-full\">\n        <h2 className=\"text-center font-secondary font-medium text-xl mt-8\">\n          Loading...\n        </h2>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"w-full\">\n        <h2 className=\"text-center font-secondary font-medium text-xl mt-8\">\n          {error.message}\n        </h2>\n      </div>\n    );\n  }\n\n  return (\n    <motion.main\n      className=\"flex-1\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5 }}\n    >\n      <div className=\"bg-white p-6 rounded-md lg:shadow-md\">\n        <h2 className=\"text-2xl font-semibold mb-4\">My Orders</h2>\n\n        {orders.length === 0 ? (\n          <NoOrder />\n        ) : (\n          <div className=\"space-y-4\">\n            {currentTableData.map((order) => (\n              <OrderHistoryCard key={order._id} order={order} />\n            ))}\n\n            <Pagination\n              currentPage={parseInt(page, 10)}\n              totalCount={orders.length}\n              pageSize={limit}\n              onPageChange={(page) => setPage(page.toString())}\n            />\n          </div>\n        )}\n      </div>\n    </motion.main>\n  );\n};\n\nexport default Orders;\n","import axiosInstance from \"./axiosInstance\";\n\nconst getAllOrders = async () => {\n  const response = await axiosInstance.get(\"/getOrderDetails\");\n  return response.data;\n};\n\nconst getOrderById = async (orderId) => {\n  const response = await axiosInstance.get(`/getOrderById/${orderId}`);\n  return response.data;\n};\n\nconst createOrder = (orderItems, address, pricingDetails, paymentMethod) => {\n  return axiosInstance.post(\n    \"/placeOrder\",\n    {\n      orderItem: orderItems,\n      address,\n      ...pricingDetails,\n      payment_method: paymentMethod,\n    },\n    {\n      headers: {\n        \"x-api-key\": process.env.REACT_APP_ORDER_API_KEY,\n      },\n    }\n  );\n};\n\nconst editOrder = (\n  orderId,\n  address,\n  pricingDetails,\n  paymentMethod,\n  hasPaymentCompleted,\n  status\n) => {\n  return axiosInstance.post(\n    `/editOrder/${orderId}`,\n    {\n      address,\n      ...pricingDetails,\n      payment_method: paymentMethod,\n      payment_complete: hasPaymentCompleted,\n      status: status,\n    },\n    {\n      headers: {\n        \"x-api-key\": process.env.REACT_APP_ORDER_API_KEY,\n      },\n    }\n  );\n};\n\nconst updateOrderStatus = (orderId, status) => {\n  return axiosInstance.post(\n    `/updateStatus/${orderId}`,\n    { status },\n    {\n      headers: {\n        \"x-api-key\": process.env.REACT_APP_ORDER_API_KEY,\n      },\n    }\n  );\n};\n\nconst getStatusHistory = async (orderId) => {\n  const response = await axiosInstance.get(`/orderStatusDetails/${orderId}`);\n  return response.data?.statusDetails?.orderStatusDetails;\n};\n\nconst cancelOrder = async (orderId) => {\n  const response = await axiosInstance.get(`/cancelDelivery/${orderId}`);\n  return response.data;\n};\n\nconst downloadInvoice = async (orderId) => {\n  const response = await axiosInstance.get(`/downloadInvoice/${orderId}`);\n  return response.data;\n};\n\nexport {\n  getAllOrders,\n  getOrderById,\n  createOrder,\n  editOrder,\n  updateOrderStatus,\n  getStatusHistory,\n  cancelOrder,\n  downloadInvoice,\n};\n"],"names":["useSearchParamsState","searchParamName","defaultValue","replace","arguments","length","undefined","searchParams","setSearchParams","useSearchParams","isInitialized","useRef","useEffect","current","has","nextParams","URLSearchParams","set","acquiredSearchParam","get","newState","delete","toString","DOTS","range","start","end","Array","from","_","idx","_ref","onPageChange","totalCount","siblingCount","currentPage","pageSize","paginationRange","limit","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","lastPageIndex","rightRange","middleRange","usePagination","lastPage","_jsx","className","children","_jsxs","map","pageNumber","index","Fragment","concat","onClick","onPrevious","FiChevronLeft","size","onNext","FiChevronRight","useOrders","useQuery","queryKey","queryFn","getAllOrders","staleTime","useOrderById","orderId","getOrderById","enabled","useOrderStatus","getStatusHistory","useCancelOrder","queryClient","useQueryClient","useMutation","mutationFn","cancelOrder","onSuccess","invalidateQueries","useDownloadInvoice","downloadInvoice","closeModal","useModal","BsBagX","Button","reverse","order","toast","useToast","openModal","navigate","useNavigate","cancelMutation","_id","downloadMutation","handleCancelOrder","mutate","success","onError","error","console","message","getColorForStatus","status","formatDate","Date","updatedAt","orderItem","slice","item","_item$productId","_item$productId2","_item$productId2$prod","_item$productId3","_item$productId4","_item$productId5","Link","to","productId","src","images","alt","productGroup","name","loading","attributes","Object","keys","key","_item$productId6","createdAt","totalPrice","handleDownloadInvoice","response","invoiceUrl","invoicePath","window","open","CancelOrder","NoOrder","Orders","data","orders","isLoading","page","setPage","currentTableData","firstPageIndex","motion","main","initial","opacity","animate","transition","duration","OrderHistoryCard","Pagination","parseInt","async","axiosInstance","createOrder","orderItems","address","pricingDetails","paymentMethod","post","_objectSpread","payment_method","headers","process","updateOrderStatus","_response$data","_response$data$status","statusDetails","orderStatusDetails"],"sourceRoot":""}