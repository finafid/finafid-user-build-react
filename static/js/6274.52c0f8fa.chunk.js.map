{"version":3,"file":"static/js/6274.52c0f8fa.chunk.js","mappings":"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","sources":["api/brandApis.js","api/categoryApis.js","components/LargeRectangle.jsx","components/LeaderBoard.jsx","components/Microbar.jsx","components/ProductCard.jsx","components/SquareBanners.jsx","hooks/useCategory.js","hooks/useSubcategory.js","services/brandService.js","services/productService.js"],"sourcesContent":["import axiosInstance from \"./axiosInstance\";\r\n\r\nconst getAllBrands = () => {\r\n  return axiosInstance.get(\"/getBrand\");\r\n};\r\n\r\nconst getBrandsBasedOnCategory = async (categoryId) => {\r\n  const response = await axiosInstance.get(\r\n    `/brandBasedOnCategory/${categoryId}`\r\n  );\r\n  return response.data?.brandDetails;\r\n};\r\n\r\nconst getBrandsBasedOnProductType = async (productTypeId) => {\r\n  const response = await axiosInstance.get(\r\n    `/getBrandsBasedOnProductType/${productTypeId}`\r\n  );\r\n  return response.data?.brandList;\r\n};\r\n\r\nconst getAllFeaturedBrands = () => {\r\n  return axiosInstance.get(\"/getAllFeaturedBrand\");\r\n};\r\n\r\nconst getAllUtsavFeaturedBrands = () => {\r\n  return axiosInstance.get(\"/getAllUtsavFeaturedBrand\");\r\n};\r\n\r\nconst getAllTopSellingBrands = async () => {\r\n  const response = await axiosInstance.get(\"/getAllTopSellingBrand\");\r\n  return response.data;\r\n};\r\n\r\nconst getBrand = (brandId) => {\r\n  return axiosInstance.get(`/getBrandById/${brandId}`);\r\n};\r\n\r\nexport {\r\n  getAllBrands,\r\n  getBrandsBasedOnCategory,\r\n  getBrandsBasedOnProductType,\r\n  getAllFeaturedBrands,\r\n  getAllUtsavFeaturedBrands,\r\n  getAllTopSellingBrands,\r\n  getBrand,\r\n};\r\n","import axiosInstance from \"./axiosInstance\";\r\n\r\nconst getAllCategoryDetails = () => {\r\n  return axiosInstance.get(\"/allCategoryDetails\");\r\n};\r\n\r\nconst getAllCategories = () => {\r\n  return axiosInstance.get(\"/getAllCategory\");\r\n};\r\n\r\nconst getAllFeaturedCategories = () => {\r\n  return axiosInstance.get(\"/getAllFeaturedCategory\");\r\n};\r\n\r\nconst getCategory = (categoryId) => {\r\n  return axiosInstance.get(`/getCategoryId/${categoryId}`);\r\n};\r\n\r\nconst getAllSubcategories = () => {\r\n  return axiosInstance.get(\"/getAllSubCategory\");\r\n};\r\n\r\nconst getAllFeaturedSubCategories = () => {\r\n  return axiosInstance.get(\"/getAllFeaturedSubCategory\");\r\n};\r\n\r\nconst getSubcategories = (categoryId) => {\r\n  return axiosInstance.get(`/getSubcategoryBasedOnCategory/${categoryId}`);\r\n};\r\n\r\nconst getSubcategory = (subcategoryId) => {\r\n  return axiosInstance.get(`/getSubCategoryId/${subcategoryId}`);\r\n};\r\n\r\nconst getAllProductTypes = () => {\r\n  return axiosInstance.get(\"/getAllProductType\");\r\n};\r\n\r\nconst getProductTypes = (subcategoryId) => {\r\n  return axiosInstance.get(\r\n    `/getProductTypeBasedOnSubCategory/${subcategoryId}`\r\n  );\r\n};\r\n\r\nconst getAllFeaturedProductTypes = async () => {\r\n  const response = await axiosInstance.get(\"/getAllFeaturedProductType\");\r\n  return response.data;\r\n};\r\n\r\nconst getProductType = (productTypeId) => {\r\n  return axiosInstance.get(`/getProductTypeById/${productTypeId}`);\r\n};\r\n\r\nconst getProductTypesBasedOnBrand = async (brandId) => {\r\n  const response = await axiosInstance.get(\r\n    `/getProductTypesBasedOnBrand/${brandId}`\r\n  );\r\n  return response.data?.ProductTypeList;\r\n};\r\n\r\nexport {\r\n  getAllCategoryDetails,\r\n  getAllCategories,\r\n  getAllFeaturedCategories,\r\n  getCategory,\r\n  getAllSubcategories,\r\n  getAllFeaturedSubCategories,\r\n  getSubcategories,\r\n  getSubcategory,\r\n  getAllProductTypes,\r\n  getProductTypes,\r\n  getAllFeaturedProductTypes,\r\n  getProductType,\r\n  getProductTypesBasedOnBrand,\r\n};\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport useMediaQuery from \"../hooks/useMediaQuery\";\r\nimport { useBanners } from \"../services/bannerServices\";\r\nimport Carousel from \"./Carousel\";\r\nimport Skeleton from \"./Skeleton\";\r\nimport useInView from \"../hooks/useInView\";\r\n\r\nconst LargeRectangle = ({\r\n  preload = false,\r\n  position,\r\n  resourceType,\r\n  valueId,\r\n  title,\r\n  subtitle,\r\n  className,\r\n  containerClassName = \"container max-w-full\",\r\n}) => {\r\n  const containerRef = useRef(null);\r\n  const hasFetchedOnce = useRef(false);\r\n  const [shouldFetch, setShouldFetch] = useState(preload);\r\n  const maxXl = useMediaQuery(\"(max-width: 1280px)\");\r\n  const maxLg = useMediaQuery(\"(max-width: 1024px)\");\r\n  const maxMd = useMediaQuery(\"(max-width: 768px)\");\r\n\r\n  const isInView = useInView(containerRef, {\r\n    threshold: 0.1,\r\n    rootMargin: \"100px\",\r\n  });\r\n\r\n  const { data: banners = [], isLoading } = useBanners(\r\n    {\r\n      bannerType: \"Large Rectangle\",\r\n      position,\r\n      resourceType,\r\n      valueId,\r\n    },\r\n    {\r\n      enabled: shouldFetch,\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!hasFetchedOnce.current && isInView && position && resourceType) {\r\n      setShouldFetch(true);\r\n      hasFetchedOnce.current = true;\r\n    }\r\n  }, [isInView, position, resourceType]);\r\n\r\n  return (\r\n    <div ref={containerRef}>\r\n      {isLoading ? (\r\n        <ul className={`flex gap-4 overflow-x-hidden ${containerClassName}`}>\r\n          {Array.from({ length: 10 }).map((_, index) => (\r\n            <li\r\n              key={index}\r\n              className={`w-[300px] max-xl:w-[270px] max-lg:w-[180px] h-[200px] max-xl:h-[180px] max-lg:h-[120px] rounded-lg overflow-hidden flex-shrink-0 ${className}`}\r\n            >\r\n              <Skeleton />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        banners?.length > 0 && (\r\n          <div\r\n            className={`space-y-4 max-lg:space-y-2 max-md:pr-0 ${containerClassName}`}\r\n          >\r\n            {title || subtitle ? (\r\n              <div>\r\n                <h1 className=\"text-2xl max-lg:text-xl font-bold\">{title}</h1>\r\n                <p className=\"text-sm\">{subtitle}</p>\r\n              </div>\r\n            ) : null}\r\n\r\n            <Carousel\r\n              slideWidth={maxLg ? 180 : maxXl ? 270 : 300}\r\n              navigation={!maxMd}\r\n              autoplay\r\n              delay={5000}\r\n              spaceBetween={maxLg ? 10 : 14}\r\n              allowTouchMove\r\n            >\r\n              {banners.map((banner) => (\r\n                <a\r\n                  key={banner.bannerTitle || banner._id}\r\n                  href={banner.linkUrl}\r\n                  className=\"w-max inline-block space-y-1\"\r\n                >\r\n                  <img\r\n                    src={banner.bannerImg}\r\n                    alt={banner.title || banner._id}\r\n                    loading=\"lazy\"\r\n                    className={`w-[300px] max-xl:w-[270px] max-lg:w-[180px] h-[200px] max-xl:h-[180px] max-lg:h-[120px] object-cover object-center rounded-lg ${className}`}\r\n                  />\r\n                  <h3 className=\"text-center text-sm font-light\">\r\n                    {banner.bannerTitle}\r\n                  </h3>\r\n                </a>\r\n              ))}\r\n            </Carousel>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LargeRectangle;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useBanners } from \"../services/bannerServices\";\r\nimport Carousel from \"./Carousel\";\r\nimport Skeleton from \"./Skeleton\";\r\nimport useInView from \"../hooks/useInView\";\r\nimport useMediaQuery from \"../hooks/useMediaQuery\";\r\n\r\nconst LeaderBoard = ({\r\n  preload = false,\r\n  position,\r\n  resourceType,\r\n  valueId,\r\n  title,\r\n  subtitle,\r\n  className,\r\n  containerClassName = \"container max-w-full\",\r\n}) => {\r\n  const containerRef = useRef(null);\r\n  const hasFetchedOnce = useRef(false);\r\n  const [shouldFetch, setShouldFetch] = useState(preload);\r\n  const maxMd = useMediaQuery(\"(max-width: 768px)\");\r\n\r\n  const isInView = useInView(containerRef, {\r\n    threshold: 0.1,\r\n    rootMargin: \"100px\",\r\n  });\r\n\r\n  const { data: banners = [], isLoading } = useBanners(\r\n    {\r\n      bannerType: \"Leaderboard\",\r\n      position,\r\n      resourceType,\r\n      valueId,\r\n    },\r\n    { enabled: shouldFetch }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!hasFetchedOnce.current && isInView && position && resourceType) {\r\n      setShouldFetch(true);\r\n      hasFetchedOnce.current = true;\r\n    }\r\n  }, [isInView, position, resourceType]);\r\n\r\n  return (\r\n    <div ref={containerRef}>\r\n      {isLoading ? (\r\n        <ul className={`flex gap-4 overflow-x-hidden ${containerClassName}`}>\r\n          {Array.from({ length: 1 }).map((_, index) => (\r\n            <li\r\n              key={index}\r\n              className={`block relative w-full h-30 max-lg:h-20 max-md:h-10 overflow-hidden flex-shrink-0 ${className}`}\r\n            >\r\n              <Skeleton />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        banners?.length > 0 && (\r\n          <div className={`space-y-4 max-lg::space-y-2 ${containerClassName}`}>\r\n            {title || subtitle ? (\r\n              <div>\r\n                <h1 className=\"text-2xl max-lg:text-xl font-bold\">{title}</h1>\r\n                <p className=\"text-sm\">{subtitle}</p>\r\n              </div>\r\n            ) : null}\r\n            <Carousel autoplay delay={5000} navigation={!maxMd} pagination>\r\n              {banners.map((banner) => (\r\n                <a\r\n                  key={banner.bannerTitle || banner._id}\r\n                  href={banner.linkUrl}\r\n                  className=\"block relative w-full h-max\"\r\n                >\r\n                  <img\r\n                    src={banner.bannerImg}\r\n                    alt={banner.bannerTitle || banner._id}\r\n                    loading=\"lazy\"\r\n                    className={`w-full object-cover object-center ${className}`}\r\n                  />\r\n                </a>\r\n              ))}\r\n            </Carousel>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaderBoard;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useBanners } from \"../services/bannerServices\";\r\nimport Carousel from \"./Carousel\";\r\nimport Skeleton from \"./Skeleton\";\r\nimport useInView from \"../hooks/useInView\";\r\n\r\nconst Microbar = ({\r\n  preload = false,\r\n  position,\r\n  resourceType,\r\n  valueId,\r\n  title,\r\n  subtitle,\r\n  className,\r\n  containerClassName = \"container max-w-full\",\r\n}) => {\r\n  const containerRef = useRef(null);\r\n  const hasFetchedOnce = useRef(false);\r\n  const [shouldFetch, setShouldFetch] = useState(preload);\r\n\r\n  const isInView = useInView(containerRef, {\r\n    threshold: 0.1,\r\n    rootMargin: \"100px\",\r\n  });\r\n\r\n  const { data: banners = [], isLoading } = useBanners(\r\n    {\r\n      bannerType: \"Microbar\",\r\n      position,\r\n      resourceType,\r\n      valueId,\r\n    },\r\n    { enabled: shouldFetch }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!hasFetchedOnce.current && isInView && position && resourceType) {\r\n      setShouldFetch(true);\r\n      hasFetchedOnce.current = true;\r\n    }\r\n  }, [isInView, position, resourceType]);\r\n\r\n  return (\r\n    <div ref={containerRef}>\r\n      {isLoading ? (\r\n        <ul className={`flex gap-4 overflow-x-hidden ${containerClassName}`}>\r\n          {Array.from({ length: 1 }).map((_, index) => (\r\n            <li\r\n              key={index}\r\n              className={`block relative w-full h-14 max-lg:h-10 max-md:h-5 overflow-hidden flex-shrink-0 ${className}`}\r\n            >\r\n              <Skeleton />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        banners?.length > 0 && (\r\n          <div className={`space-y-4 max-lg:space-y-2 ${containerClassName}`}>\r\n            {title || subtitle ? (\r\n              <div>\r\n                <h1 className=\"text-2xl max-lg:text-xl font-bold\">{title}</h1>\r\n                <p className=\"text-sm\">{subtitle}</p>\r\n              </div>\r\n            ) : null}\r\n\r\n            <Carousel autoplay delay={5000}>\r\n              {banners.map((banner) => (\r\n                <a\r\n                  key={banner.bannerTitle || banner._id}\r\n                  href={banner.linkUrl}\r\n                  className=\"block relative w-full h-max\"\r\n                >\r\n                  <img\r\n                    src={banner.bannerImg}\r\n                    alt={banner.bannerTitle || banner._id}\r\n                    loading=\"lazy\"\r\n                    className={`w-full object-cover object-center ${className}`}\r\n                  />\r\n                </a>\r\n              ))}\r\n            </Carousel>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Microbar;\r\n","import { IoMdHeart } from \"react-icons/io\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useWishlist } from \"../contexts/wishlistContext\";\r\nimport RatingBadge from \"./RatingBadge\";\r\nimport useReview from \"../hooks/useReview\";\r\nimport { useState } from \"react\";\r\nimport Carousel from \"./Carousel\";\r\nimport utsavBadge from \"../assets/images/utsav-badge.png\";\r\n\r\nconst ProductCard = ({ product, dropdown = false }) => {\r\n  const navigate = useNavigate();\r\n  const { addToWishlist, removeFromWishlist, isWished } = useWishlist();\r\n  const { averageRating, totalReviews, ratingsBreakdown } = useReview(\r\n    product.productGroup._id\r\n  );\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const toggleWishlist = (e) => {\r\n    e.stopPropagation();\r\n\r\n    if (isWished(product._id)) {\r\n      removeFromWishlist(product._id);\r\n    } else {\r\n      addToWishlist(product._id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n      className={`size-full flex flex-col border border-secondary rounded-md overflow-hidden hover:shadow-md ${\r\n        product.quantity <= 0 && \"opacity-75\"\r\n      }`}\r\n    >\r\n      <div\r\n        onClick={() => navigate(`/product/${product._id}`)}\r\n        className=\"ITEM-IMAGES relative w-full pt-[100%] cursor-pointer\"\r\n      >\r\n        <div className=\"absolute inset-0 overflow-hidden\">\r\n          {isHovered &&\r\n          product?.productGroup?.otherImages &&\r\n          product?.productGroup?.thumbnail ? (\r\n            <Carousel pagination autoplay delay={2000} loop>\r\n              {[\r\n                ...product?.images,\r\n                ...product?.productGroup?.otherImages,\r\n                ...product?.productGroup?.thumbnail,\r\n              ].map((image, index) => (\r\n                <img\r\n                  key={index}\r\n                  src={image}\r\n                  alt={index}\r\n                  className=\"size-full object-contain object-center\"\r\n                />\r\n              ))}\r\n            </Carousel>\r\n          ) : (\r\n            <img\r\n              src={product?.images[0]}\r\n              alt={product?.productGroup?.name}\r\n              className=\"size-full object-contain object-center\"\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"absolute bottom-2 left-2 z-[5]\">\r\n          {averageRating > 0 && (\r\n            <RatingBadge\r\n              rating={averageRating}\r\n              totalRatings={totalReviews}\r\n              ratingsBreakdown={ratingsBreakdown}\r\n              dropdown={dropdown}\r\n            />\r\n          )}\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={toggleWishlist}\r\n          className=\"absolute top-2 right-2 z-[5]\"\r\n        >\r\n          <IoMdHeart\r\n            className={`${\r\n              isWished(product._id)\r\n                ? \"text-primeRed\"\r\n                : \"text-halfGray stroke-2 stroke-black\"\r\n            }`}\r\n            size={20}\r\n          />\r\n        </button>\r\n        {product?.isUtsav && (\r\n          <div className=\"absolute top-2 left-2 z-[5]\">\r\n            <img src={utsavBadge} alt=\"utsav\" className=\"h-2\" />\r\n          </div>\r\n        )}\r\n        {product.quantity <= 0 && (\r\n          <div className=\"absolute inset-x-0 bottom-0 bg-lightGray z-10 p-1\">\r\n            <p className=\"font-bold text-error text-center\">SOLD OUT</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"ITEM-DETAILS p-2 leading-none font-secondary flex-grow\">\r\n        <p className=\"NAME text-sm max-md:text-xs font-medium line-clamp-1 text-center\">\r\n          {product?.name}\r\n        </p>\r\n        <Link\r\n          to={`/brand/${product?.productGroup?.brand?._id}`}\r\n          className=\"BRAND font-medium text-xs max-lg:text-xxs text-primary text-center leading-none\"\r\n        >\r\n          <p>{product?.productGroup?.brand?.name}</p>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"BOTTOM-SECTION flex flex-col justify-center items-center gap-y-1 p-2 pt-0\">\r\n        <div className=\"md:space-y-1\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <p className=\"text-xs max-md:text-xxs text-center font-medium text-primary line-through leading-none\">\r\n              ₹ {Math.round(product?.unitPrice)}\r\n            </p>\r\n            <p className=\"font-bold text-lg max-md:text-sm md:text-center leading-none\">\r\n              ₹ {Math.round(product?.sellingPrice)}\r\n            </p>\r\n            {product?.discount > 0 && (\r\n              <span className=\"leading-none text-sm max-md:text-xs font-medium text-green-500\">\r\n                {product?.discountType === \"percent\"\r\n                  ? `${product.discount}%`\r\n                  : `₹${product.discount} OFF`}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"UTSAV-PRICING flex items-center lg:gap-2 gap-1 whitespace-nowrap text-success\">\r\n          <p className=\"font-medium leading-none max-lg:text-xs\">Utsav Price</p>\r\n          <p className=\"text-lg max-lg:text-sm font-bold leading-none\">\r\n            ₹ {Math.round(product.utsavPrice)}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport useMediaQuery from \"../hooks/useMediaQuery\";\r\nimport { useBanners } from \"../services/bannerServices\";\r\nimport Carousel from \"./Carousel\";\r\nimport Skeleton from \"./Skeleton\";\r\nimport useInView from \"../hooks/useInView\";\r\n\r\nconst SquareBanner = ({\r\n  preload = false,\r\n  position,\r\n  resourceType,\r\n  valueId,\r\n  title,\r\n  subtitle,\r\n  className,\r\n  containerClassName = \"container max-w-full\",\r\n}) => {\r\n  const containerRef = useRef(null);\r\n  const hasFetchedOnce = useRef(false);\r\n  const [shouldFetch, setShouldFetch] = useState(preload);\r\n  const maxXl = useMediaQuery(\"(max-width: 1280px)\");\r\n  const maxLg = useMediaQuery(\"(max-width: 1024px)\");\r\n  const maxMd = useMediaQuery(\"(max-width: 768px)\");\r\n\r\n  const isInView = useInView(containerRef, {\r\n    threshold: 0.1,\r\n    rootMargin: \"100px\",\r\n  });\r\n\r\n  const { data: banners = [], isLoading } = useBanners(\r\n    {\r\n      bannerType: \"Square\",\r\n      position,\r\n      resourceType,\r\n      valueId,\r\n    },\r\n    { enabled: shouldFetch }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!hasFetchedOnce.current && isInView && position && resourceType) {\r\n      setShouldFetch(true);\r\n      hasFetchedOnce.current = true;\r\n    }\r\n  }, [isInView, position, resourceType]);\r\n\r\n  return (\r\n    <div ref={containerRef}>\r\n      {isLoading ? (\r\n        <ul className={`flex gap-4 overflow-x-hidden ${containerClassName}`}>\r\n          {Array.from({ length: 10 }).map((_, index) => (\r\n            <li\r\n              key={index}\r\n              className={`size-[500px] max-xl:size-[400px] max-lg:size-[300px] rounded-lg overflow-hidden flex-shrink-0 ${className}`}\r\n            >\r\n              <Skeleton />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        banners?.length > 0 && (\r\n          <div\r\n            className={`space-y-4 max-lg:space-y-2 max-md:pr-0 ${containerClassName}`}\r\n          >\r\n            {title || subtitle ? (\r\n              <div>\r\n                <h1 className=\"text-2xl max-lg:text-xl font-bold\">{title}</h1>\r\n                <p className=\"text-sm\">{subtitle}</p>\r\n              </div>\r\n            ) : null}\r\n\r\n            <Carousel\r\n              slideWidth={maxLg ? 300 : maxXl ? 400 : 500}\r\n              navigation={!maxMd}\r\n              autoplay\r\n              delay={5000}\r\n              spaceBetween={maxLg ? 10 : 14}\r\n              allowTouchMove\r\n            >\r\n              {banners.map((banner) => (\r\n                <a\r\n                  key={banner.bannerTitle || banner._id}\r\n                  href={banner.linkUrl}\r\n                  className=\"block relative\"\r\n                >\r\n                  <img\r\n                    src={banner.bannerImg}\r\n                    alt={banner.bannerTitle || banner._id}\r\n                    loading=\"lazy\"\r\n                    className={`size-[500px] max-xl:size-[400px] max-lg:size-[300px] object-cover object-center rounded-lg ${className}`}\r\n                  />\r\n                </a>\r\n              ))}\r\n            </Carousel>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SquareBanner;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  getAllCategories,\r\n  getAllFeaturedCategories,\r\n  getCategory,\r\n} from \"../api/categoryApis\";\r\n\r\nconst useCategory = (categoryId) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [featuredCategories, setFeaturedCategories] = useState([]);\r\n  const [category, setCategory] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchAllCategories = useCallback(async () => {\r\n    if (categoryId) return;\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const cacheKey = \"categories\";\r\n      const cachedData = sessionStorage.getItem(cacheKey);\r\n      if (cachedData) {\r\n        setCategories(JSON.parse(cachedData));\r\n      } else {\r\n        const response = await getAllCategories();\r\n\r\n        if (response?.status) {\r\n          console.log(response.data);\r\n          sessionStorage.setItem(\r\n            cacheKey,\r\n            JSON.stringify(response.data.mainCategoryList)\r\n          );\r\n          setCategories(response.data.mainCategoryList);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [categoryId]);\r\n\r\n  const fetchAllFeaturedCategories = useCallback(async () => {\r\n    if (categoryId) return;\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const cacheKey = \"featured_categories\";\r\n      const cachedData = sessionStorage.getItem(cacheKey);\r\n      if (cachedData) {\r\n        setFeaturedCategories(JSON.parse(cachedData));\r\n      } else {\r\n        const response = await getAllFeaturedCategories();\r\n\r\n        if (response?.status) {\r\n          console.log(response.data);\r\n          sessionStorage.setItem(\r\n            cacheKey,\r\n            JSON.stringify(response.data.categoryDetails)\r\n          );\r\n          setFeaturedCategories(response.data.categoryDetails);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [categoryId]);\r\n\r\n  const fetchCategory = useCallback(async () => {\r\n    if (!categoryId) return;\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const cacheKey = `category_${categoryId}`;\r\n      const cachedData = sessionStorage.getItem(cacheKey);\r\n      if (cachedData) {\r\n        setCategory(JSON.parse(cachedData));\r\n      } else {\r\n        const response = await getCategory(categoryId);\r\n\r\n        if (response?.status) {\r\n          console.log(response.data);\r\n          sessionStorage.setItem(\r\n            cacheKey,\r\n            JSON.stringify(response.data.categoryDetails)\r\n          );\r\n          setCategory(response.data.categoryDetails);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [categoryId]);\r\n\r\n  useEffect(() => {\r\n    fetchAllCategories();\r\n  }, [fetchAllCategories]);\r\n\r\n  useEffect(() => {\r\n    fetchAllFeaturedCategories();\r\n  }, [fetchAllFeaturedCategories]);\r\n\r\n  useEffect(() => {\r\n    fetchCategory();\r\n  }, [fetchCategory]);\r\n\r\n  return {\r\n    categories,\r\n    featuredCategories,\r\n    category,\r\n    loading,\r\n    error,\r\n    refresh: fetchAllCategories,\r\n  };\r\n};\r\n\r\nexport default useCategory;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  getAllFeaturedSubCategories,\r\n  getAllSubcategories,\r\n  getSubcategories,\r\n  getSubcategory,\r\n} from \"../api/categoryApis\";\r\n\r\nconst useSubcategory = (categoryId, subcategoryId) => {\r\n  const [allSubcategories, setAllSubcategories] = useState([]);\r\n  const [allFeaturedSubcategories, setAllFeaturedSubcategories] = useState([]);\r\n  const [subcategories, setSubcategories] = useState([]);\r\n  const [subcategory, setSubcategory] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchAllSubcategories = useCallback(async () => {\r\n    if (categoryId || subcategoryId) return;\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const cacheKey = \"subcategories\";\r\n      const cachedData = sessionStorage.getItem(cacheKey);\r\n      if (cachedData) {\r\n        setAllSubcategories(JSON.parse(cachedData));\r\n      } else {\r\n        const response = await getAllSubcategories();\r\n\r\n        if (response?.status) {\r\n          console.log(response.data);\r\n          sessionStorage.setItem(\r\n            cacheKey,\r\n            JSON.stringify(response.data.subCategoryList)\r\n          );\r\n          setAllSubcategories(response.data.subCategoryList);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [categoryId, subcategoryId]);\r\n\r\n  const fetchAllFeaturedSubcategories = useCallback(async () => {\r\n    if (categoryId || subcategoryId) return;\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const cacheKey = \"featured_subcategories\";\r\n      const cachedData = sessionStorage.getItem(cacheKey);\r\n      if (cachedData) {\r\n        setAllFeaturedSubcategories(JSON.parse(cachedData));\r\n      } else {\r\n        const response = await getAllFeaturedSubCategories();\r\n\r\n        if (response?.status) {\r\n          console.log(response.data);\r\n          sessionStorage.setItem(\r\n            cacheKey,\r\n            JSON.stringify(response.data.subCategoryDetails)\r\n          );\r\n          setAllFeaturedSubcategories(response.data.subCategoryDetails);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [categoryId, subcategoryId]);\r\n\r\n  const fetchSubcategoriesByCategory = useCallback(async () => {\r\n    if (!categoryId) return;\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const cacheKey = `subcategories_${categoryId}`;\r\n      const cachedData = sessionStorage.getItem(cacheKey);\r\n      if (cachedData) {\r\n        setSubcategories(JSON.parse(cachedData));\r\n      } else {\r\n        const response = await getSubcategories(categoryId);\r\n\r\n        if (response?.status) {\r\n          console.log(response.data);\r\n          sessionStorage.setItem(\r\n            cacheKey,\r\n            JSON.stringify(response.data.subCategoryList)\r\n          );\r\n          setSubcategories(response.data.subCategoryList);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [categoryId]);\r\n\r\n  const fetchSubcategory = useCallback(async () => {\r\n    if (!subcategoryId) return;\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const cacheKey = `subcategory_${subcategoryId}`;\r\n      const cachedData = sessionStorage.getItem(cacheKey);\r\n      if (cachedData) {\r\n        setSubcategory(JSON.parse(cachedData));\r\n      } else {\r\n        const response = await getSubcategory(subcategoryId);\r\n\r\n        if (response?.status) {\r\n          console.log(response.data);\r\n          sessionStorage.setItem(\r\n            cacheKey,\r\n            JSON.stringify(response.data.subCategoryIdDetails)\r\n          );\r\n          setSubcategory(response.data.subCategoryIdDetails);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [subcategoryId]);\r\n\r\n  useEffect(() => {\r\n    fetchAllSubcategories();\r\n  }, [fetchAllSubcategories]);\r\n\r\n  useEffect(() => {\r\n    fetchAllFeaturedSubcategories();\r\n  }, [fetchAllFeaturedSubcategories]);\r\n\r\n  useEffect(() => {\r\n    fetchSubcategoriesByCategory();\r\n  }, [fetchSubcategoriesByCategory]);\r\n\r\n  useEffect(() => {\r\n    fetchSubcategory();\r\n  }, [fetchSubcategory]);\r\n\r\n  return {\r\n    allSubcategories,\r\n    allFeaturedSubcategories,\r\n    subcategories,\r\n    subcategory,\r\n    loading,\r\n    error,\r\n    refresh: fetchAllSubcategories,\r\n  };\r\n};\r\n\r\nexport default useSubcategory;\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport {\r\n  getAllTopSellingBrands,\r\n  getBrandsBasedOnCategory,\r\n  getBrandsBasedOnProductType,\r\n} from \"../api/brandApis\";\r\n\r\nconst useBrandsBasedOnCategory = (categoryId) => {\r\n  return useQuery({\r\n    queryKey: [\"brands\", categoryId],\r\n    queryFn: () => getBrandsBasedOnCategory(categoryId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!categoryId,\r\n  });\r\n};\r\n\r\nconst useBrandsBasedOnProductType = (productTypeId) => {\r\n  return useQuery({\r\n    queryKey: [\"brands\", productTypeId],\r\n    queryFn: () => getBrandsBasedOnProductType(productTypeId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!productTypeId,\r\n  });\r\n};\r\n\r\nconst useTopSellingBrands = () => {\r\n  return useQuery({\r\n    queryKey: [\"brands\", \"top selling\"],\r\n    queryFn: () => getAllTopSellingBrands(),\r\n  });\r\n};\r\n\r\nexport {\r\n  useBrandsBasedOnCategory,\r\n  useBrandsBasedOnProductType,\r\n  useTopSellingBrands,\r\n};\r\n","import { keepPreviousData, useQuery } from \"@tanstack/react-query\";\r\nimport {\r\n  getAllTopSellingProducts,\r\n  getAllVariants,\r\n  getFeaturedVariantsBasedOnCategory,\r\n  getRecommendation,\r\n  getVariant,\r\n} from \"../api/productApis\";\r\n\r\nconst useVariants = (params) => {\r\n  return useQuery({\r\n    queryKey: [\"variants\", params],\r\n    queryFn: () => getAllVariants(params),\r\n    staleTime: 1000 * 60 * 5,\r\n    placeholderData: keepPreviousData,\r\n  });\r\n};\r\n\r\nconst useVariantById = (variantId) => {\r\n  return useQuery({\r\n    queryKey: [\"variant\", variantId],\r\n    queryFn: () => getVariant(variantId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!variantId,\r\n  });\r\n};\r\n\r\nconst useRecommendation = (variantId) => {\r\n  return useQuery({\r\n    queryKey: [\"recommendations\", variantId],\r\n    queryFn: () => getRecommendation(variantId),\r\n    staleTime: 1000 * 60 * 5,\r\n    placeholderData: [],\r\n    enabled: !!variantId,\r\n  });\r\n};\r\n\r\nconst useFeaturedVariantsBasedOnCategory = (categoryId) => {\r\n  return useQuery({\r\n    queryKey: [\"variants\", \"featured\", categoryId],\r\n    queryFn: () => getFeaturedVariantsBasedOnCategory(categoryId),\r\n  });\r\n};\r\n\r\nconst useTopSellingProducts = () => {\r\n  return useQuery({\r\n    queryKey: [\"products\", \"top selling\"],\r\n    queryFn: () => getAllTopSellingProducts(),\r\n  });\r\n};\r\n\r\nexport {\r\n  useVariants,\r\n  useVariantById,\r\n  useRecommendation,\r\n  useFeaturedVariantsBasedOnCategory,\r\n  useTopSellingProducts,\r\n};\r\n"],"names":["getAllBrands","axiosInstance","get","getBrandsBasedOnCategory","async","_response$data","categoryId","data","brandDetails","getBrandsBasedOnProductType","_response$data2","productTypeId","brandList","getAllFeaturedBrands","getAllUtsavFeaturedBrands","getAllTopSellingBrands","getBrand","brandId","getAllCategoryDetails","getAllCategories","getAllFeaturedCategories","getCategory","getAllSubcategories","getAllFeaturedSubCategories","getSubcategories","getSubcategory","subcategoryId","getAllProductTypes","getProductTypes","getAllFeaturedProductTypes","getProductType","getProductTypesBasedOnBrand","ProductTypeList","_ref","preload","position","resourceType","valueId","title","subtitle","className","containerClassName","containerRef","useRef","hasFetchedOnce","shouldFetch","setShouldFetch","useState","maxXl","useMediaQuery","maxLg","maxMd","isInView","useInView","threshold","rootMargin","banners","isLoading","useBanners","bannerType","enabled","useEffect","current","_jsx","ref","children","Array","from","length","map","_","index","Skeleton","_jsxs","Carousel","slideWidth","navigation","autoplay","delay","spaceBetween","allowTouchMove","banner","href","linkUrl","src","bannerImg","alt","_id","loading","bannerTitle","pagination","_product$productGroup","_product$productGroup2","_product$productGroup3","_product$productGroup4","_product$productGroup5","_product$productGroup6","_product$productGroup7","_product$productGroup8","_product$productGroup9","product","dropdown","navigate","useNavigate","addToWishlist","removeFromWishlist","isWished","useWishlist","averageRating","totalReviews","ratingsBreakdown","useReview","productGroup","isHovered","setIsHovered","onMouseEnter","onMouseLeave","quantity","onClick","otherImages","thumbnail","loop","images","image","name","RatingBadge","rating","totalRatings","type","e","stopPropagation","IoMdHeart","size","isUtsav","utsavBadge","Link","to","brand","Math","round","unitPrice","sellingPrice","discount","discountType","utsavPrice","categories","setCategories","featuredCategories","setFeaturedCategories","category","setCategory","setLoading","error","setError","fetchAllCategories","useCallback","cacheKey","cachedData","sessionStorage","getItem","JSON","parse","response","status","console","log","setItem","stringify","mainCategoryList","message","fetchAllFeaturedCategories","categoryDetails","fetchCategory","refresh","useSubcategory","allSubcategories","setAllSubcategories","allFeaturedSubcategories","setAllFeaturedSubcategories","subcategories","setSubcategories","subcategory","setSubcategory","fetchAllSubcategories","subCategoryList","fetchAllFeaturedSubcategories","subCategoryDetails","fetchSubcategoriesByCategory","fetchSubcategory","subCategoryIdDetails","useBrandsBasedOnCategory","useQuery","queryKey","queryFn","staleTime","useBrandsBasedOnProductType","useTopSellingBrands","useVariants","params","getAllVariants","placeholderData","keepPreviousData","useVariantById","variantId","getVariant","useRecommendation","getRecommendation","useFeaturedVariantsBasedOnCategory","getFeaturedVariantsBasedOnCategory","useTopSellingProducts","getAllTopSellingProducts"],"sourceRoot":""}