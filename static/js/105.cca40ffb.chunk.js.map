{"version":3,"file":"static/js/105.cca40ffb.chunk.js","mappings":"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","sources":["hooks/usePayment.js","utils/loadScript.js","api/paymentApis.js","hooks/useSearchParamsState.js","hooks/usePagination.js","components/Pagination.jsx","pages/Wallet/Balance.jsx","pages/Wallet/Features.jsx","pages/Wallet/Alert.jsx","pages/Wallet/Transaction.jsx","pages/Wallet/index.jsx"],"sourcesContent":["import logo from \"../assets/images/Logo.png\";\nimport loadScript from \"../utils/loadScript\";\nimport { useState } from \"react\";\nimport {\n  createPayment,\n  verifyPayment,\n  generatePayUHash,\n} from \"../api/paymentApis\";\nimport { useToast } from \"../contexts/toastContext\";\nimport { useUser } from \"../contexts/userContext\";\n\nconst usePayment = () => {\n  const [payment, setPayment] = useState(null);\n  const [paymentStatus, setPaymentStatus] = useState(null); // success, failure\n  const [paymentLoading, setPaymentLoading] = useState(false);\n  const { user } = useUser();\n  const toast = useToast();\n\n  const processPayment = async (paymentData, onSuccess) => {\n    setPaymentLoading(true);\n    setPaymentStatus(null);\n\n    try {\n      switch (paymentData.paymentMethod) {\n        case \"Razorpay\":\n          await initializeRazorpay(paymentData, onSuccess);\n          break;\n        case \"PayU\":\n          await initializePayU(paymentData, onSuccess);\n          break;\n        case \"Wallet\":\n          setPaymentStatus(\"success\");\n          onSuccess();\n          break;\n        case \"COD\":\n          setPaymentStatus(\"success\");\n          onSuccess();\n          break;\n        default:\n          throw new Error(\"Unsupported payment method\");\n      }\n    } catch (error) {\n      console.error(\"Error during payment processing:\", error);\n      setPaymentStatus(\"failed\");\n    } finally {\n      setPaymentLoading(false);\n    }\n  };\n\n  const initializeRazorpay = async (paymentData, onSuccess) => {\n    const res = await loadScript(\n      \"https://checkout.razorpay.com/v1/checkout.js\"\n    );\n\n    if (!res) {\n      toast.error(\"Razorpay SDK failed to load. Are you online?\");\n      return;\n    }\n\n    const orderResponse = await createPayment(\n      paymentData.amount,\n      paymentData.currency,\n      paymentData.orderId\n    );\n\n    if (!orderResponse) {\n      toast.error(\"Server error. Are you online?\");\n      return;\n    } else if (orderResponse?.status) {\n      console.log(orderResponse.data);\n      setPayment(orderResponse.data?.order);\n    }\n\n    const options = {\n      key: process.env.REACT_APP_RAZORPAY_KEY,\n      amount: orderResponse.data?.order?.amount.toString(),\n      currency: orderResponse.data?.order?.currency,\n      name: \"Finafid Technologies Pvt.Ltd\",\n      description: \"Test Transaction\",\n      order_id: orderResponse.data?.order?.id,\n      image: logo,\n      handler: async (response) => {\n        const paymentResult = await verifyPayment(response);\n        if (paymentResult?.status) {\n          console.log(paymentResult.data);\n          setPaymentStatus(\"success\");\n          onSuccess(paymentResult.data);\n        }\n      },\n      prefill: {\n        name: user.fullName,\n        email: user.email,\n        contact: user.phone,\n      },\n      notes: {\n        address: paymentData.billingAddress,\n      },\n      theme: {\n        color: \"#c1272d\",\n      },\n    };\n\n    const paymentObject = new window.Razorpay(options);\n    paymentObject.open();\n  };\n\n  const initializePayU = async (paymentData) => {\n    const hashResponse = await generatePayUHash(\n      paymentData.amount.toFixed(2),\n      paymentData.orderId\n    );\n\n    if (!hashResponse || !hashResponse.data.paymentData.hash) {\n      toast.error(\"Failed to initiate PayU payment. Please try again.\");\n      return;\n    }\n\n    // PayU configuration\n    const payUConfig = {\n      key: hashResponse.data.paymentData.key,\n      txnid: paymentData.orderId.toString(),\n      amount: paymentData.amount.toFixed(2),\n      firstname: hashResponse.data.paymentData.firstname,\n      email: hashResponse.data.paymentData.email,\n      phone: hashResponse.data.paymentData.phone,\n      productinfo: hashResponse.data.paymentData.productinfo,\n      surl: hashResponse.data.paymentData.surl,\n      furl: hashResponse.data.paymentData.furl,\n      hash: hashResponse.data.paymentData.hash,\n      service_provider: hashResponse.data.paymentData.service_provider,\n    };\n\n    const form = document.createElement(\"form\");\n    form.method = \"POST\";\n    form.action = hashResponse.data.actionURL;\n\n    Object.keys(payUConfig).forEach((key) => {\n      const input = document.createElement(\"input\");\n      input.type = \"hidden\";\n      input.name = key;\n      input.value = payUConfig[key];\n      form.appendChild(input);\n    });\n\n    document.body.appendChild(form);\n    form.submit();\n  };\n\n  return {\n    payment,\n    processPayment,\n    paymentStatus,\n    paymentLoading,\n  };\n};\n\nexport default usePayment;\n","export default function loadScript(src) {\n  return new Promise((resolve) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = () => {\n      resolve(true);\n    };\n    script.onerror = () => {\n      resolve(false);\n    };\n    document.body.appendChild(script);\n  });\n}\n","import { getCookie } from \"../utils/cookie\";\nimport axiosInstance from \"./axiosInstance\";\n\nconst createPayment = (amount, currency, orderId) => {\n  const token = getCookie(\"accessToken\");\n  return axiosInstance.post(\n    \"/create-order\",\n    { amount, currency, orderId },\n    {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    }\n  );\n};\n\nconst verifyPayment = (data) => {\n  const token = getCookie(\"accessToken\");\n  return axiosInstance.post(\"/verify-payment\", data, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nconst generatePayUHash = (amount, orderId) => {\n  return axiosInstance.post(\"paymentDetail\", { amount, orderId,\n    paymentMode: \"CARD\" });\n};\n\nexport { createPayment, verifyPayment, generatePayUHash };\n","import { useSearchParams } from \"react-router-dom\";\nimport { useEffect, useRef } from \"react\";\n\nexport function useSearchParamsState(\n  searchParamName,\n  defaultValue,\n  replace = false\n) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const isInitialized = useRef(false);\n\n  useEffect(() => {\n    if (!isInitialized.current) {\n      if (!searchParams.has(searchParamName) && defaultValue !== undefined) {\n        const nextParams = new URLSearchParams(searchParams);\n        nextParams.set(searchParamName, defaultValue);\n        setSearchParams(nextParams, { replace: true }); // use replace to avoid adding history entry\n      }\n      isInitialized.current = true;\n    }\n  }, [searchParams, searchParamName, defaultValue, setSearchParams]);\n\n  const acquiredSearchParam = searchParams.get(searchParamName);\n  const searchParamsState = acquiredSearchParam ?? defaultValue;\n\n  const setSearchParamsState = (newState) => {\n    const nextParams = new URLSearchParams(searchParams);\n\n    if (newState !== null && newState !== undefined) {\n      nextParams.set(searchParamName, newState);\n    } else {\n      nextParams.delete(searchParamName);\n    }\n\n    // Compare the current search params with the new search params\n    const currentParams = searchParams.toString();\n    const updatedParams = nextParams.toString();\n\n    if (currentParams !== updatedParams) {\n      setSearchParams(nextParams, { replace: replace });\n    }\n  };\n\n  return [searchParamsState, setSearchParamsState];\n}\n","import { useMemo } from \"react\";\n\nexport const DOTS = \"...\";\n\nconst range = (start, end) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport const usePagination = ({\n  totalCount,\n  limit,\n  siblingCount = 1,\n  currentPage,\n}) => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / limit);\n\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\n    const totalPageNumbers = siblingCount + 5;\n\n    /*\n      If the number of pages is less than the page numbers we want to show in our\n      paginationComponent, we return the range [1..totalPageCount]\n    */\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount\n    );\n\n    /*\n      We do not want to show dots if there is only one position left \n      after/before the left/right page count as that would lead to a change if our Pagination\n      component size which we do not want\n    */\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingCount;\n      let rightRange = range(\n        totalPageCount - rightItemCount + 1,\n        totalPageCount\n      );\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n  }, [totalCount, limit, siblingCount, currentPage]);\n\n  return paginationRange;\n};\n","import { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\nimport { DOTS, usePagination } from \"../hooks/usePagination\";\nimport { Fragment } from \"react\";\n\nconst Pagination = ({\n  onPageChange,\n  totalCount,\n  siblingCount = 1,\n  currentPage,\n  pageSize,\n}) => {\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    limit: pageSize,\n  });\n\n  const lastPage = paginationRange[paginationRange.length - 1];\n\n  if (currentPage === 0 || paginationRange.length < 2) {\n    return null;\n  }\n\n  const onNext = () => {\n    if (currentPage >= lastPage) return;\n    onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    if (currentPage <= 1) return;\n    onPageChange(currentPage - 1);\n  };\n\n  return (\n    <div className=\"my-8\">\n      <ul className=\"relative flex gap-4 max-md:gap-3 w-max mx-auto\">\n        {paginationRange.map((pageNumber, index) => (\n          <Fragment key={index}>\n            {pageNumber === DOTS && (\n              <li className=\"relative h-max top-1\">{DOTS}</li>\n            )}\n\n            {pageNumber !== DOTS && (\n              <li\n                className={`size-10 max-lg:size-8 max-md:size-6 border border-black max-lg:text-sm max-md:text-xs flex justify-center items-center cursor-pointer transition-colors duration-200 ease-in-out ${\n                  pageNumber === currentPage\n                    ? \"bg-primeRed text-white\"\n                    : \"bg-white\"\n                } ${pageNumber !== currentPage && \"hover:bg-mainGray\"}`}\n                onClick={() => onPageChange(pageNumber)}\n              >\n                {pageNumber}\n              </li>\n            )}\n          </Fragment>\n        ))}\n\n        <button\n          className={`absolute -left-10 top-1/2 -translate-y-1/2 ${\n            currentPage <= 1 && \"text-primary\"\n          }`}\n          onClick={onPrevious}\n        >\n          <FiChevronLeft size={28} />\n        </button>\n\n        <button\n          className={`absolute -right-10 top-1/2 -translate-y-1/2 ${\n            currentPage >= lastPage && \"text-primary\"\n          }`}\n          onClick={onNext}\n        >\n          <FiChevronRight size={28} />\n        </button>\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import { useState } from \"react\";\n// import { FaPlus } from \"react-icons/fa6\";\nimport useForm from \"../../hooks/useForm\";\nimport { useWallet } from \"../../contexts/walletContext\";\nimport usePayment from \"../../hooks/usePayment\";\nimport { useToast } from \"../../contexts/toastContext\";\n\nconst Balance = () => {\n  const [isAdding, setIsAdding] = useState(false);\n  const toast = useToast();\n  const { balance, addBalance } = useWallet();\n  const { processPayment, loading: paymentLoading } = usePayment();\n\n  const addBalanceOnSuccess = async (balance) => {\n    await addBalance(balance, \"Wallet Top-Up\");\n    clearForm();\n    setIsAdding(false);\n  };\n\n  const onSubmitHandler = async (data) => {\n    const { balance } = data;\n\n    // Client side validations\n    if (!balance) {\n      toast.error(\"Please enter an amount\");\n      return;\n    }\n\n    await processPayment(\n      {\n        amount: balance,\n        currency: \"INR\",\n        paymentMethod: \"Razorpay\",\n        orderId: Math.floor(Math.random() * 1000000 + 1),\n      },\n      () => addBalanceOnSuccess(balance)\n    );\n  };\n\n  const { formData, handleChange, handleSubmit, clearForm } = useForm(\n    { balance: \"\" },\n    onSubmitHandler\n  );\n\n  return (\n    <div className=\"p-6 bg-white rounded-lg shadow-md space-y-6\">\n      <h4 className=\"text-xl font-semibold text-gray-800\">Wallet Balance</h4>\n      <p className=\"text-success font-bold text-4xl\">₹ {balance}</p>\n      {isAdding ? (\n        <form\n          onSubmit={handleSubmit}\n          className=\"flex flex-wrap items-center gap-4\"\n        >\n          <input\n            type=\"number\"\n            name=\"balance\"\n            min={0}\n            value={formData.balance}\n            onChange={handleChange}\n            placeholder=\"Enter amount\"\n            className=\"px-4 py-2 rounded-md text-base border border-gray-300 focus:border-primeRed focus:outline-none focus:ring-1 focus:ring-primeRed transition duration-150 ease-in-out\"\n          />\n          <button\n            disabled={paymentLoading}\n            className=\"px-5 py-2 bg-primeRed text-white rounded-md text-base font-medium hover:bg-primeRed-dark transition duration-150 ease-in-out\"\n          >\n            Add\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => setIsAdding(false)}\n            className=\"px-5 py-2 border border-gray-300 text-gray-700 rounded-md text-base font-medium hover:bg-gray-100 transition duration-150 ease-in-out\"\n          >\n            Cancel\n          </button>\n        </form>\n      ) : // <button\n      //   onClick={() => setIsAdding(true)}\n      //   className=\"flex items-center gap-2 px-5 py-2 bg-primeRed text-white rounded-md text-base font-medium hover:bg-primeRed-dark transition duration-150 ease-in-out\"\n      // >\n      //   <FaPlus />\n      //   <p>Add Balance</p>\n      // </button>\n      null}\n    </div>\n  );\n};\n\nexport default Balance;\n","import { MdOutlineShoppingCartCheckout } from \"react-icons/md\";\nimport { TbCoinRupee } from \"react-icons/tb\";\nimport { FaRupeeSign } from \"react-icons/fa6\";\nimport { HiOutlineReceiptPercent } from \"react-icons/hi2\";\n\nconst features = {\n  \"fast refunds\": <TbCoinRupee />,\n  \"one-click checkout\": <MdOutlineShoppingCartCheckout />,\n  \"exclusive offers\": <HiOutlineReceiptPercent />,\n  \"balanced funds\": <FaRupeeSign />,\n};\n\nconst Features = () => {\n  return (\n    <div className=\"bg-lightGray p-6 rounded-lg\">\n      <ul className=\"grid grid-cols-4 max-md:grid-cols-2 gap-6 max-lg:gap-4\">\n        {Object.keys(features).map((feature) => (\n          <li\n            key={feature}\n            className=\"flex flex-col items-center text-center gap-2\"\n          >\n            <p className=\"lg:text-3xl text-2xl text-primeRed\">\n              {features[feature]}\n            </p>\n            <p className=\"capitalize font-medium text-sm text-dark\">\n              {feature}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Features;\n","const Alert = () => {\n  return (\n    <div>\n      <h2 className=\"text-lg font-medium text-gray-700\">Note:</h2>\n      <ul className=\"list-disc list-inside text-sm text-gray-600 mt-2\">\n        <li>Finafid wallet can be used to purchase Gift Cards.</li>\n        <li>All transactions are subject to a processing fee.</li>\n        <li>For balance over ₹10,000, additional verification is required.</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Alert;\n","import { useMemo } from \"react\";\nimport Pagination from \"../../components/Pagination\";\nimport { useWallet } from \"../../contexts/walletContext\";\nimport { useSearchParamsState } from \"../../hooks/useSearchParamsState\";\nimport { formatDate } from \"../../utils/dateUtils\";\n\nconst Transaction = () => {\n  const { transactions } = useWallet();\n  const [page, setPage] = useSearchParamsState(\"page\", 1, true);\n  const limit = 5;\n\n  const currentTableData = useMemo(() => {\n    const firstPageIndex = (page - 1) * limit;\n    const lastPageIndex = firstPageIndex + limit;\n    return transactions.slice(firstPageIndex, lastPageIndex);\n  }, [page, transactions, limit]);\n\n  return (\n    <div className=\"space-y-4\">\n      <h2 className=\"text-xl font-medium text-gray-700\">Recent Transactions</h2>\n\n      {transactions.length === 0 ? (\n        <div className=\"w-full\">\n          <h2 className=\"text-center text-sm text-primary\">\n            No Transactions made yet\n          </h2>\n        </div>\n      ) : (\n        <>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full bg-gray-50 border border-gray-200 rounded-lg shadow-md\">\n              <thead>\n                <tr className=\"bg-gray-100 text-gray-600 text-sm leading-normal\">\n                  <th className=\"py-3 px-6 text-left\">Date</th>\n                  <th className=\"py-3 px-6 text-left\">Description</th>\n                  <th className=\"py-3 px-6\">Amount</th>\n                  <th className=\"py-3 px-6\">Status</th>\n                </tr>\n              </thead>\n              <tbody className=\"text-gray-700 text-sm\">\n                {currentTableData.map((transaction, index) => (\n                  <tr\n                    key={index}\n                    className=\"border-b border-gray-200 hover:bg-gray-100\"\n                  >\n                    <td className=\"py-3 px-6 whitespace-nowrap\">\n                      {formatDate(new Date(transaction.date))}\n                    </td>\n                    <td className=\"py-3 px-6\">{transaction.transaction_message}</td>\n                    <td\n                      className={`py-3 px-6 font-medium text-center ${\n                        transaction.amount <= 0\n                          ? \"text-red-500\"\n                          : \"text-green-500\"\n                      }`}\n                    >\n                      {transaction.amount}\n                    </td>\n                    <td\n                      className={`py-3 px-6 text-center ${\n                        transaction.type === \"credit\"\n                          ? \"text-green-600\"\n                          : \"text-yellow-600\"\n                      }`}\n                    >\n                      {transaction.type}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n\n          <Pagination\n            currentPage={parseInt(page, 10)}\n            totalCount={transactions.length}\n            pageSize={limit}\n            onPageChange={(page) => setPage(page.toString())}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Transaction;\n","import { IoWalletOutline } from \"react-icons/io5\";\nimport Balance from \"./Balance\";\nimport Features from \"./Features\";\nimport Alert from \"./Alert\";\nimport { motion } from \"framer-motion\";\nimport Transaction from \"./Transaction\";\n\nconst Wallet = () => {\n  return (\n    <motion.main\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5 }}\n      className=\"flex-1\"\n    >\n      <div className=\"bg-white p-6 rounded-md lg:shadow-md space-y-8\">\n        <div className=\"flex items-center gap-4\">\n          <IoWalletOutline size={32} className=\"text-primeRed\" />\n          <h1 className=\"text-3xl font-semibold text-gray-800\">\n            Finafid Wallet\n          </h1>\n        </div>\n        <Features />\n        <Balance />\n        <Transaction />\n        <Alert />\n      </div>\n    </motion.main>\n  );\n};\n\nexport default Wallet;\n"],"names":["usePayment","payment","setPayment","useState","paymentStatus","setPaymentStatus","paymentLoading","setPaymentLoading","user","useUser","toast","useToast","initializeRazorpay","async","paymentData","onSuccess","_orderResponse$data2","_orderResponse$data2$","_orderResponse$data3","_orderResponse$data3$","_orderResponse$data4","_orderResponse$data4$","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","error","orderResponse","createPayment","amount","currency","orderId","token","getCookie","axiosInstance","post","headers","authorization","concat","_orderResponse$data","status","console","log","data","order","options","key","process","toString","name","description","order_id","id","image","handler","paymentResult","verifyPayment","response","prefill","fullName","email","contact","phone","notes","address","billingAddress","theme","color","window","Razorpay","open","initializePayU","hashResponse","toFixed","paymentMode","generatePayUHash","hash","payUConfig","txnid","firstname","productinfo","surl","furl","service_provider","form","method","action","actionURL","Object","keys","forEach","input","type","value","submit","processPayment","paymentMethod","Error","useSearchParamsState","searchParamName","defaultValue","replace","arguments","length","undefined","searchParams","setSearchParams","useSearchParams","isInitialized","useRef","useEffect","current","has","nextParams","URLSearchParams","set","acquiredSearchParam","get","newState","delete","DOTS","range","start","end","Array","from","_","idx","_ref","onPageChange","totalCount","siblingCount","currentPage","pageSize","paginationRange","limit","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","lastPageIndex","rightRange","middleRange","usePagination","lastPage","_jsx","className","children","_jsxs","map","pageNumber","index","Fragment","onClick","onPrevious","FiChevronLeft","size","onNext","FiChevronRight","Balance","isAdding","setIsAdding","balance","addBalance","useWallet","loading","formData","handleChange","handleSubmit","clearForm","useForm","floor","random","addBalanceOnSuccess","onSubmit","onChange","placeholder","disabled","features","TbCoinRupee","MdOutlineShoppingCartCheckout","HiOutlineReceiptPercent","FaRupeeSign","Features","feature","Alert","Transaction","transactions","page","setPage","currentTableData","firstPageIndex","slice","_Fragment","transaction","formatDate","Date","date","transaction_message","Pagination","parseInt","Wallet","motion","main","initial","opacity","animate","transition","duration","IoWalletOutline"],"sourceRoot":""}