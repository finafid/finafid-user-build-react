{"version":3,"file":"static/js/39.604db820.chunk.js","mappings":"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","sources":["hooks/useOtp.js","hooks/useMultiStepForm.js","pages/Auth/OtpVerification.jsx","pages/Auth/Verification.jsx","pages/Auth/ForgetPassword.jsx","pages/Auth/ResetPassword.jsx","pages/Auth/Signup.jsx","pages/Auth/Login.jsx","pages/Auth/LoginWithNumber.jsx","pages/Auth/index.jsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\n\nexport default function useOtp(length, onSubmit) {\n  const [otp, setOtp] = useState(new Array(length).fill(\"\"));\n  const refs = useRef([]);\n\n  useEffect(() => {\n    refs.current = refs.current?.slice(0, length);\n  }, [length]);\n\n  const handleChange = (index, value) => {\n    if (!/^\\d$/.test(value)) return; // Only allow single digits\n\n    setOtp((prevOtp) => {\n      const newOtp = [...prevOtp];\n      newOtp[index] = value;\n\n      // Focus on the next input\n      if (value !== \"\" && index < length - 1) {\n        refs.current[index + 1].focus();\n      }\n\n      return newOtp;\n    });\n  };\n\n  const handlePaste = (index, pastedData) => {\n    const newOtp = [...otp];\n    pastedData.split(\"\").forEach((value, i) => {\n      if (/^\\d$/.test(value) && index + i < length) {\n        newOtp[index + i] = value;\n      }\n    });\n    setOtp(newOtp);\n  };\n\n  const handleKeyDown = (index, event) => {\n    if (event.key === \"Backspace\") {\n      event.preventDefault();\n\n      setOtp((prevOtp) => {\n        const newOtp = [...prevOtp];\n\n        // Clear current input and focus on the previous one\n        if (otp[index] === \"\") {\n          if (index > 0) {\n            newOtp[index - 1] = \"\";\n            refs.current[index - 1].focus();\n          }\n        } else {\n          newOtp[index] = \"\";\n        }\n\n        return newOtp;\n      });\n    }\n  };\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (otp.every((code) => code !== \"\")) {\n        onSubmit(otp.join(\"\"));\n      } else return null; // OTP is not fully filled\n    },\n    [otp, onSubmit]\n  );\n\n  return { otp, refs, handleChange, handlePaste, handleKeyDown, handleSubmit };\n}\n","import { useState } from \"react\";\n\nconst useMultiStepForm = (initialData, onSubmit, steps, initialStep) => {\n  const [formData, setFormData] = useState(initialData);\n  const [currentStep, setCurrentStep] = useState(initialStep || 1);\n\n  const clearForm = () => setFormData(initialData);\n\n  const goToNextStep = () => {\n    if (currentStep >= steps.length + 1) return;\n    setCurrentStep((prev) => prev + 1);\n  };\n\n  const goToPrevStep = () => {\n    if (currentStep <= 0) return;\n    setCurrentStep((prev) => prev - 1);\n  };\n\n  const goToStep = (index) => {\n    setCurrentStep(index);\n  };\n\n  const handleChange = (e) => {\n    const { name, value, type, files, checked } = e.target;\n\n    if (type === \"file\") {\n      // Handle file inputs\n      setFormData({ ...formData, [name]: files });\n    } else if (type === \"checkbox\") {\n      // Handle checkbox click\n      setFormData({ ...formData, [name]: checked });\n    } else {\n      // For other inputs, update the formData state as usual\n      setFormData({ ...formData, [name]: value });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n\n  return {\n    formData,\n    currentStep,\n    steps,\n    goToNextStep,\n    goToPrevStep,\n    goToStep,\n    handleChange,\n    handleSubmit,\n    clearForm,\n  };\n};\n\nexport default useMultiStepForm;\n","import { sendForgetPasswordOtp, verifyUser } from \"../../api/userApis\";\nimport Button from \"../../components/Button\";\nimport { useToast } from \"../../contexts/toastContext\";\nimport useOtp from \"../../hooks/useOtp\";\n\nconst OtpVerification = ({ formData, goToStep, length = 4 }) => {\n  const toast = useToast();\n\n  const onSubmitHandler = async (otp) => {\n    try {\n      const response = await verifyUser({\n        otp,\n        email: formData.email,\n      });\n\n      if (response?.status) {\n        console.log(response.data);\n        goToStep(5);\n      }\n    } catch (error) {\n      if (!error?.response) {\n        toast.error(\"no server response\");\n      } else if (error.response) {\n        toast.error(error.response?.data?.message);\n      } else {\n        toast.error(\"Server issues!!!\");\n      }\n    }\n  };\n\n  const handleSendMail = async () => {\n    try {\n      const response = await sendForgetPasswordOtp(formData.email);\n      if (response?.status) {\n        toast.success(\"OTP resend successfully\");\n      }\n    } catch (error) {\n      if (!error?.response) {\n        toast.error(\"no server response\");\n      } else if (error.response) {\n        toast.error(error.response?.data?.message);\n      } else {\n        toast.error(\"Server issues!!!\");\n      }\n    }\n  };\n\n  const { otp, refs, handleChange, handlePaste, handleKeyDown, handleSubmit } =\n    useOtp(length, onSubmitHandler);\n\n  const onPasteHandler = (e, index) => {\n    e.preventDefault();\n    const pastedData = e.clipboardData\n      .getData(\"text/plain\")\n      .substr(0, length - index);\n    handlePaste(index, pastedData);\n  };\n\n  return (\n    <div className=\"px-4\">\n      <h2 className=\"capitalize text-2xl font-semibold text-center mt-8 mb-24\">\n        verification\n      </h2>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"FORM-FIELD flex flex-col w-max mx-auto my-10\">\n          <label htmlFor=\"\" className=\"capitalize font-medium text-center my-4\">\n            enter verification code\n          </label>\n\n          <div className=\"flex gap-6\">\n            {Array.from({ length }).map((_, index) => (\n              <input\n                key={index}\n                type=\"text\"\n                ref={(elem) => (refs.current[index] = elem)}\n                maxLength={1}\n                value={otp[index]}\n                onChange={(e) => handleChange(index, e.target.value)}\n                onPaste={(e) => onPasteHandler(e, index)}\n                onKeyDown={(e) => handleKeyDown(index, e)}\n                className=\"border border-primary bg-offWhite outline-none size-10 rounded-full text-center\"\n              />\n            ))}\n          </div>\n        </div>\n\n        <div>\n          <p className=\"text-center text-xs text-slate-400 mb-10\">\n            If you didn't receive a code.{\" \"}\n            <span\n              onClick={handleSendMail}\n              className=\"text-primeRed cursor-pointer hover:underline\"\n            >\n              Resend\n            </span>\n          </p>\n        </div>\n\n        <Button className=\"w-full py-2 px-6 rounded-full font-secondary\">\n          Verify\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default OtpVerification;\n","import { sendOtp, verifyUser } from \"../../api/userApis\";\nimport useOtp from \"../../hooks/useOtp\";\nimport { useToast } from \"../../contexts/toastContext\";\nimport { useAuth } from \"../../contexts/authContext\";\nimport Button from \"../../components/Button\";\n\nconst Verification = ({ formData, length = 4 }) => {\n  const toast = useToast();\n  const { login } = useAuth();\n\n  const onSubmitHandler = async (otp) => {\n    try {\n      const response = await verifyUser({\n        otp,\n        email: formData.email,\n      });\n\n      if (response?.status) {\n        console.log(response.data);\n        login({ email: formData.email, password: formData.password });\n      }\n    } catch (error) {\n      if (!error?.response) {\n        toast.error(\"no server response\");\n      } else if (error.response) {\n        toast.error(error.response?.data?.message);\n      } else {\n        toast.error(\"Server issues!!!\");\n      }\n    }\n  };\n\n  const handleSendMail = async () => {\n    try {\n      const response = await sendOtp(formData.email);\n      if (response?.status) {\n        toast.success(\"OTP resend successfully\");\n      }\n    } catch (error) {\n      if (!error?.response) {\n        toast.error(\"no server response\");\n      } else if (error.response) {\n        toast.error(error.response?.data?.message);\n      } else {\n        toast.error(\"Server issues!!!\");\n      }\n    }\n  };\n\n  const { otp, refs, handleChange, handlePaste, handleKeyDown, handleSubmit } =\n    useOtp(length, onSubmitHandler);\n\n  const onPasteHandler = (e, index) => {\n    e.preventDefault();\n    const pastedData = e.clipboardData\n      .getData(\"text/plain\")\n      .substr(0, length - index);\n    handlePaste(index, pastedData);\n  };\n\n  return (\n    <div className=\"px-4\">\n      <h2 className=\"capitalize text-2xl font-semibold text-center mt-8 mb-24\">\n        verification\n      </h2>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"FORM-FIELD flex flex-col w-max mx-auto my-10\">\n          <label htmlFor=\"\" className=\"capitalize font-medium text-center my-4\">\n            enter verification code\n          </label>\n\n          <div className=\"flex gap-6\">\n            {Array.from({ length }).map((_, index) => (\n              <input\n                key={index}\n                type=\"text\"\n                ref={(elem) => (refs.current[index] = elem)}\n                maxLength={1}\n                value={otp[index]}\n                onChange={(e) => handleChange(index, e.target.value)}\n                onPaste={(e) => onPasteHandler(e, index)}\n                onKeyDown={(e) => handleKeyDown(index, e)}\n                className=\"border border-primary bg-offWhite outline-none size-10 rounded-full text-center\"\n              />\n            ))}\n          </div>\n        </div>\n\n        <div>\n          <p className=\"text-center text-xs text-slate-400 mb-10\">\n            If you didn't receive a code.{\" \"}\n            <span\n              onClick={handleSendMail}\n              className=\"text-primeRed cursor-pointer hover:underline\"\n            >\n              Resend\n            </span>\n          </p>\n        </div>\n\n        <Button className=\"w-full py-2 px-6 rounded-full font-secondary\">\n          Verify\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Verification;\n","import { sendForgetPasswordOtp } from \"../../api/userApis\";\nimport Button from \"../../components/Button\";\nimport InputBox from \"../../components/InputBox\";\nimport { useToast } from \"../../contexts/toastContext\";\nimport { isEmailValid } from \"../../utils/validation\";\n\nconst ForgetPassword = ({ formData, handleChange, clearForm, goToStep }) => {\n  const toast = useToast();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const { email } = formData;\n\n      // Client side validations\n      if (!isEmailValid(email).success) {\n        toast.error(isEmailValid(email).message);\n        return;\n      }\n\n      const response = await sendForgetPasswordOtp(email);\n\n      if (response?.status) {\n        console.log(response.data);\n        goToStep(6);\n      }\n    } catch (error) {\n      if (!error?.response) {\n        toast.error(\"no server response\");\n      } else if (error.response) {\n        toast.error(error.response?.data?.message);\n      } else {\n        toast.error(\"Server issues!!!\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"sm:px-4\">\n      <h2 className=\"capitalize text-2xl font-semibold text-center mt-8 mb-24\">\n        forget password\n      </h2>\n\n      <form onSubmit={handleSubmit} className=\"space-y-8\">\n        <InputBox\n          type=\"email\"\n          label=\"Enter Email Address\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          validation={isEmailValid}\n          align\n          containerClassName=\"flex-col gap-2 max-sm:gap-1\"\n        />\n\n        <p className=\"relative -top-3 text-center text-xs text-primary\">\n          Back to{\" \"}\n          <span\n            className=\"text-primeRed cursor-pointer hover:underline\"\n            onClick={() => goToStep(2)}\n          >\n            sign in\n          </span>\n        </p>\n\n        <div className=\"mt-8\">\n          <Button className=\"w-full px-10 py-2 rounded-full font-secondary text-sm\">\n            send\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ForgetPassword;\n","import Button from \"../../components/Button\";\nimport InputBox from \"../../components/InputBox\";\nimport { resetPassword } from \"../../api/userApis\";\nimport { isPasswordValid } from \"../../utils/validation\";\nimport { useToast } from \"../../contexts/toastContext\";\nimport { useAuth } from \"../../contexts/authContext\";\n\nconst ResetPassword = ({ formData, handleChange, clearForm }) => {\n  const toast = useToast();\n  const { login } = useAuth();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const { newPassword, confirmNewPassword } = formData;\n\n      // Client side validation\n      if (!isPasswordValid(newPassword).success) {\n        console.log(isPasswordValid(newPassword).message);\n        return;\n      } else if (newPassword !== confirmNewPassword) {\n        console.log(\"password and confirm password should match\");\n        return;\n      }\n\n      const response = await resetPassword({\n        email: formData.email,\n        password: newPassword,\n      });\n\n      if (response?.status) {\n        console.log(response.data);\n        toast.success(\"Password updated successfully\");\n\n        login({ email: formData.email, password: newPassword }).then(() => {\n          clearForm();\n        });\n      }\n    } catch (error) {\n      if (!error?.response) {\n        toast.error(\"no server response\");\n      } else if (error.response) {\n        toast.error(error.response?.data?.message);\n      } else {\n        toast.error(\"Server issues!!!\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"sm:px-4\">\n      <h2 className=\"capitalize text-2xl font-semibold text-center mt-8 mb-24\">\n        rest password\n      </h2>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"flex flex-col gap-4 max-sm:gap-2\">\n          <InputBox\n            type=\"password\"\n            label=\"enter new password\"\n            name=\"newPassword\"\n            value={formData.newPassword}\n            onChange={handleChange}\n            validation={isPasswordValid}\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\n          />\n          <InputBox\n            type=\"password\"\n            label=\"confirm password\"\n            name=\"confirmNewPassword\"\n            value={formData.confirmNewPassword}\n            onChange={handleChange}\n            validation={isPasswordValid}\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\n          />\n        </div>\n\n        <div className=\"mt-10\">\n          <Button className=\"w-full py-2 px-6 rounded-full font-secondary\">\n            save\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n","import InputBox from \"../../components/InputBox\";\nimport Button from \"../../components/Button\";\nimport {\n  isEmailValid,\n  isNameValid,\n  isPasswordValid,\n  isPhoneValid,\n} from \"../../utils/validation\";\nimport { registerUser, sendOtp } from \"../../api/userApis\";\nimport { useToast } from \"../../contexts/toastContext\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst Signup = ({ formData, handleChange, goToStep }) => {\n  const toast = useToast();\n  const [searchParams] = useSearchParams();\n  const referralCode = searchParams.get(\"referralCode\");\n\n  const isPasswordMatch = (confirmPassword) => {\n    if (confirmPassword !== formData.password) {\n      return {\n        success: false,\n        message: \"Confirm password should be the same as the password\",\n      };\n    }\n\n    return {\n      success: true,\n      message: \"OK\",\n    };\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const { firstName, lastName, email, phone, password, confirmPassword } =\n        formData;\n      const fullName = firstName + \" \" + lastName;\n\n      // Client side validations\n      if (!isNameValid(fullName).success) {\n        toast.error(isNameValid(fullName).message);\n        return;\n      } else if (!isEmailValid(email).success) {\n        toast.error(isEmailValid(email).message);\n        return;\n      } else if (!isPhoneValid(phone).success) {\n        toast.error(isPhoneValid(phone).message);\n        return;\n      } else if (!isPasswordValid(password).success) {\n        toast.error(isPasswordValid(password).message);\n        return;\n      } else if (password !== confirmPassword) {\n        toast.error(\"Confirm password should be the same as the password\");\n        return;\n      }\n\n      const response = await registerUser({\n        fullName,\n        email,\n        phone,\n        password,\n        referralCode,\n      });\n\n      if (response?.status) {\n        console.log(response.data);\n\n        const isOtpSent = await sendOtp(email);\n        if (isOtpSent?.status) {\n          console.log(isOtpSent.data);\n          goToStep(4);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      if (!error?.response) {\n        toast.error(\"no server response\");\n      } else if (error.response) {\n        toast.error(error.response?.data?.message);\n      } else {\n        toast.error(\"Server issues!!!\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"capitalize text-2xl font-semibold text-center mb-6\">\n        sign up\n      </h2>\n\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div className=\"grid sm:grid-cols-2 gap-x-6 gap-y-3 max-sm:gap-2\">\n          <InputBox\n            label=\"first name\"\n            name=\"firstName\"\n            value={formData.firstName}\n            onChange={handleChange}\n            validation={isNameValid}\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\n          />\n          <InputBox\n            label=\"last name\"\n            name=\"lastName\"\n            value={formData.lastName}\n            onChange={handleChange}\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\n          />\n          <InputBox\n            type=\"email\"\n            label=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            validation={isEmailValid}\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\n          />\n          <InputBox\n            type=\"tel\"\n            label=\"phone\"\n            name=\"phone\"\n            value={formData.phone}\n            onChange={handleChange}\n            validation={isPhoneValid}\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\n          />\n          <InputBox\n            type=\"password\"\n            label=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            validation={isPasswordValid}\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\n          />\n          <InputBox\n            type=\"password\"\n            label=\"confirm password\"\n            name=\"confirmPassword\"\n            value={formData.confirmPassword}\n            onChange={handleChange}\n            validation={isPasswordMatch}\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\n          />\n        </div>\n\n        <div className=\"TERMS-BOX flex items-center gap-1\">\n          <input\n            id=\"user-terms\"\n            type=\"checkbox\"\n            name=\"userTerms\"\n            onChange={handleChange}\n            className=\"accent-primeRed cursor-pointer\"\n          />\n          <label\n            htmlFor=\"user-terms\"\n            className=\"capitalize text-xs text-primeRed select-none\"\n          >\n            agree to terms & conditions\n          </label>\n        </div>\n\n        <Button\n          disabled={!formData.userTerms}\n          className=\"px-10 py-2 rounded-full font-secondary text-sm mx-auto\"\n        >\n          submit\n        </Button>\n\n        <p className=\"text-center text-sm\">\n          Already have an account?{\" \"}\n          <span\n            className=\"text-primeRed hover:underline cursor-pointer\"\n            onClick={() => goToStep(2)}\n          >\n            Login Here\n          </span>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n","import Button from \"../../components/Button\";\nimport InputBox from \"../../components/InputBox\";\nimport { isEmailValid, isPasswordValid } from \"../../utils/validation\";\nimport { useToast } from \"../../contexts/toastContext\";\nimport { useAuth } from \"../../contexts/authContext\";\n\nconst Login = ({ formData, handleChange, goToStep }) => {\n  const toast = useToast();\n  const { login } = useAuth();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const { email_phone, loginPassword } = formData;\n\n      // Client side validations\n      if (!isEmailValid(email_phone).success) {\n        toast.error(isEmailValid(email_phone).message);\n        return;\n      } else if (!isPasswordValid(loginPassword).success) {\n        toast.error(isPasswordValid(loginPassword).message);\n        return;\n      }\n\n      const payload = { email: email_phone, password: loginPassword };\n\n      login(payload);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"sm:px-4\">\n      <h2 className=\"capitalize text-2xl font-semibold text-center mb-16\">\n        login\n      </h2>\n\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div className=\"flex flex-col gap-4 max-sm:gap-2\">\n          <InputBox\n            label=\"email \"\n            name=\"email_phone\"\n            value={formData.email_phone}\n            onChange={handleChange}\n            validation={isEmailValid}\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\n          />\n          <InputBox\n            type=\"password\"\n            label=\"password\"\n            name=\"loginPassword\"\n            value={formData.loginPassword}\n            onChange={handleChange}\n            validation={isPasswordValid}\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\n          />\n        </div>\n\n        <div className=\"FORGET-PASS relative -top-3 flex justify-end\">\n          <p\n            className=\"text-slate-400 text-xs cursor-pointer hover:underline\"\n            onClick={() => goToStep(3)}\n          >\n            Forget Password?\n          </p>\n        </div>\n\n        <Button className=\"px-10 py-2 rounded-full font-secondary text-sm mx-auto\">\n          sign in\n        </Button>\n\n        <p className=\"text-center text-sm\">\n          Don't have an account?{\" \"}\n          <span\n            className=\"text-primeRed hover:underline cursor-pointer\"\n            onClick={() => goToStep(1)}\n          >\n            Sign Up\n          </span>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import { useState, useRef } from \"react\";\nimport Button from \"../../components/Button\";\nimport InputBox from \"../../components/InputBox\";\nimport { useToast } from \"../../contexts/toastContext\";\nimport { useAuth } from \"../../contexts/authContext\";\nimport { getCookie } from \"../../utils/cookie\";\n\nconst LoginWithNumber = ({ formData, handleChange }) => {\n  const toast = useToast();\n  const [auth, setAuth] = useState(() => ({\n    accessToken: getCookie(\"accessToken\"),\n    refreshToken: getCookie(\"refreshToken\"),\n  }));\n  const { sendOtp, verifyMobileOtp } = useAuth(); // API functions\n  const [otpSent, setOtpSent] = useState(false);\n  const [otp, setOtp] = useState(Array(4).fill(\"\")); // Store OTP digits\n  const refs = useRef([]); // Refs for each OTP input\n\n  // Handle OTP sending\n  const handleSendOtp = async (e) => {\n    e.preventDefault();\n    const { phone } = formData;\n\n    if (!phone || phone.length !== 10 || isNaN(phone)) {\n      toast.error(\"Please enter a valid 10-digit mobile number.\");\n      return;\n    }\n\n    try {\n      const response = await sendOtp({ phoneNumber: phone });\n      setOtpSent(true); // Show OTP input\n    } catch (error) {\n      toast.error(\"Error sending OTP. Try again.\");\n    }\n  };\n\n  // Handle OTP input change\n  const handleChangeOtp = (index, value) => {\n    if (!/^\\d*$/.test(value)) return; // Allow only numbers\n\n    const newOtp = [...otp];\n    newOtp[index] = value;\n    setOtp(newOtp);\n\n    // Move to next input if a digit is entered\n    if (value && index < 3) {\n      refs.current[index + 1].focus();\n    }\n  };\n\n  // Handle OTP verification\n  const handleVerifyOtp = async (e) => {\n    e.preventDefault();\n    const enteredOtp = otp.join(\"\");\n\n    if (enteredOtp.length !== 4) {\n      toast.error(\"Please enter a valid 4-digit OTP.\");\n      return;\n    }\n    try {\n      const response = await verifyMobileOtp({ phoneNumber: formData.phone, otp: enteredOtp });\n      console.log(response);\n    } catch (error) {\n      toast.error(\"Error verifying OTP. Try again.\");\n    }\n  };\n\n  // Handle OTP paste\n  const handlePaste = (e, index) => {\n    e.preventDefault();\n    const pastedData = e.clipboardData.getData(\"text\").slice(0, 4).split(\"\");\n    const newOtp = [...otp];\n\n    pastedData.forEach((digit, i) => {\n      if (index + i < 4) newOtp[index + i] = digit;\n    });\n\n    setOtp(newOtp);\n    refs.current[Math.min(index + pastedData.length, 3)].focus();\n  };\n\n  return (\n    <div className=\"sm:px-4\">\n      <div className=\"w-full max-w-md rounded-lg  p-6 \">\n        <h2 className=\"text-2xl font-bold text-center text-gray-800 mb-8\">\n          Login with Mobile Number\n        </h2>\n\n        <form onSubmit={otpSent ? handleVerifyOtp : handleSendOtp} className=\"space-y-6\">\n          {!otpSent ? (\n            <>\n              {/* Mobile Number Input */}\n              <InputBox\n                label=\"Mobile Number\"\n                name=\"phone\"\n                type=\"tel\"\n                placeholder=\"Enter your mobile number\"\n                value={formData.phone}\n                onChange={handleChange}\n                containerClassName=\"flex-col gap-2\"\n                inputClassName=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n              <Button\n                type=\"submit\"\n                className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                Send OTP\n              </Button>\n            </>\n          ) : (\n            <>\n              {/* OTP Input Boxes */}\n              <div className=\"flex justify-center gap-4\">\n                {otp.map((value, index) => (\n                  <input\n                    key={index}\n                    type=\"text\"\n                    ref={(elem) => (refs.current[index] = elem)}\n                    maxLength={1}\n                    value={value}\n                    onChange={(e) => handleChangeOtp(index, e.target.value)}\n                    onPaste={(e) => handlePaste(e, index)}\n                    className=\"w-12 h-12 border border-gray-300 bg-white rounded-lg text-center text-xl focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                ))}\n              </div>\n\n              <Button\n                type=\"submit\"\n                className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 \"\n              >\n                Verify OTP\n              </Button>\n\n              <p className=\"text-center text-sm text-gray-600\">\n                Didn't receive the code?{\" \"}\n                <span\n                  className=\"text-blue-600 hover:underline cursor-pointer\"\n                  onClick={handleSendOtp}\n                >\n                  Resend OTP\n                </span>\n              </p>\n            </>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginWithNumber;","// import { FaFacebook } from \"react-icons/fa\";\nimport bg from \"../../assets/images/Rectangle.png\";\nimport OtpVerification from \"./OtpVerification\";\nimport Verification from \"./Verification\";\nimport ForgetPassword from \"./ForgetPassword\";\nimport ResetPassword from \"./ResetPassword\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\nimport useMultiStepForm from \"../../hooks/useMultiStepForm\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport LoginWithNumber from \"./LoginWithNumber\";\n\nconst Auth = () => {\n  const { formData, handleChange, clearForm, currentStep, goToStep } =\n    useMultiStepForm({}, null, 6, 2);\n\n  const renderStep = () => {\n    switch (currentStep) {\n      case 1:\n        return (\n          <Signup\n            formData={formData}\n            handleChange={handleChange}\n            clearForm={clearForm}\n            goToStep={goToStep}\n          />\n        );\n      case 2:\n        return (\n          <LoginWithNumber\n          formData={formData}\n          handleChange={handleChange}\n          clearForm={clearForm}\n          goToStep={goToStep}\n        />\n          \n        );\n      case 3:\n        return (\n          <ForgetPassword\n            formData={formData}\n            handleChange={handleChange}\n            clearForm={clearForm}\n            goToStep={goToStep}\n          />\n        );\n      case 4:\n        return (\n          <Verification\n            formData={formData}\n            handleChange={handleChange}\n            clearForm={clearForm}\n            goToStep={goToStep}\n          />\n        );\n      case 5:\n        return (\n          <ResetPassword\n            formData={formData}\n            handleChange={handleChange}\n            clearForm={clearForm}\n            goToStep={goToStep}\n          />\n        );\n      case 6:\n        return (\n          <OtpVerification\n            formData={formData}\n            handleChange={handleChange}\n            clearForm={clearForm}\n            goToStep={goToStep}\n          />\n        );\n        case 7:\n          return (\n            <Login\n            formData={formData}\n            handleChange={handleChange}\n            clearForm={clearForm}\n            goToStep={goToStep}\n          />\n          );\n      default:\n        return (\n          <LoginWithNumber\n            formData={formData}\n            handleChange={handleChange}\n            clearForm={clearForm}\n            goToStep={goToStep}\n          />\n        );\n    }\n  };\n\n  const handleGoogleLogin = () => {\n    window.location.href = `${process.env.REACT_APP_API}/google`;\n  };\n\n  return (\n    <div\n      className=\"container max-w-full py-8 max-sm:p-0 bg-cover bg-center bg-no-repeat\"\n      style={{ backgroundImage: `url(${bg})` }}\n    >\n      <div className=\"relative flex flex-col justify-between sm:size-[520px] mx-auto sm:shadow-primary bg-white sm:border sm:border-primary sm:rounded-3xl p-6 space-y-4\">\n        {renderStep()}\n\n        {(currentStep === 1 || currentStep === 2) && (\n          <div className=\"EXTRA-BUTTONS sm:w-max mx-auto flex flex-wrap gap-8 max-sm:gap-3\">\n            <button\n              onClick={handleGoogleLogin}\n              className=\"max-sm:w-full flex justify-start items-center gap-2 rounded-lg text-sm p-2 bg-white border border-[#dd4b39]\"\n            >\n              <FcGoogle size={24} className=\"flex-shrink-0\" />\n              <p>Continue with Google</p>\n            </button>\n            {/* <button className=\"max-sm:w-full flex justify-start items-center gap-2 rounded-lg text-sm p-2 bg-white border border-[#3b5998]\">\n              <FaFacebook size={24} className=\"flex-shrink-0 text-[#3b5998]\" />\n              <p>Continue with Facebook</p>\n            </button> */}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n"],"names":["useOtp","length","onSubmit","otp","setOtp","useState","Array","fill","refs","useRef","useEffect","_refs$current","current","slice","handleSubmit","useCallback","e","preventDefault","every","code","join","handleChange","index","value","test","prevOtp","newOtp","focus","handlePaste","pastedData","split","forEach","i","handleKeyDown","event","key","useMultiStepForm","initialData","steps","initialStep","formData","setFormData","currentStep","setCurrentStep","goToNextStep","prev","goToPrevStep","goToStep","name","type","files","checked","target","_objectSpread","clearForm","_ref","toast","useToast","async","response","verifyUser","email","status","console","log","data","error","_error$response","_error$response$data","message","_jsxs","className","children","_jsx","htmlFor","from","map","_","ref","elem","maxLength","onChange","onPaste","onPasteHandler","clipboardData","getData","substr","onKeyDown","onClick","sendForgetPasswordOtp","success","_error$response2","_error$response2$data","Button","login","useAuth","password","sendOtp","isEmailValid","InputBox","label","validation","align","containerClassName","newPassword","confirmNewPassword","isPasswordValid","resetPassword","then","searchParams","useSearchParams","referralCode","get","firstName","lastName","phone","confirmPassword","fullName","isNameValid","isPhoneValid","registerUser","isOtpSent","id","disabled","userTerms","email_phone","loginPassword","auth","setAuth","accessToken","getCookie","refreshToken","verifyMobileOtp","otpSent","setOtpSent","handleSendOtp","isNaN","phoneNumber","enteredOtp","_Fragment","handleChangeOtp","digit","Math","min","placeholder","inputClassName","Auth","style","backgroundImage","concat","bg","renderStep","Signup","LoginWithNumber","ForgetPassword","Verification","ResetPassword","OtpVerification","Login","handleGoogleLogin","window","location","href","process","FcGoogle","size"],"sourceRoot":""}