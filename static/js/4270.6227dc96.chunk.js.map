{"version":3,"file":"static/js/4270.6227dc96.chunk.js","mappings":"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","sources":["components/AddressForm.jsx","utils/locationUtils.js","components/InputBox.jsx","components/RadioInput.jsx","components/TextareaBox.jsx","hooks/useForm.js","components/AddressBox.jsx","pages/Address/index.jsx","utils/validation.js"],"sourcesContent":["import Button from \"./Button\";\r\nimport InputBox from \"./InputBox\";\r\nimport RadioInput from \"./RadioInput\";\r\nimport TextareaBox from \"./TextareaBox\";\r\nimport { useModal } from \"../contexts/modalContext\";\r\nimport useForm from \"../hooks/useForm\";\r\nimport { useToast } from \"../contexts/toastContext\";\r\nimport { useAddress } from \"../contexts/addressContext\";\r\nimport { isNameValid, isPhoneValid, isPinCodeValid } from \"../utils/validation\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  convertCoordinatesToAddress,\r\n  getGeoLocation,\r\n} from \"../utils/locationUtils\";\r\nimport { MdOutlineAddLocationAlt } from \"react-icons/md\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst AddressForm = ({ initialAddress = {}, edit = false }) => {\r\n  const toast = useToast();\r\n  const { closeModal } = useModal();\r\n  const { addAddress, updateAddress, loading } = useAddress();\r\n  const [fetchingAddress, setFetchingAddress] = useState(false);\r\n\r\n  const onSubmitHandler = async (addressData) => {\r\n    const {\r\n      _id,\r\n      addressType,\r\n      receiverName,\r\n      receiverPhone,\r\n      pinCode,\r\n      locality,\r\n      city,\r\n      state,\r\n    } = addressData;\r\n\r\n    // Client side validations\r\n    if (!addressType) {\r\n      toast.error(\"Please select type of address\");\r\n      return;\r\n    } else if (!isNameValid(receiverName).success) {\r\n      toast.error(isNameValid(receiverName).message);\r\n      return;\r\n    } else if (!isPhoneValid(receiverPhone).success) {\r\n      toast.error(isPhoneValid(receiverPhone).message);\r\n      return;\r\n    } else if (!isPinCodeValid(pinCode).success) {\r\n      toast.error(isPinCodeValid(pinCode).message);\r\n      return;\r\n    } else if (!locality) {\r\n      toast.error(\"Please enter locality\");\r\n      return;\r\n    } else if (!city) {\r\n      toast.error(\"Please enter city\");\r\n      return;\r\n    } else if (!state) {\r\n      toast.error(\"Please enter state\");\r\n      return;\r\n    }\r\n\r\n    if (edit) {\r\n      updateAddress(_id, addressData);\r\n      if (!loading) {\r\n        clearForm();\r\n        closeModal();\r\n      }\r\n    } else {\r\n      addAddress(addressData);\r\n      if (!loading) {\r\n        clearForm();\r\n        closeModal();\r\n      }\r\n    }\r\n  };\r\n\r\n  const { formData, setFormData, handleChange, handleSubmit, clearForm } =\r\n    useForm(initialAddress, onSubmitHandler);\r\n\r\n  const handleAutoFetchAddress = async () => {\r\n    try {\r\n      setFetchingAddress(true);\r\n      const { latitude, longitude } = await getGeoLocation();\r\n\r\n      const addressComponents = await convertCoordinatesToAddress(\r\n        latitude,\r\n        longitude\r\n      );\r\n      console.log(addressComponents);\r\n\r\n      const getAddressComponent = (type) =>\r\n        addressComponents.find((component) => component.types.includes(type))\r\n          ?.long_name || \"\";\r\n\r\n      setFormData({\r\n        ...formData,\r\n        houseNumber: getAddressComponent(\"street_number\"),\r\n        street: getAddressComponent(\"route\"),\r\n        locality:\r\n          getAddressComponent(\"sublocality\") || getAddressComponent(\"locality\"),\r\n        city:\r\n          getAddressComponent(\"locality\") ||\r\n          getAddressComponent(\"administrative_area_level_2\"),\r\n        state: getAddressComponent(\"administrative_area_level_1\"),\r\n        pinCode: getAddressComponent(\"postal_code\"),\r\n        landmark: getAddressComponent(\"point_of_interest\"),\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Failed to fetch address. Please try again.\");\r\n    } finally {\r\n      setFetchingAddress(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative overflow-hidden w-110 max-sm:w-svw max-sm:h-svh max-sm:overflow-y-auto bg-white sm:rounded-xl p-4 space-y-4\">\r\n      <h2 className=\"capitalize text-xl font-bold text-center\">\r\n        {!edit ? \"add address\" : \"edit address\"}\r\n      </h2>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-2\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <div className=\"RADIO-INPUTS flex justify-center items-center gap-6\">\r\n            <RadioInput\r\n              label=\"home\"\r\n              name=\"addressType\"\r\n              value=\"home\"\r\n              checked={formData.addressType === \"home\"}\r\n              onChange={handleChange}\r\n              containerClassName=\"gap-1\"\r\n            />\r\n            <RadioInput\r\n              label=\"office\"\r\n              name=\"addressType\"\r\n              value=\"office\"\r\n              checked={formData.addressType === \"office\"}\r\n              onChange={handleChange}\r\n              containerClassName=\"gap-1\"\r\n            />\r\n            <RadioInput\r\n              label=\"others\"\r\n              name=\"addressType\"\r\n              value=\"others\"\r\n              checked={formData.addressType === \"others\"}\r\n              onChange={handleChange}\r\n              containerClassName=\"gap-1\"\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleAutoFetchAddress}\r\n            className=\"border-2 border-secondary rounded-md p-1 bg-white hover:bg-lightGray transition-colors duration-150 ease-in-out\"\r\n          >\r\n            <MdOutlineAddLocationAlt className=\"text-primeRed text-lg\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"grid sm:grid-cols-2 gap-2\">\r\n          <InputBox\r\n            label=\"enter name\"\r\n            type=\"text\"\r\n            name=\"receiverName\"\r\n            value={formData.receiverName}\r\n            onChange={handleChange}\r\n            containerClassName=\"gap-1 flex-col\"\r\n            labelClassName=\"capitalize font-medium text-xs\"\r\n          />\r\n          <InputBox\r\n            label=\"mobile no\"\r\n            type=\"tel\"\r\n            name=\"receiverPhone\"\r\n            value={formData.receiverPhone}\r\n            onChange={handleChange}\r\n            containerClassName=\"gap-1 flex-col\"\r\n            labelClassName=\"capitalize font-medium text-xs\"\r\n          />\r\n          <InputBox\r\n            label=\"pin code\"\r\n            type=\"text\"\r\n            name=\"pinCode\"\r\n            value={formData.pinCode}\r\n            onChange={handleChange}\r\n            containerClassName=\"gap-1 flex-col\"\r\n            labelClassName=\"capitalize font-medium text-xs\"\r\n          />\r\n          <InputBox\r\n            label=\"house no\"\r\n            type=\"text\"\r\n            name=\"houseNumber\"\r\n            value={formData.houseNumber}\r\n            onChange={handleChange}\r\n            containerClassName=\"gap-1 flex-col\"\r\n            labelClassName=\"capitalize font-medium text-xs\"\r\n          />\r\n        </div>\r\n        <TextareaBox\r\n          label=\"street\"\r\n          type=\"text\"\r\n          name=\"street\"\r\n          value={formData.street}\r\n          onChange={handleChange}\r\n          rows={3}\r\n          containerClassName=\"gap-1 flex-col\"\r\n          labelClassName=\"capitalize font-medium text-xs\"\r\n        />\r\n        <TextareaBox\r\n          label=\"locality\"\r\n          type=\"text\"\r\n          name=\"locality\"\r\n          value={formData.locality}\r\n          onChange={handleChange}\r\n          rows={3}\r\n          containerClassName=\"gap-1 flex-col\"\r\n          labelClassName=\"capitalize font-medium text-xs\"\r\n        />\r\n        <div className=\"grid sm:grid-cols-2 gap-2\">\r\n          <InputBox\r\n            label=\"city\"\r\n            type=\"text\"\r\n            name=\"city\"\r\n            value={formData.city}\r\n            onChange={handleChange}\r\n            containerClassName=\"gap-1 flex-col\"\r\n            labelClassName=\"capitalize font-medium text-xs\"\r\n          />\r\n          <InputBox\r\n            label=\"state\"\r\n            type=\"text\"\r\n            name=\"state\"\r\n            value={formData.state}\r\n            onChange={handleChange}\r\n            containerClassName=\"gap-1 flex-col\"\r\n            labelClassName=\"capitalize font-medium text-xs\"\r\n          />\r\n          <InputBox\r\n            label=\"landmark\"\r\n            type=\"text\"\r\n            name=\"landmark\"\r\n            value={formData.landmark}\r\n            onChange={handleChange}\r\n            containerClassName=\"gap-1 flex-col\"\r\n            labelClassName=\"capitalize font-medium text-xs\"\r\n          />\r\n          <InputBox\r\n            label=\"alternate number\"\r\n            type=\"tel\"\r\n            placeholder=\"alternate mobile (optional)\"\r\n            name=\"alternatePhone\"\r\n            value={formData.alternatePhone}\r\n            onChange={handleChange}\r\n            containerClassName=\"gap-1 flex-col\"\r\n            labelClassName=\"capitalize font-medium text-xs\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-end gap-4 pt-2\">\r\n          <Button\r\n            type=\"button\"\r\n            reverse\r\n            onClick={closeModal}\r\n            className=\"h-8 px-4 rounded-md\"\r\n          >\r\n            cancel\r\n          </Button>\r\n          <Button className=\"h-8 px-4 rounded-md\">save</Button>\r\n        </div>\r\n      </form>\r\n\r\n      {fetchingAddress && <Loading />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","import axios from \"axios\";\r\n\r\nconst getGeoLocation = () => {\r\n  return new Promise((resolve, reject) => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          resolve({ latitude, longitude });\r\n        },\r\n        (error) => {\r\n          reject(error);\r\n        },\r\n        { enableHighAccuracy: true, timeout: 10000, maximumAge: 0 }\r\n      );\r\n    } else {\r\n      reject(new Error(\"Geolocation is not supported by this browser.\"));\r\n    }\r\n  });\r\n};\r\n\r\nconst convertCoordinatesToAddress = async (latitude, longitude) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\r\n    );\r\n\r\n    const data = await response.data;\r\n    if (data.results && data.results.length > 0) {\r\n      return data.results[0].address_components;\r\n    } else {\r\n      throw new Error(\"No address found for the given coordinates.\");\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw new Error(\r\n      \"Failed to convert coordinates to address. Please try again later.\"\r\n    );\r\n  }\r\n};\r\n\r\nexport { getGeoLocation, convertCoordinatesToAddress };\r\n","import { useState } from \"react\";\r\nimport { FiEye, FiEyeOff } from \"react-icons/fi\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BiError } from \"react-icons/bi\";\r\n\r\nconst InputBox = ({\r\n  value = \"\",\r\n  onChange,\r\n  name,\r\n  label,\r\n  type,\r\n  placeholder,\r\n  align = false,\r\n  disabled = false,\r\n  readOnly = false,\r\n  min = 0,\r\n  max = Infinity,\r\n  autoComplete,\r\n  autoCorrect,\r\n  order,\r\n  required = false,\r\n  className = \"w-full px-4 py-2 rounded-md text-xs border border-secondary bg-offWhite\",\r\n  labelClassName = \"capitalize text-sm font-medium\",\r\n  containerClassName = \"flex-col gap-2\",\r\n  validation,\r\n}) => {\r\n  const id = label?.replace(\" \", \"-\").toLowerCase();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [errMessage, setErrMessage] = useState(null);\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (!validation) return;\r\n    else if (!validation(value).success) {\r\n      setErrMessage(validation(value).message);\r\n    } else if (validation(value).success) {\r\n      setErrMessage(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`relative flex ${containerClassName}`}>\r\n      {label && (\r\n        <label\r\n          htmlFor={id}\r\n          className={`${labelClassName}`}\r\n          style={align ? { textAlign: \"center\" } : {}}\r\n        >\r\n          {label}\r\n        </label>\r\n      )}\r\n\r\n      {type !== \"file\" && (\r\n        <input\r\n          id={id}\r\n          type={showPassword ? \"text\" : type}\r\n          name={name}\r\n          value={value}\r\n          placeholder={placeholder || label}\r\n          onChange={onChange}\r\n          onBlur={handleBlur}\r\n          onWheel={(e) => e.target.blur()}\r\n          required={required}\r\n          disabled={disabled}\r\n          readOnly={readOnly}\r\n          min={type === \"number\" ? min : undefined}\r\n          max={type === \"number\" ? max : undefined}\r\n          className={`outline-none placeholder:capitalize read-only:bg-white read-only:cursor-default ${\r\n            type === \"number\" &&\r\n            \"[appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\r\n          } ${disabled && \"opacity-50\"} ${className}`}\r\n        />\r\n      )}\r\n\r\n      {errMessage && (\r\n        <div className=\"absolute top-full w-full p-1 flex items-start gap-1 text-error z-[1] bg-white rounded\">\r\n          <BiError size={12} />\r\n          <p className=\"text-xxs leading-tight\">{errMessage}</p>\r\n        </div>\r\n      )}\r\n\r\n      {type === \"password\" && (\r\n        <button\r\n          type=\"button\"\r\n          onClick={togglePasswordVisibility}\r\n          className=\"absolute right-4 bottom-3 text-secondary text-sm\"\r\n        >\r\n          {showPassword ? <FiEye /> : <FiEyeOff />}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n\r\nInputBox.propTypes = {\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  options: PropTypes.array,\r\n  onChange: PropTypes.func,\r\n  className: PropTypes.string,\r\n  containerClassName: PropTypes.string,\r\n};\r\n","const RadioInput = ({\r\n  value = \"\",\r\n  onChange,\r\n  name,\r\n  label,\r\n  checked = false,\r\n  disabled = false,\r\n  align = \"right\",\r\n  required = false,\r\n  className,\r\n  labelClassName = \"capitalize text-sm font-medium\",\r\n  containerClassName,\r\n}) => {\r\n  const id = label?.replace(\" \", \"-\").toLowerCase();\r\n\r\n  return (\r\n    <div className={`relative flex gap-2 items-start ${containerClassName}`}>\r\n      {label && align === \"left\" && (\r\n        <label htmlFor={id} className={labelClassName}>\r\n          {label}\r\n        </label>\r\n      )}\r\n      <div className={`grid place-items-center mt-[2px] ${className}`}>\r\n        <input\r\n          id={id}\r\n          type=\"radio\"\r\n          name={name}\r\n          value={value}\r\n          checked={checked}\r\n          disabled={disabled}\r\n          onChange={onChange}\r\n          required={required}\r\n          className=\"peer col-start-1 row-start-1 appearance-none shrink-0 size-4 border border-primeRed rounded-full disabled:border-primary disabled:cursor-not-allowed hover:cursor-pointer\"\r\n        />\r\n        <span className=\"pointer-events-none col-start-1 row-start-1 size-2 rounded-full peer-checked:bg-primeRed peer-checked:peer-disabled:bg-mainGray\" />\r\n      </div>\r\n      {label && align === \"right\" && (\r\n        <label htmlFor={id} className={labelClassName}>\r\n          {label}\r\n        </label>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RadioInput;\r\n","import { useState } from \"react\";\r\n\r\nconst TextareaBox = ({\r\n  value = \"\",\r\n  onChange,\r\n  name,\r\n  label,\r\n  align = false,\r\n  autoComplete,\r\n  autoCorrect,\r\n  order,\r\n  maxLength,\r\n  placeholder,\r\n  required = false,\r\n  rows = 5,\r\n  className = \"w-full px-4 py-2 rounded-md text-xs resize-none border border-secondary bg-offWhite\",\r\n  labelClassName = \"capitalize text-sm font-medium\",\r\n  containerClassName = \"gap-2\",\r\n}) => {\r\n  const id = label?.replace(\" \", \"-\").toLowerCase();\r\n  const [length, setLength] = useState(0);\r\n  const onChangeHandler = (event) => {\r\n    const { value } = event.target;\r\n    setLength(value.length);\r\n    onChange(event);\r\n  };\r\n\r\n  return (\r\n    <div className={\"relative flex flex-col\" + \" \".concat(containerClassName)}>\r\n      <div className=\"flex justify-between items-center\">\r\n        {label && (\r\n          <label\r\n            htmlFor={id}\r\n            className={`${labelClassName}`}\r\n            style={align ? { textAlign: \"center\" } : {}}\r\n          >\r\n            {label}\r\n          </label>\r\n        )}\r\n\r\n        {maxLength && (\r\n          <p className=\"font-medium font-secondary text-sm\">\r\n            {length}/{maxLength}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      <textarea\r\n        id={id}\r\n        name={name}\r\n        value={value}\r\n        placeholder={placeholder || label}\r\n        onChange={onChangeHandler}\r\n        required={required}\r\n        maxLength={maxLength}\r\n        rows={rows}\r\n        className={\r\n          \" outline-none placeholder:capitalize\" +\r\n          \" \".concat(className.toString())\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextareaBox;\r\n","import { useState } from \"react\";\r\n\r\nexport default function useForm(initialData, onSubmit) {\r\n  const [formData, setFormData] = useState(initialData);\r\n\r\n  const clearForm = () => setFormData(initialData);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, files, checked } = e.target;\r\n\r\n    if (type === \"file\") {\r\n      // Handle file inputs\r\n      setFormData({ ...formData, [name]: files });\r\n    } else if (type === \"checkbox\") {\r\n      // Handle checkbox click\r\n      setFormData({ ...formData, [name]: checked });\r\n    } else {\r\n      // For other inputs, update the formData state as usual\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(formData);\r\n  };\r\n\r\n  return { formData, setFormData, handleChange, handleSubmit, clearForm };\r\n}\r\n","import { FaCirclePlus, FaPhone } from \"react-icons/fa6\";\r\nimport Button from \"./Button\";\r\nimport { useModal } from \"../contexts/modalContext\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport { FiTrash2 } from \"react-icons/fi\";\r\nimport { useAddress } from \"../contexts/addressContext\";\r\n\r\nconst AddressBox = ({ address }) => {\r\n  const { openModal } = useModal();\r\n  const { setDefault, removeAddress } = useAddress();\r\n\r\n  const handleDefaultAddress = () => {\r\n    setDefault(address._id);\r\n  };\r\n\r\n  const handleDeleteAddress = () => {\r\n    removeAddress(address._id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-64 max-sm:w-full h-44 max-sm:h-auto border border-dashed border-darkGray rounded-md flex flex-shrink-0 justify-center items-center cursor-pointer bg-white overflow-hidden\">\r\n      {!address ? (\r\n        <div\r\n          onClick={() => openModal(<AddressForm />)}\r\n          className=\"NO-ADDRESS size-full text-primeRed flex sm:flex-col justify-center items-center gap-y-2 gap-x-4 hover:bg-offWhite p-4\"\r\n        >\r\n          <FaCirclePlus size={24} />\r\n          <p className=\"capitalize text-lg font-secondary font-medium\">\r\n            add new address\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"HAVE=-ADDRESS relative size-full p-3 flex flex-col items-start\">\r\n          {address?.isDefault && (\r\n            <span className=\"absolute top-3 right-3 text-[8px] text-white font-medium px-1 rounded-sm pt-[1px] bg-success\">\r\n              DEFAULT\r\n            </span>\r\n          )}\r\n          <div className=\"flex items-center justify-center gap-2 font-medium leading-tight pr-12\">\r\n            <h3>{address?.receiverName}</h3>\r\n            <p className=\"uppercase text-[8px] px-1 py-[1px] h-max font-semibold bg-mainGray rounded-sm\">\r\n              {address?.addressType}\r\n            </p>\r\n          </div>\r\n          <div className=\"flex justify-start items-center gap-2 text-xs text-secondary\">\r\n            <FaPhone />\r\n            <p>{address?.receiverPhone || \"N/A\"}</p>\r\n            {address?.alternatePhone && (\r\n              <p>\r\n                <span className=\"mx-1\">/</span>\r\n                {address.alternatePhone}\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"text-sm font-medium text-secondary flex flex-wrap gap-x-1 mt-2\">\r\n            {address?.houseNumber && <p>{address.houseNumber},</p>}\r\n            {address?.street && <p>{address.street},</p>}\r\n            {address?.locality && <p>{address.locality},</p>}\r\n            {address?.landmark && <p>{address.landmark},</p>}\r\n            {address?.city && <p>{address.city},</p>}\r\n            {address?.state && <p>{address.state},</p>}\r\n            {address?.pinCode && <p>{address.pinCode}</p>}\r\n          </div>\r\n\r\n          <div className=\"BTN-SECTION w-full flex justify-between items-center gap-2 mt-auto max-sm:mt-4\">\r\n            <div className=\"flex items-center gap-4\">\r\n              <Button\r\n                reverse\r\n                onClick={() =>\r\n                  openModal(<AddressForm initialAddress={address} edit />)\r\n                }\r\n                className=\"h-6 px-3 py-1 text-xs rounded-md font-secondary font-medium\"\r\n              >\r\n                Edit\r\n              </Button>\r\n              {!address?.isDefault && (\r\n                <Button\r\n                  onClick={handleDefaultAddress}\r\n                  className=\"h-6 text-xs px-6 py-1 rounded-md font-secondary\"\r\n                >\r\n                  set as default\r\n                </Button>\r\n              )}\r\n            </div>\r\n            <button onClick={handleDeleteAddress}>\r\n              <FiTrash2 size={18} className=\"text-primeRed\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressBox;\r\n","import placeMarker from \"../../assets/images/place-marker.png\";\r\nimport AddressBox from \"../../components/AddressBox\";\r\nimport AddressForm from \"../../components/AddressForm\";\r\nimport Button from \"../../components/Button\";\r\nimport { TbAddressBook } from \"react-icons/tb\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport { useModal } from \"../../contexts/modalContext\";\r\nimport { useAddress } from \"../../contexts/addressContext\";\r\n\r\nconst Address = () => {\r\n  const { openModal } = useModal();\r\n  const { addresses } = useAddress();\r\n\r\n  return (\r\n    // <main className=\"w-full p-8 bg-offWhite\">\r\n    //   <h1 className=\"text-2xl font-medium mb-8 font-secondary flex items-center gap-4\">\r\n    //     <TbAddressBook size={28} className=\"text-primeRed\" />\r\n    //     Manage Address\r\n    //   </h1>\r\n    //   {addresses.length === 0 ? (\r\n    //     <div className=\"NO-ADDRESS flex flex-col justify-center items-center\">\r\n    //       <img src={placeMarker} alt=\"place-marker\" className=\"size-40\" />\r\n    //       <p className=\"text-primary font-secondary text-sm my-4\">\r\n    //         You haven't created any address\r\n    //       </p>\r\n    //       <Button\r\n    //         onClick={() => openModal(<AddressForm />)}\r\n    //         className=\"flex justify-center items-center gap-2 rounded-lg px-4 py-2 text-lg font-secondary\"\r\n    //       >\r\n    //         <FiPlus size={24} />\r\n    //         <p>add address</p>\r\n    //       </Button>\r\n    //     </div>\r\n    //   ) : (\r\n    //     <div className=\"HAVE-ADDRESS flex flex-wrap justify-start items-center gap-8\">\r\n    //       <AddressBox />\r\n    //       {addresses.map((address, index) => (\r\n    //         <AddressBox key={index} address={address} />\r\n    //       ))}\r\n    //     </div>\r\n    //   )}\r\n    // </main>\r\n    <main className=\"w-full flex flex-col p-6 bg-white rounded-lg lg:shadow-md space-y-6\">\r\n      <div className=\"flex items-center gap-4\">\r\n        <TbAddressBook size={32} className=\"text-primeRed\" />\r\n        <h1 className=\"text-2xl font-semibold text-gray-800\">Manage Address</h1>\r\n      </div>\r\n\r\n      {addresses.length === 0 ? (\r\n        <div className=\"flex flex-col items-center justify-center text-center py-16\">\r\n          <img src={placeMarker} alt=\"No address\" className=\"w-24 h-24 mb-6\" />\r\n          <p className=\"text-gray-600 text-base mb-6\">\r\n            You haven't created any address yet.\r\n          </p>\r\n          <Button\r\n            onClick={() => openModal(<AddressForm />)}\r\n            className=\"flex items-center gap-2 bg-primeRed text-white px-5 py-2 rounded-lg hover:bg-primeRed-dark transition-colors duration-200\"\r\n          >\r\n            <FiPlus size={20} />\r\n            <p>Add Address</p>\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"flex flex-wrap items-center justify-center sm:gap-8 gap-4\">\r\n          <AddressBox />\r\n          {addresses.map((address, index) => (\r\n            <AddressBox key={index} address={address} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Address;\r\n","import {\r\n  EMAIL_REGEX,\r\n  NAME_REGEX,\r\n  PASSWORD_REGEX,\r\n  PHONE_REGEX,\r\n  PIN_CODE_REGEX,\r\n} from \"./Constants\";\r\n\r\nconst isNameValid = (name) => {\r\n  if (!name)\r\n    return {\r\n      success: false,\r\n      message: \"Name is required\",\r\n    };\r\n  if (name.length < 3)\r\n    return {\r\n      success: false,\r\n      message: \"Name should be more than 3 characters\",\r\n    };\r\n\r\n  const isValid = NAME_REGEX.test(name);\r\n  if (!isValid)\r\n    return {\r\n      success: false,\r\n      message: \"Please enter a valid name\",\r\n    };\r\n\r\n  return {\r\n    success: true,\r\n    message: \"OK\",\r\n  };\r\n};\r\n\r\nconst isEmailValid = (email) => {\r\n  if (!email)\r\n    return {\r\n      success: false,\r\n      message: \"Email is required\",\r\n    };\r\n  if (email.length > 254)\r\n    return {\r\n      success: false,\r\n      message: \"Please enter a valid email\",\r\n    };\r\n\r\n  const isValid = EMAIL_REGEX.test(email);\r\n  if (!isValid)\r\n    return {\r\n      success: false,\r\n      message: \"Please enter a valid email\",\r\n    };\r\n\r\n  const parts = email.split(\"@\");\r\n  if (parts[0].length > 64)\r\n    return {\r\n      success: false,\r\n      message: \"Please enter a valid email\",\r\n    };\r\n\r\n  return {\r\n    success: true,\r\n    message: \"OK\",\r\n  };\r\n};\r\n\r\nconst isPhoneValid = (phone) => {\r\n  if (!phone)\r\n    return {\r\n      success: false,\r\n      message: \"Phone is required\",\r\n    };\r\n\r\n  const isValid = PHONE_REGEX.test(phone);\r\n  if (!isValid)\r\n    return {\r\n      success: false,\r\n      message: \"Please enter a valid phone\",\r\n    };\r\n\r\n  return {\r\n    success: true,\r\n    message: \"OK\",\r\n  };\r\n};\r\n\r\nconst isPasswordValid = (password) => {\r\n  if (!password)\r\n    return {\r\n      success: false,\r\n      message: \"Password is required\",\r\n    };\r\n\r\n  const isValid = PASSWORD_REGEX.test(password);\r\n  if (!isValid)\r\n    return {\r\n      success: false,\r\n      message:\r\n        \"Your password must be have at least 8 characters long, 1 uppercase & 1 lowercase character, 1 number\",\r\n    };\r\n\r\n  return {\r\n    success: true,\r\n    message: \"OK\",\r\n  };\r\n};\r\n\r\nconst isPinCodeValid = (pinCode) => {\r\n  if (!pinCode) {\r\n    return {\r\n      success: false,\r\n      message: \"Pin code is required\",\r\n    };\r\n  }\r\n\r\n  const isValid = PIN_CODE_REGEX.test(pinCode);\r\n  if (!isValid) {\r\n    return {\r\n      success: false,\r\n      message: \"Please enter a valid pin code\",\r\n    };\r\n  }\r\n\r\n  return {\r\n    success: true,\r\n    message: \"OK\",\r\n  };\r\n};\r\n\r\nexport {\r\n  isNameValid,\r\n  isEmailValid,\r\n  isPhoneValid,\r\n  isPasswordValid,\r\n  isPinCodeValid,\r\n};\r\n"],"names":["_ref","initialAddress","edit","toast","useToast","closeModal","useModal","addAddress","updateAddress","loading","useAddress","fetchingAddress","setFetchingAddress","useState","formData","setFormData","handleChange","handleSubmit","clearForm","useForm","async","_id","addressType","receiverName","receiverPhone","pinCode","locality","city","state","addressData","isNameValid","success","isPhoneValid","isPinCodeValid","error","message","_jsxs","className","children","_jsx","onSubmit","RadioInput","label","name","value","checked","onChange","containerClassName","type","onClick","latitude","longitude","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","enableHighAccuracy","timeout","maximumAge","Error","addressComponents","response","axios","get","data","results","length","address_components","console","log","convertCoordinatesToAddress","getAddressComponent","_addressComponents$fi","find","component","types","includes","long_name","houseNumber","street","landmark","MdOutlineAddLocationAlt","InputBox","labelClassName","TextareaBox","rows","placeholder","alternatePhone","Button","reverse","Loading","align","disabled","readOnly","min","max","Infinity","autoComplete","autoCorrect","order","required","validation","id","replace","toLowerCase","showPassword","setShowPassword","errMessage","setErrMessage","htmlFor","style","textAlign","onBlur","handleBlur","onWheel","e","target","blur","undefined","BiError","size","togglePasswordVisibility","FiEye","FiEyeOff","maxLength","setLength","concat","event","toString","initialData","files","preventDefault","address","openModal","setDefault","removeAddress","isDefault","FaPhone","AddressForm","handleDefaultAddress","handleDeleteAddress","FiTrash2","FaCirclePlus","Address","addresses","TbAddressBook","src","alt","FiPlus","AddressBox","map","index","NAME_REGEX","test","isEmailValid","email","EMAIL_REGEX","split","phone","PHONE_REGEX","isPasswordValid","password","PASSWORD_REGEX","PIN_CODE_REGEX"],"sourceRoot":""}