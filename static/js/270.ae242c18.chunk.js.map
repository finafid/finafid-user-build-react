{"version":3,"file":"static/js/270.ae242c18.chunk.js","mappings":"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","sources":["components/RadioInput.jsx","components/AddressForm.jsx","utils/locationUtils.js","components/AddressBox.jsx","pages/Address/index.jsx"],"sourcesContent":["const RadioInput = ({\n  value = \"\",\n  onChange,\n  name,\n  label,\n  checked = false,\n  disabled = false,\n  align = \"right\",\n  required = false,\n  className,\n  labelClassName = \"capitalize text-sm font-medium\",\n  containerClassName,\n}) => {\n  const id = label?.replace(\" \", \"-\").toLowerCase();\n\n  return (\n    <div className={`relative flex gap-2 items-start ${containerClassName}`}>\n      {label && align === \"left\" && (\n        <label htmlFor={id} className={labelClassName}>\n          {label}\n        </label>\n      )}\n      <div className={`grid place-items-center mt-[2px] ${className}`}>\n        <input\n          id={id}\n          type=\"radio\"\n          name={name}\n          value={value}\n          checked={checked}\n          disabled={disabled}\n          onChange={onChange}\n          required={required}\n          className=\"peer col-start-1 row-start-1 appearance-none shrink-0 size-4 border border-primeRed rounded-full disabled:border-primary disabled:cursor-not-allowed hover:cursor-pointer\"\n        />\n        <span className=\"pointer-events-none col-start-1 row-start-1 size-2 rounded-full peer-checked:bg-primeRed peer-checked:peer-disabled:bg-mainGray\" />\n      </div>\n      {label && align === \"right\" && (\n        <label htmlFor={id} className={labelClassName}>\n          {label}\n        </label>\n      )}\n    </div>\n  );\n};\n\nexport default RadioInput;\n","import Button from \"./Button\";\nimport InputBox from \"./InputBox\";\nimport RadioInput from \"./RadioInput\";\nimport TextareaBox from \"./TextareaBox\";\nimport { useModal } from \"../contexts/modalContext\";\nimport useForm from \"../hooks/useForm\";\nimport { useToast } from \"../contexts/toastContext\";\nimport { useAddress } from \"../contexts/addressContext\";\nimport { isNameValid, isPhoneValid, isPinCodeValid } from \"../utils/validation\";\nimport { useState } from \"react\";\nimport {\n  convertCoordinatesToAddress,\n  getGeoLocation,\n} from \"../utils/locationUtils\";\nimport { MdOutlineAddLocationAlt } from \"react-icons/md\";\nimport Loading from \"./Loading\";\n\nconst AddressForm = ({ initialAddress = {}, edit = false }) => {\n  const toast = useToast();\n  const { closeModal } = useModal();\n  const { addAddress, updateAddress, loading } = useAddress();\n  const [fetchingAddress, setFetchingAddress] = useState(false);\n\n  const onSubmitHandler = async (addressData) => {\n    const {\n      _id,\n      addressType,\n      receiverName,\n      receiverPhone,\n      pinCode,\n      locality,\n      city,\n      state,\n    } = addressData;\n\n    // Client side validations\n    if (!addressType) {\n      toast.error(\"Please select type of address\");\n      return;\n    } else if (!isNameValid(receiverName).success) {\n      toast.error(isNameValid(receiverName).message);\n      return;\n    } else if (!isPhoneValid(receiverPhone).success) {\n      toast.error(isPhoneValid(receiverPhone).message);\n      return;\n    } else if (!isPinCodeValid(pinCode).success) {\n      toast.error(isPinCodeValid(pinCode).message);\n      return;\n    } else if (!locality) {\n      toast.error(\"Please enter locality\");\n      return;\n    } else if (!city) {\n      toast.error(\"Please enter city\");\n      return;\n    } else if (!state) {\n      toast.error(\"Please enter state\");\n      return;\n    }\n\n    if (edit) {\n      updateAddress(_id, addressData);\n      if (!loading) {\n        clearForm();\n        closeModal();\n      }\n    } else {\n      addAddress(addressData);\n      if (!loading) {\n        clearForm();\n        closeModal();\n      }\n    }\n  };\n\n  const { formData, setFormData, handleChange, handleSubmit, clearForm } =\n    useForm(initialAddress, onSubmitHandler);\n\n  const handleAutoFetchAddress = async () => {\n    try {\n      setFetchingAddress(true);\n      const { latitude, longitude } = await getGeoLocation();\n\n      const addressComponents = await convertCoordinatesToAddress(\n        latitude,\n        longitude\n      );\n      console.log(addressComponents);\n\n      const getAddressComponent = (type) =>\n        addressComponents.find((component) => component.types.includes(type))\n          ?.long_name || \"\";\n\n      setFormData({\n        ...formData,\n        houseNumber: getAddressComponent(\"street_number\"),\n        street: getAddressComponent(\"route\"),\n        locality:\n          getAddressComponent(\"sublocality\") || getAddressComponent(\"locality\"),\n        city:\n          getAddressComponent(\"locality\") ||\n          getAddressComponent(\"administrative_area_level_2\"),\n        state: getAddressComponent(\"administrative_area_level_1\"),\n        pinCode: getAddressComponent(\"postal_code\"),\n        landmark: getAddressComponent(\"point_of_interest\"),\n      });\n    } catch (error) {\n      toast.error(\"Failed to fetch address. Please try again.\");\n    } finally {\n      setFetchingAddress(false);\n    }\n  };\n\n  return (\n    <div className=\"relative overflow-hidden w-110 max-sm:w-svw max-sm:h-svh max-sm:overflow-y-auto bg-white sm:rounded-xl p-4 space-y-4\">\n      <h2 className=\"capitalize text-xl font-bold text-center\">\n        {!edit ? \"add address\" : \"edit address\"}\n      </h2>\n\n      <form onSubmit={handleSubmit} className=\"space-y-2\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"RADIO-INPUTS flex justify-center items-center gap-6\">\n            <RadioInput\n              label=\"home\"\n              name=\"addressType\"\n              value=\"home\"\n              checked={formData.addressType === \"home\"}\n              onChange={handleChange}\n              containerClassName=\"gap-1\"\n            />\n            <RadioInput\n              label=\"office\"\n              name=\"addressType\"\n              value=\"office\"\n              checked={formData.addressType === \"office\"}\n              onChange={handleChange}\n              containerClassName=\"gap-1\"\n            />\n            <RadioInput\n              label=\"others\"\n              name=\"addressType\"\n              value=\"others\"\n              checked={formData.addressType === \"others\"}\n              onChange={handleChange}\n              containerClassName=\"gap-1\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            onClick={handleAutoFetchAddress}\n            className=\"border-2 border-secondary rounded-md p-1 bg-white hover:bg-lightGray transition-colors duration-150 ease-in-out\"\n          >\n            <MdOutlineAddLocationAlt className=\"text-primeRed text-lg\" />\n          </button>\n        </div>\n\n        <div className=\"grid sm:grid-cols-2 gap-2\">\n          <InputBox\n            label=\"enter name\"\n            type=\"text\"\n            name=\"receiverName\"\n            value={formData.receiverName}\n            onChange={handleChange}\n            containerClassName=\"gap-1 flex-col\"\n            labelClassName=\"capitalize font-medium text-xs\"\n          />\n          <InputBox\n            label=\"mobile no\"\n            type=\"tel\"\n            name=\"receiverPhone\"\n            value={formData.receiverPhone}\n            onChange={handleChange}\n            containerClassName=\"gap-1 flex-col\"\n            labelClassName=\"capitalize font-medium text-xs\"\n          />\n          <InputBox\n            label=\"pin code\"\n            type=\"text\"\n            name=\"pinCode\"\n            value={formData.pinCode}\n            onChange={handleChange}\n            containerClassName=\"gap-1 flex-col\"\n            labelClassName=\"capitalize font-medium text-xs\"\n          />\n          <InputBox\n            label=\"house no\"\n            type=\"text\"\n            name=\"houseNumber\"\n            value={formData.houseNumber}\n            onChange={handleChange}\n            containerClassName=\"gap-1 flex-col\"\n            labelClassName=\"capitalize font-medium text-xs\"\n          />\n        </div>\n        <TextareaBox\n          label=\"street\"\n          type=\"text\"\n          name=\"street\"\n          value={formData.street}\n          onChange={handleChange}\n          rows={3}\n          containerClassName=\"gap-1 flex-col\"\n          labelClassName=\"capitalize font-medium text-xs\"\n        />\n        <TextareaBox\n          label=\"locality\"\n          type=\"text\"\n          name=\"locality\"\n          value={formData.locality}\n          onChange={handleChange}\n          rows={3}\n          containerClassName=\"gap-1 flex-col\"\n          labelClassName=\"capitalize font-medium text-xs\"\n        />\n        <div className=\"grid sm:grid-cols-2 gap-2\">\n          <InputBox\n            label=\"city\"\n            type=\"text\"\n            name=\"city\"\n            value={formData.city}\n            onChange={handleChange}\n            containerClassName=\"gap-1 flex-col\"\n            labelClassName=\"capitalize font-medium text-xs\"\n          />\n          <InputBox\n            label=\"state\"\n            type=\"text\"\n            name=\"state\"\n            value={formData.state}\n            onChange={handleChange}\n            containerClassName=\"gap-1 flex-col\"\n            labelClassName=\"capitalize font-medium text-xs\"\n          />\n          <InputBox\n            label=\"landmark\"\n            type=\"text\"\n            name=\"landmark\"\n            value={formData.landmark}\n            onChange={handleChange}\n            containerClassName=\"gap-1 flex-col\"\n            labelClassName=\"capitalize font-medium text-xs\"\n          />\n          <InputBox\n            label=\"alternate number\"\n            type=\"tel\"\n            placeholder=\"alternate mobile (optional)\"\n            name=\"alternatePhone\"\n            value={formData.alternatePhone}\n            onChange={handleChange}\n            containerClassName=\"gap-1 flex-col\"\n            labelClassName=\"capitalize font-medium text-xs\"\n          />\n        </div>\n\n        <div className=\"flex items-center justify-end gap-4 pt-2\">\n          <Button\n            type=\"button\"\n            reverse\n            onClick={closeModal}\n            className=\"h-8 px-4 rounded-md\"\n          >\n            cancel\n          </Button>\n          <Button className=\"h-8 px-4 rounded-md\">save</Button>\n        </div>\n      </form>\n\n      {fetchingAddress && <Loading />}\n    </div>\n  );\n};\n\nexport default AddressForm;\n","import axios from \"axios\";\n\nconst getGeoLocation = () => {\n  return new Promise((resolve, reject) => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          resolve({ latitude, longitude });\n        },\n        (error) => {\n          reject(error);\n        },\n        { enableHighAccuracy: true, timeout: 10000, maximumAge: 0 }\n      );\n    } else {\n      reject(new Error(\"Geolocation is not supported by this browser.\"));\n    }\n  });\n};\n\nconst convertCoordinatesToAddress = async (latitude, longitude) => {\n  try {\n    const response = await axios.get(\n      `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\n    );\n\n    const data = await response.data;\n    if (data.results && data.results.length > 0) {\n      return data.results[0].address_components;\n    } else {\n      throw new Error(\"No address found for the given coordinates.\");\n    }\n  } catch (error) {\n    console.log(error);\n    throw new Error(\n      \"Failed to convert coordinates to address. Please try again later.\"\n    );\n  }\n};\n\nexport { getGeoLocation, convertCoordinatesToAddress };\n","import { FaCirclePlus, FaPhone } from \"react-icons/fa6\";\nimport Button from \"./Button\";\nimport { useModal } from \"../contexts/modalContext\";\nimport AddressForm from \"./AddressForm\";\nimport { FiTrash2 } from \"react-icons/fi\";\nimport { useAddress } from \"../contexts/addressContext\";\n\nconst AddressBox = ({ address }) => {\n  const { openModal } = useModal();\n  const { setDefault, removeAddress } = useAddress();\n\n  const handleDefaultAddress = () => {\n    setDefault(address._id);\n  };\n\n  const handleDeleteAddress = () => {\n    removeAddress(address._id);\n  };\n\n  return (\n    <div className=\"w-64 max-sm:w-full h-44 max-sm:h-auto border border-dashed border-darkGray rounded-md flex flex-shrink-0 justify-center items-center cursor-pointer bg-white overflow-hidden\">\n      {!address ? (\n        <div\n          onClick={() => openModal(<AddressForm />)}\n          className=\"NO-ADDRESS size-full text-primeRed flex sm:flex-col justify-center items-center gap-y-2 gap-x-4 hover:bg-offWhite p-4\"\n        >\n          <FaCirclePlus size={24} />\n          <p className=\"capitalize text-lg font-secondary font-medium\">\n            add new address\n          </p>\n        </div>\n      ) : (\n        <div className=\"HAVE=-ADDRESS relative size-full p-3 flex flex-col items-start\">\n          {address?.isDefault && (\n            <span className=\"absolute top-3 right-3 text-[8px] text-white font-medium px-1 rounded-sm pt-[1px] bg-success\">\n              DEFAULT\n            </span>\n          )}\n          <div className=\"flex items-center justify-center gap-2 font-medium leading-tight pr-12\">\n            <h3>{address?.receiverName}</h3>\n            <p className=\"uppercase text-[8px] px-1 py-[1px] h-max font-semibold bg-mainGray rounded-sm\">\n              {address?.addressType}\n            </p>\n          </div>\n          <div className=\"flex justify-start items-center gap-2 text-xs text-secondary\">\n            <FaPhone />\n            <p>{address?.receiverPhone || \"N/A\"}</p>\n            {address?.alternatePhone && (\n              <p>\n                <span className=\"mx-1\">/</span>\n                {address.alternatePhone}\n              </p>\n            )}\n          </div>\n\n          <div className=\"text-sm font-medium text-secondary flex flex-wrap gap-x-1 mt-2\">\n            {address?.houseNumber && <p>{address.houseNumber},</p>}\n            {address?.street && <p>{address.street},</p>}\n            {address?.locality && <p>{address.locality},</p>}\n            {address?.landmark && <p>{address.landmark},</p>}\n            {address?.city && <p>{address.city},</p>}\n            {address?.state && <p>{address.state},</p>}\n            {address?.pinCode && <p>{address.pinCode}</p>}\n          </div>\n\n          <div className=\"BTN-SECTION w-full flex justify-between items-center gap-2 mt-auto max-sm:mt-4\">\n            <div className=\"flex items-center gap-4\">\n              <Button\n                reverse\n                onClick={() =>\n                  openModal(<AddressForm initialAddress={address} edit />)\n                }\n                className=\"h-6 px-3 py-1 text-xs rounded-md font-secondary font-medium\"\n              >\n                Edit\n              </Button>\n              {!address?.isDefault && (\n                <Button\n                  onClick={handleDefaultAddress}\n                  className=\"h-6 text-xs px-6 py-1 rounded-md font-secondary\"\n                >\n                  set as default\n                </Button>\n              )}\n            </div>\n            <button onClick={handleDeleteAddress}>\n              <FiTrash2 size={18} className=\"text-primeRed\" />\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AddressBox;\n","import placeMarker from \"../../assets/images/place-marker.png\";\nimport AddressBox from \"../../components/AddressBox\";\nimport AddressForm from \"../../components/AddressForm\";\nimport Button from \"../../components/Button\";\nimport { TbAddressBook } from \"react-icons/tb\";\nimport { FiPlus } from \"react-icons/fi\";\nimport { useModal } from \"../../contexts/modalContext\";\nimport { useAddress } from \"../../contexts/addressContext\";\n\nconst Address = () => {\n  const { openModal } = useModal();\n  const { addresses } = useAddress();\n\n  return (\n    // <main className=\"w-full p-8 bg-offWhite\">\n    //   <h1 className=\"text-2xl font-medium mb-8 font-secondary flex items-center gap-4\">\n    //     <TbAddressBook size={28} className=\"text-primeRed\" />\n    //     Manage Address\n    //   </h1>\n    //   {addresses.length === 0 ? (\n    //     <div className=\"NO-ADDRESS flex flex-col justify-center items-center\">\n    //       <img src={placeMarker} alt=\"place-marker\" className=\"size-40\" />\n    //       <p className=\"text-primary font-secondary text-sm my-4\">\n    //         You haven't created any address\n    //       </p>\n    //       <Button\n    //         onClick={() => openModal(<AddressForm />)}\n    //         className=\"flex justify-center items-center gap-2 rounded-lg px-4 py-2 text-lg font-secondary\"\n    //       >\n    //         <FiPlus size={24} />\n    //         <p>add address</p>\n    //       </Button>\n    //     </div>\n    //   ) : (\n    //     <div className=\"HAVE-ADDRESS flex flex-wrap justify-start items-center gap-8\">\n    //       <AddressBox />\n    //       {addresses.map((address, index) => (\n    //         <AddressBox key={index} address={address} />\n    //       ))}\n    //     </div>\n    //   )}\n    // </main>\n    <main className=\"w-full flex flex-col p-6 bg-white rounded-lg lg:shadow-md space-y-6\">\n      <div className=\"flex items-center gap-4\">\n        <TbAddressBook size={32} className=\"text-primeRed\" />\n        <h1 className=\"text-2xl font-semibold text-gray-800\">Manage Address</h1>\n      </div>\n\n      {addresses.length === 0 ? (\n        <div className=\"flex flex-col items-center justify-center text-center py-16\">\n          <img src={placeMarker} alt=\"No address\" className=\"w-24 h-24 mb-6\" />\n          <p className=\"text-gray-600 text-base mb-6\">\n            You haven't created any address yet.\n          </p>\n          <Button\n            onClick={() => openModal(<AddressForm />)}\n            className=\"flex items-center gap-2 bg-primeRed text-white px-5 py-2 rounded-lg hover:bg-primeRed-dark transition-colors duration-200\"\n          >\n            <FiPlus size={20} />\n            <p>Add Address</p>\n          </Button>\n        </div>\n      ) : (\n        <div className=\"flex flex-wrap items-center justify-center sm:gap-8 gap-4\">\n          <AddressBox />\n          {addresses.map((address, index) => (\n            <AddressBox key={index} address={address} />\n          ))}\n        </div>\n      )}\n    </main>\n  );\n};\n\nexport default Address;\n"],"names":["_ref","value","onChange","name","label","checked","disabled","align","required","className","labelClassName","containerClassName","id","replace","toLowerCase","_jsxs","concat","children","_jsx","htmlFor","type","initialAddress","edit","toast","useToast","closeModal","useModal","addAddress","updateAddress","loading","useAddress","fetchingAddress","setFetchingAddress","useState","formData","setFormData","handleChange","handleSubmit","clearForm","useForm","async","_id","addressType","receiverName","receiverPhone","pinCode","locality","city","state","addressData","isNameValid","success","isPhoneValid","isPinCodeValid","error","message","onSubmit","RadioInput","onClick","latitude","longitude","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","enableHighAccuracy","timeout","maximumAge","Error","addressComponents","response","axios","get","process","REACT_APP_GOOGLE_MAPS_API_KEY","data","results","length","address_components","console","log","convertCoordinatesToAddress","getAddressComponent","_addressComponents$fi","find","component","types","includes","long_name","_objectSpread","houseNumber","street","landmark","MdOutlineAddLocationAlt","InputBox","TextareaBox","rows","placeholder","alternatePhone","Button","reverse","Loading","address","openModal","setDefault","removeAddress","isDefault","FaPhone","AddressForm","handleDefaultAddress","handleDeleteAddress","FiTrash2","size","FaCirclePlus","Address","addresses","TbAddressBook","src","alt","FiPlus","AddressBox","map","index"],"sourceRoot":""}