{"version":3,"file":"static/js/404.e2ad47e0.chunk.js","mappings":"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","sources":["components/LeaderBoard.jsx","pages/Utsav/Home/BrandSlide.jsx","pages/Utsav/Home/NewArrivals.jsx","components/Gallery.jsx","pages/Utsav/Home/UtsavGallery.jsx","pages/Utsav/Home/UtsavProducts.jsx","pages/Utsav/Home/index.jsx","components/ProductCard.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { useBanners } from \"../services/bannerServices\";\nimport Carousel from \"./Carousel\";\nimport Skeleton from \"./Skeleton\";\nimport useInView from \"../hooks/useInView\";\nimport useMediaQuery from \"../hooks/useMediaQuery\";\n\nconst LeaderBoard = ({\n  preload = false,\n  position,\n  resourceType,\n  valueId,\n  title,\n  subtitle,\n  className,\n  containerClassName = \"container max-w-full\",\n}) => {\n  const containerRef = useRef(null);\n  const hasFetchedOnce = useRef(false);\n  const [shouldFetch, setShouldFetch] = useState(preload);\n  const maxMd = useMediaQuery(\"(max-width: 768px)\");\n\n  const isInView = useInView(containerRef, {\n    threshold: 0.1,\n    rootMargin: \"100px\",\n  });\n\n  const { data: banners = [], isLoading } = useBanners(\n    {\n      bannerType: \"Leaderboard\",\n      position,\n      resourceType,\n      valueId,\n    },\n    { enabled: shouldFetch }\n  );\n\n  useEffect(() => {\n    if (!hasFetchedOnce.current && isInView && position && resourceType) {\n      setShouldFetch(true);\n      hasFetchedOnce.current = true;\n    }\n  }, [isInView, position, resourceType]);\n\n  return (\n    <div ref={containerRef}>\n      {isLoading ? (\n        <ul className={`flex gap-4 overflow-x-hidden ${containerClassName}`}>\n          {Array.from({ length: 1 }).map((_, index) => (\n            <li\n              key={index}\n              className={`block relative w-full h-30 max-lg:h-20 max-md:h-10 overflow-hidden flex-shrink-0 ${className}`}\n            >\n              <Skeleton />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        banners?.length > 0 && (\n          <div className={`space-y-4 max-lg::space-y-2 ${containerClassName}`}>\n            {title || subtitle ? (\n              <div>\n                <h1 className=\"text-2xl max-lg:text-xl font-bold\">{title}</h1>\n                <p className=\"text-sm\">{subtitle}</p>\n              </div>\n            ) : null}\n            <Carousel autoplay delay={5000} navigation={!maxMd} pagination>\n              {banners.map((banner) => (\n                <a\n                  key={banner.bannerTitle || banner._id}\n                  href={banner.linkUrl}\n                  className=\"block relative w-full h-max\"\n                >\n                  <img\n                    src={banner.bannerImg}\n                    alt={banner.bannerTitle || banner._id}\n                    loading=\"lazy\"\n                    className={`w-full object-cover object-center ${className}`}\n                  />\n                </a>\n              ))}\n            </Carousel>\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default LeaderBoard;\n","import { Link } from \"react-router-dom\";\nimport Carousel from \"../../../components/Carousel\";\nimport { useUtsavFeaturedBrands } from \"../../../services/brandService\";\nimport useMediaQuery from \"../../../hooks/useMediaQuery\";\n\nconst BrandSlide = () => {\n  const {\n    data: utsavFeaturedBrands,\n    isLoading,\n    error,\n  } = useUtsavFeaturedBrands();\n  const maxXl = useMediaQuery(\"(max-width: 1280px)\");\n  const maxLg = useMediaQuery(\"(max-width: 1024px)\");\n\n  if (isLoading) {\n    return <></>;\n  }\n\n  if (error) {\n    return <div>{error.message}</div>;\n  }\n\n  return (\n    utsavFeaturedBrands?.length > 0 && (\n      <div className=\"container max-w-full space-y-6 max-lg:space-y-4\">\n        <h1 className=\"text-2xl max-lg:text-xl font-bold font-secondary\">\n          Top Brands\n        </h1>\n\n        <div className=\"max-w-max mx-auto\">\n          <Carousel\n            slideWidth={maxLg ? 60 : maxXl ? 80 : 120}\n            allowTouchMove\n            spaceBetween={maxLg ? 10 : 30}\n          >\n            {utsavFeaturedBrands.map((brand) => (\n              <Link\n                to={`/brand/${brand._id}`}\n                key={brand.name || brand._id}\n                className=\"inline-block relative\"\n              >\n                <img\n                  src={brand.logoUrl}\n                  alt={brand.name || brand._id}\n                  loading=\"lazy\"\n                  className=\"size-[100px] max-xl:size-[80px] max-lg:size-[60px] object-cover object-center\"\n                />\n              </Link>\n            ))}\n          </Carousel>\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default BrandSlide;\n","import Carousel from \"../../../components/Carousel\";\nimport ProductCard from \"../../../components/ProductCard\";\nimport useMediaQuery from \"../../../hooks/useMediaQuery\";\nimport { useNewArrivals } from \"../../../services/productService\";\n\nconst NewArrivals = () => {\n  const { data: newArrivals = [], isLoading, error } = useNewArrivals();\n  const maxXl = useMediaQuery(\"(max-width: 1280px)\");\n  const minMd = useMediaQuery(\"(min-width: 768px)\");\n\n  if (isLoading) {\n    return <></>;\n  }\n\n  if (error) {\n    return <div>{error.message}</div>;\n  }\n\n  return (\n    newArrivals.length > 0 && (\n      <div className=\"container max-w-full space-y-8 max-lg:space-y-4\">\n        <h1 className=\"text-2xl max-lg:text-xl font-bold\">New Arrivals</h1>\n\n        <Carousel\n          slideWidth={!minMd ? 160 : 200}\n          spaceBetween={maxXl ? 10 : 14}\n          allowTouchMove\n          navigation\n        >\n          {newArrivals.map((product, index) => (\n            <ProductCard key={index} product={product} />\n          ))}\n        </Carousel>\n      </div>\n    )\n  );\n};\n\nexport default NewArrivals;\n","import Masonry from \"react-masonry-css\";\n\nconst breakpointColumnsObj = {\n  default: 3,\n  1100: 3,\n  700: 2,\n  500: 1,\n};\n\nconst Gallery = ({ children }) => {\n  return (\n    <Masonry\n      breakpointCols={breakpointColumnsObj}\n      className=\"flex w-auto space-x-4 max-lg:space-x-2\"\n      columnClassName=\"space-y-4 max-lg:space-y-2\"\n    >\n      {children}\n    </Masonry>\n  );\n};\n\nexport default Gallery;\n","import { Link } from \"react-router-dom\";\nimport Gallery from \"../../../components/Gallery\";\nimport { useGalleryBanners } from \"../../../services/bannerServices\";\n\nconst UtsavGallery = () => {\n  const { data: banners = [], isLoading, error } = useGalleryBanners();\n\n  const renderSlides = (banners) => {\n    return banners.map((banner) => (\n      <Link\n        to={`/category/${banner?.categoryId?._id}`}\n        className=\"block relative\"\n      >\n        <img\n          src={banner.bannerImg}\n          alt={banner.title || banner._id}\n          loading=\"lazy\"\n        />\n      </Link>\n    ));\n  };\n\n  if (isLoading) {\n    return <></>;\n  }\n\n  if (error) {\n    return <div>{error.message}</div>;\n  }\n\n  return (\n    banners.length > 0 && (\n      <div className=\"container max-w-full\">\n        <Gallery>{renderSlides(banners)}</Gallery>\n      </div>\n    )\n  );\n};\n\nexport default UtsavGallery;\n","import { useMemo } from \"react\";\nimport Pagination from \"../../../components/Pagination\";\nimport ProductBox from \"../../../components/ProductBox\";\nimport { useAllUtsavVariants } from \"../../../services/productService\";\nimport { useSearchParamsState } from \"../../../hooks/useSearchParamsState\";\nimport { Link } from \"react-router-dom\";\n\nconst UtsavProducts = () => {\n  const { data: products = [], isLoading } = useAllUtsavVariants();\n  const [page, setPage] = useSearchParamsState(\"page\", 1);\n  const limit = 20;\n\n  const currentProducts = useMemo(() => {\n    const firstPageIndex = (page - 1) * limit;\n    const lastPageIndex = firstPageIndex + limit;\n    return products.slice(firstPageIndex, lastPageIndex);\n  }, [page, products, limit]);\n\n  return (\n    <div className=\"container max-w-full space-y-8 max-lg:space-y-4\">\n      <div className=\"HEADING flex items-center justify-between flex-wrap gap-y-2\">\n        <div>\n          <h1 className=\"text-2xl max-lg:text-xl font-bold\">All Products</h1>\n          <p className=\"font-light text-sm max-lg:text-xs\">\n            Discover our selection of popular and new products that are sure to\n            catch your eye.\n          </p>\n        </div>\n\n        <Link to=\"/products\" className=\"font-bold text-blue-500\">\n          See more\n        </Link>\n      </div>\n\n      {isLoading ? (\n        <section className=\"w-full\">\n          <h2 className=\"text-center font-secondary font-medium text-xl\">\n            Fetching Products\n          </h2>\n        </section>\n      ) : (\n        <section className=\"w-full\">\n          {products.length === 0 ? (\n            <p className=\"text-center font-secondary font-medium text-xl\">\n              No Products Found\n            </p>\n          ) : (\n            <ul className=\"grid grid-cols-2 lg:gap-8 sm:gap-4 gap-1 sm:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5\">\n              {currentProducts.map((productItem, index) => (\n                <li key={index} className=\"flex justify-center items-center\">\n                  <ProductBox product={productItem} />\n                </li>\n              ))}\n            </ul>\n          )}\n\n          <div className=\"PAGINATION\">\n            <Pagination\n              currentPage={parseInt(page, 10)}\n              totalCount={products.length}\n              pageSize={limit}\n              onPageChange={(page) => setPage(page.toString())}\n            />\n          </div>\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default UtsavProducts;\n","import HeroBanner from \"../../../components/HeroBanner\";\nimport LeaderBoard from \"../../../components/LeaderBoard\";\nimport BrandSlide from \"./BrandSlide\";\nimport NewArrivals from \"./NewArrivals\";\nimport UtsavGallery from \"./UtsavGallery\";\nimport UtsavProducts from \"./UtsavProducts\";\n\nconst UtsavHome = () => {\n  return (\n    <main className=\"space-y-8 py-8\">\n      <HeroBanner position=\"Top\" resourceType=\"Utsav\" />\n      <LeaderBoard position=\"Middle_1\" resourceType=\"Utsav\" />\n      <UtsavGallery />\n      <NewArrivals />\n      <LeaderBoard position=\"Middle_2\" resourceType=\"Utsav\" />\n      <BrandSlide />\n      <UtsavProducts />\n    </main>\n  );\n};\n\nexport default UtsavHome;\n","import { IoMdHeart } from \"react-icons/io\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useWishlist } from \"../contexts/wishlistContext\";\nimport RatingBadge from \"./RatingBadge\";\nimport { useRatingDetails } from \"../services/productService\";\nimport { useState } from \"react\";\nimport Carousel from \"./Carousel\";\nimport utsavBadge from \"../assets/images/utsav-badge.png\";\n\nconst ProductCard = ({ product, dropdown = false }) => {\n  const navigate = useNavigate();\n  const { addToWishlist, removeFromWishlist, isWished } = useWishlist();\n  const { data, isLoading: ratingLoading } = useRatingDetails(\n    product.productGroup._id\n  );\n  const [isHovered, setIsHovered] = useState(false);\n\n  const toggleWishlist = (e) => {\n    e.stopPropagation();\n\n    if (isWished(product._id)) {\n      removeFromWishlist(product._id);\n    } else {\n      addToWishlist(product._id);\n    }\n  };\n\n  return (\n    <div\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      className={`size-full flex flex-col border border-secondary rounded-md overflow-hidden hover:shadow-md ${\n        product.quantity <= 0 && \"opacity-75\"\n      }`}\n    >\n      <div\n        onClick={() => navigate(`/product/${product._id}`)}\n        className=\"ITEM-IMAGES relative w-full pt-[100%] cursor-pointer\"\n      >\n        <div className=\"absolute inset-0 overflow-hidden\">\n          {isHovered &&\n          product?.productGroup?.otherImages &&\n          product?.productGroup?.thumbnail ? (\n            <Carousel pagination autoplay delay={2000} loop>\n              {[\n                ...product?.images,\n                ...product?.productGroup?.otherImages,\n                ...product?.productGroup?.thumbnail,\n              ].map((image, index) => (\n                <img\n                  key={index}\n                  src={image}\n                  alt={index}\n                  className=\"size-full object-contain object-center\"\n                />\n              ))}\n            </Carousel>\n          ) : (\n            <img\n              src={product?.images[0]}\n              alt={product?.productGroup?.name}\n              className=\"size-full object-contain object-center\"\n            />\n          )}\n        </div>\n\n        <div className=\"absolute bottom-2 left-2 z-[5]\">\n          {!ratingLoading && data?.averageRating > 0 && (\n            <RatingBadge\n              rating={data.averageRating}\n              totalRatings={data.totalCount}\n              ratingsBreakdown={data.ratingCounts}\n              dropdown={dropdown}\n            />\n          )}\n        </div>\n        <button\n          type=\"button\"\n          onClick={toggleWishlist}\n          className=\"absolute top-2 right-2 z-[5]\"\n        >\n          <IoMdHeart\n            className={`${\n              isWished(product._id)\n                ? \"text-primeRed\"\n                : \"text-halfGray stroke-2 stroke-black\"\n            }`}\n            size={20}\n          />\n        </button>\n        {product?.isUtsav && (\n          <div className=\"absolute top-2 left-2 z-[5]\">\n            <img src={utsavBadge} alt=\"utsav\" className=\"h-2\" />\n          </div>\n        )}\n        {product.quantity <= 0 && (\n          <div className=\"absolute inset-x-0 bottom-0 bg-lightGray z-10 p-1\">\n            <p className=\"font-bold text-error text-center\">SOLD OUT</p>\n          </div>\n        )}\n      </div>\n\n      <div className=\"ITEM-DETAILS p-2 leading-none font-secondary flex-grow\">\n        <p className=\"NAME text-sm max-md:text-xs font-medium line-clamp-1 text-center\">\n          {product?.name}\n        </p>\n        <Link\n          to={`/brand/${product?.productGroup?.brand?._id}`}\n          className=\"BRAND font-medium text-xs max-lg:text-xxs text-primary text-center leading-none\"\n        >\n          <p>{product?.productGroup?.brand?.name}</p>\n        </Link>\n      </div>\n\n      <div className=\"BOTTOM-SECTION flex flex-col justify-center items-center gap-y-1 p-2 pt-0\">\n        <div className=\"md:space-y-1\">\n          <div className=\"flex items-center gap-2\">\n            <p className=\"text-xs max-md:text-xxs text-center font-medium text-primary line-through leading-none\">\n              ₹ {Math.round(product?.unitPrice)}\n            </p>\n            <p className=\"font-bold text-lg max-md:text-sm md:text-center leading-none\">\n              ₹ {Math.round(product?.sellingPrice)}\n            </p>\n            {product?.discount > 0 && (\n              <span className=\"leading-none text-sm max-md:text-xs font-medium text-green-500\">\n                {product?.discountType === \"percent\"\n                  ? `${product.discount}%`\n                  : `₹${product.discount} OFF`}\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"UTSAV-PRICING flex items-center lg:gap-2 gap-1 whitespace-nowrap text-success\">\n          <p className=\"font-medium leading-none max-lg:text-xs\">Utsav Price</p>\n          <p className=\"text-lg max-lg:text-sm font-bold leading-none\">\n            ₹ {Math.round(product.utsavPrice)}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n"],"names":["_ref","preload","position","resourceType","valueId","title","subtitle","className","containerClassName","containerRef","useRef","hasFetchedOnce","shouldFetch","setShouldFetch","useState","maxMd","useMediaQuery","isInView","useInView","threshold","rootMargin","data","banners","isLoading","useBanners","bannerType","enabled","useEffect","current","_jsx","ref","children","concat","Array","from","length","map","_","index","Skeleton","_jsxs","Carousel","autoplay","delay","navigation","pagination","banner","href","linkUrl","src","bannerImg","alt","bannerTitle","_id","loading","BrandSlide","utsavFeaturedBrands","error","useUtsavFeaturedBrands","maxXl","maxLg","_Fragment","message","slideWidth","allowTouchMove","spaceBetween","brand","Link","to","logoUrl","name","NewArrivals","newArrivals","useNewArrivals","minMd","product","ProductCard","breakpointColumnsObj","default","Masonry","breakpointCols","columnClassName","UtsavGallery","useGalleryBanners","Gallery","_banner$categoryId","categoryId","renderSlides","UtsavProducts","products","useAllUtsavVariants","page","setPage","useSearchParamsState","currentProducts","useMemo","firstPageIndex","lastPageIndex","slice","productItem","ProductBox","Pagination","currentPage","parseInt","totalCount","pageSize","onPageChange","toString","UtsavHome","HeroBanner","LeaderBoard","_product$productGroup","_product$productGroup2","_product$productGroup3","_product$productGroup4","_product$productGroup5","_product$productGroup6","_product$productGroup7","_product$productGroup8","_product$productGroup9","dropdown","navigate","useNavigate","addToWishlist","removeFromWishlist","isWished","useWishlist","ratingLoading","useRatingDetails","productGroup","isHovered","setIsHovered","onMouseEnter","onMouseLeave","quantity","onClick","otherImages","thumbnail","loop","images","image","averageRating","RatingBadge","rating","totalRatings","ratingsBreakdown","ratingCounts","type","e","stopPropagation","IoMdHeart","size","isUtsav","utsavBadge","Math","round","unitPrice","sellingPrice","discount","discountType","utsavPrice"],"sourceRoot":""}