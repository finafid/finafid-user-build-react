{"version":3,"file":"static/js/7582.e8da9c15.chunk.js","mappings":"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","sources":["api/orderApis.js","components/Button.jsx","hooks/usePagination.js","components/Pagination.jsx","hooks/useOrder.js","hooks/useSearchParamsState.js","pages/Orders/OrderHistoryCard.jsx","pages/Orders/NoOrder.jsx","pages/Orders/index.jsx","utils/dateUtils.js"],"sourcesContent":["import { getCookie } from \"../utils/cookie\";\r\nimport axiosInstance from \"./axiosInstance\";\r\n\r\nconst getAllOrders = () => {\r\n  const token = getCookie(\"accessToken\");\r\n  return axiosInstance.get(\"/getOrderDetails\", {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nconst getOrderById = (orderId) => {\r\n  const token = getCookie(\"accessToken\");\r\n  return axiosInstance.get(`/getOrderById/${orderId}`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nconst createOrder = (orderItems, address, pricingDetails, paymentMethod) => {\r\n  const token = getCookie(\"accessToken\");\r\n  return axiosInstance.post(\r\n    \"/placeOrder\",\r\n    {\r\n      orderItem: orderItems,\r\n      address,\r\n      ...pricingDetails,\r\n      payment_method: paymentMethod,\r\n    },\r\n    {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n        \"x-api-key\": process.env.REACT_APP_ORDER_API_KEY,\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nconst editOrder = (\r\n  orderId,\r\n  address,\r\n  pricingDetails,\r\n  paymentMethod,\r\n  hasPaymentCompleted,\r\n  status\r\n) => {\r\n  const token = getCookie(\"accessToken\");\r\n  return axiosInstance.post(\r\n    `/editOrder/${orderId}`,\r\n    {\r\n      address,\r\n      ...pricingDetails,\r\n      payment_method: paymentMethod,\r\n      payment_complete: hasPaymentCompleted,\r\n      status: status,\r\n    },\r\n    {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n        \"x-api-key\": process.env.REACT_APP_ORDER_API_KEY,\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nconst updateOrderStatus = (orderId, status) => {\r\n  const token = getCookie(\"accessToken\");\r\n  return axiosInstance.post(\r\n    `/updateStatus/${orderId}`,\r\n    { status },\r\n    {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n        \"x-api-key\": process.env.REACT_APP_ORDER_API_KEY,\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nconst getStatusHistory = (orderId) => {\r\n  return axiosInstance.get(`/orderStatusDetails/${orderId}`);\r\n};\r\n\r\nexport {\r\n  getAllOrders,\r\n  getOrderById,\r\n  createOrder,\r\n  editOrder,\r\n  updateOrderStatus,\r\n  getStatusHistory\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({\r\n  children,\r\n  type = \"submit\",\r\n  className = \"px-4 py-2 rounded-md\",\r\n  onClick,\r\n  disabled = false,\r\n  reverse = false,\r\n}) => {\r\n  return reverse ? (\r\n    <button\r\n      type={type}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      className={`block capitalize bg-white text-primeRed text-sm hover:bg-lightGray border border-primeRed transition-colors duration-200 ease-in-out disabled:bg-mainGray disabled:cursor-not-allowed ${className}`}\r\n    >\r\n      {children}\r\n    </button>\r\n  ) : (\r\n    <button\r\n      type={type}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      className={`block capitalize bg-primeRed text-white text-sm hover:bg-hotPink transition-colors duration-200 ease-in-out disabled:bg-mainGray disabled:cursor-not-allowed ${className}`}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node,\r\n  type: PropTypes.string,\r\n  className: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  advance: PropTypes.bool,\r\n};\r\n","import { useMemo } from \"react\";\r\n\r\nexport const DOTS = \"...\";\r\n\r\nconst range = (start, end) => {\r\n  let length = end - start + 1;\r\n  return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport const usePagination = ({\r\n  totalCount,\r\n  limit,\r\n  siblingCount = 1,\r\n  currentPage,\r\n}) => {\r\n  const paginationRange = useMemo(() => {\r\n    const totalPageCount = Math.ceil(totalCount / limit);\r\n\r\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\r\n    const totalPageNumbers = siblingCount + 5;\r\n\r\n    /*\r\n      If the number of pages is less than the page numbers we want to show in our\r\n      paginationComponent, we return the range [1..totalPageCount]\r\n    */\r\n    if (totalPageNumbers >= totalPageCount) {\r\n      return range(1, totalPageCount);\r\n    }\r\n\r\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n    const rightSiblingIndex = Math.min(\r\n      currentPage + siblingCount,\r\n      totalPageCount\r\n    );\r\n\r\n    /*\r\n      We do not want to show dots if there is only one position left \r\n      after/before the left/right page count as that would lead to a change if our Pagination\r\n      component size which we do not want\r\n    */\r\n    const shouldShowLeftDots = leftSiblingIndex > 2;\r\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n    const firstPageIndex = 1;\r\n    const lastPageIndex = totalPageCount;\r\n\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      let leftItemCount = 3 + 2 * siblingCount;\r\n      let leftRange = range(1, leftItemCount);\r\n\r\n      return [...leftRange, DOTS, totalPageCount];\r\n    }\r\n\r\n    if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      let rightItemCount = 3 + 2 * siblingCount;\r\n      let rightRange = range(\r\n        totalPageCount - rightItemCount + 1,\r\n        totalPageCount\r\n      );\r\n      return [firstPageIndex, DOTS, ...rightRange];\r\n    }\r\n\r\n    if (shouldShowLeftDots && shouldShowRightDots) {\r\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n    }\r\n  }, [totalCount, limit, siblingCount, currentPage]);\r\n\r\n  return paginationRange;\r\n};\r\n","import { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\r\nimport { DOTS, usePagination } from \"../hooks/usePagination\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst Pagination = ({\r\n  onPageChange,\r\n  totalCount,\r\n  siblingCount = 1,\r\n  currentPage,\r\n  pageSize,\r\n}) => {\r\n  const paginationRange = usePagination({\r\n    currentPage,\r\n    totalCount,\r\n    siblingCount,\r\n    limit: pageSize,\r\n  });\r\n\r\n  const lastPage = paginationRange[paginationRange.length - 1];\r\n\r\n  if (currentPage === 0 || paginationRange.length < 2) {\r\n    return null;\r\n  }\r\n\r\n  const onNext = () => {\r\n    if (currentPage >= lastPage) return;\r\n    onPageChange(currentPage + 1);\r\n  };\r\n\r\n  const onPrevious = () => {\r\n    if (currentPage <= 1) return;\r\n    onPageChange(currentPage - 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-8\">\r\n      <ul className=\"relative flex gap-4 max-md:gap-3 w-max mx-auto\">\r\n        {paginationRange.map((pageNumber, index) => (\r\n          <Fragment key={index}>\r\n            {pageNumber === DOTS && (\r\n              <li className=\"relative h-max top-1\">{DOTS}</li>\r\n            )}\r\n\r\n            {pageNumber !== DOTS && (\r\n              <li\r\n                className={`size-10 max-lg:size-8 max-md:size-6 border border-black max-lg:text-sm max-md:text-xs flex justify-center items-center cursor-pointer transition-colors duration-200 ease-in-out ${\r\n                  pageNumber === currentPage\r\n                    ? \"bg-primeRed text-white\"\r\n                    : \"bg-white\"\r\n                } ${pageNumber !== currentPage && \"hover:bg-mainGray\"}`}\r\n                onClick={() => onPageChange(pageNumber)}\r\n              >\r\n                {pageNumber}\r\n              </li>\r\n            )}\r\n          </Fragment>\r\n        ))}\r\n\r\n        <button\r\n          className={`absolute -left-10 top-1/2 -translate-y-1/2 ${\r\n            currentPage <= 1 && \"text-primary\"\r\n          }`}\r\n          onClick={onPrevious}\r\n        >\r\n          <FiChevronLeft size={28} />\r\n        </button>\r\n\r\n        <button\r\n          className={`absolute -right-10 top-1/2 -translate-y-1/2 ${\r\n            currentPage >= lastPage && \"text-primary\"\r\n          }`}\r\n          onClick={onNext}\r\n        >\r\n          <FiChevronRight size={28} />\r\n        </button>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { getAllOrders, getOrderById, getStatusHistory } from \"../api/orderApis\";\r\n\r\nconst useOrder = (orderId) => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [order, setOrder] = useState(null);\r\n  const [statusHistory, setStatusHistory] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchOrders = useCallback(async () => {\r\n    if (orderId) return;\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await getAllOrders();\r\n      if (response?.status) {\r\n        console.log(response.data);\r\n        setOrders(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching orders\", error);\r\n      setError(\"Failed to fetch orders. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [orderId]);\r\n\r\n  const fetchOrder = useCallback(async () => {\r\n    if (!orderId) return;\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await getOrderById(orderId);\r\n      if (response?.status) {\r\n        console.log(response.data);\r\n        setOrder(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching order details\", error);\r\n      setError(\"Failed to fetch order details. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [orderId]);\r\n\r\n  const fetchStatusHistory = useCallback(async () => {\r\n    if (!orderId) return;\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await getStatusHistory(orderId);\r\n      if (response.status) {\r\n        console.log(response.data);\r\n        setStatusHistory(response.data.statusDetails.orderStatusDetails);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching status history\", error);\r\n      setError(\"Failed to fetch status history. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [orderId]);\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, [fetchOrders]);\r\n\r\n  useEffect(() => {\r\n    fetchOrder();\r\n  }, [fetchOrder]);\r\n\r\n  useEffect(() => {\r\n    fetchStatusHistory();\r\n  }, [fetchStatusHistory]);\r\n\r\n  return { orders, order, statusHistory, loading, error };\r\n};\r\n\r\nexport default useOrder;\r\n","import { useSearchParams } from \"react-router-dom\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\nexport function useSearchParamsState(\r\n  searchParamName,\r\n  defaultValue,\r\n  replace = false\r\n) {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const isInitialized = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!isInitialized.current) {\r\n      if (!searchParams.has(searchParamName) && defaultValue !== undefined) {\r\n        const nextParams = new URLSearchParams(searchParams);\r\n        nextParams.set(searchParamName, defaultValue);\r\n        setSearchParams(nextParams, { replace: true }); // use replace to avoid adding history entry\r\n      }\r\n      isInitialized.current = true;\r\n    }\r\n  }, [searchParams, searchParamName, defaultValue, setSearchParams]);\r\n\r\n  const acquiredSearchParam = searchParams.get(searchParamName);\r\n  const searchParamsState = acquiredSearchParam ?? defaultValue;\r\n\r\n  const setSearchParamsState = (newState) => {\r\n    const nextParams = new URLSearchParams(searchParams);\r\n\r\n    if (newState !== null && newState !== undefined) {\r\n      nextParams.set(searchParamName, newState);\r\n    } else {\r\n      nextParams.delete(searchParamName);\r\n    }\r\n\r\n    // Compare the current search params with the new search params\r\n    const currentParams = searchParams.toString();\r\n    const updatedParams = nextParams.toString();\r\n\r\n    if (currentParams !== updatedParams) {\r\n      setSearchParams(nextParams, { replace: replace });\r\n    }\r\n  };\r\n\r\n  return [searchParamsState, setSearchParamsState];\r\n}\r\n","import React from \"react\";\r\nimport { getColorForStatus } from \"../../utils/Constants\";\r\nimport Button from \"../../components/Button\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { formatDate } from \"../../utils/dateUtils\";\r\n\r\nconst OrderHistoryCard = ({ order }) => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg p-4 md:p-6 w-full border\">\r\n      <div className=\"flex flex-col gap-y-4\">\r\n        <div className=\"CARD-HEAD w-max flex items-center justify-between gap-2\">\r\n          <span\r\n            className={`text-xxs text-white px-2 py-1 leading-none rounded-full ${getColorForStatus(\r\n              order.status\r\n            )}`}\r\n          >\r\n            {order.status}\r\n          </span>\r\n          <span className=\"text-gray-600 text-sm\">\r\n            {formatDate(new Date(order.updatedAt))}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"CARD-BODY flex max-lg:flex-col justify-between gap-4\">\r\n          <div className=\"ORDER-ITEMS w-full flex max-lg:flex-col gap-4\">\r\n            {order?.orderItem.slice(0, 1).map((item, index) => (\r\n              <div key={index} className=\"PRODUCT-MAIN flex gap-2 flex-grow\">\r\n                <Link to={`/order/${order._id}`} className=\"flex-shrink-0\">\r\n                  {item.productId ? (\r\n                    <img\r\n                      src={item.productId?.images[0]}\r\n                      alt={item.productId?.productGroup?.name}\r\n                      loading=\"lazy\"\r\n                      className=\"size-16 rounded\"\r\n                    />\r\n                  ) : (\r\n                    <div className=\"size-16 bg-lightGray flex items-center justify-center text-primary rounded text-xs text-center\">\r\n                      Invalid Product\r\n                    </div>\r\n                  )}\r\n                  {order?.orderItem.length > 1 && (\r\n                    <p className=\"text-xs text-center font-medium\">\r\n                      +{order.orderItem.length - 1} more\r\n                    </p>\r\n                  )}\r\n                </Link>\r\n                <div className=\"text-sm\">\r\n                  <h3 className=\"font-medium\">{item.productId?.name}</h3>\r\n                  {item?.productId?.attributes &&\r\n                    Object.keys(item?.productId?.attributes)\r\n                      .slice(0, 3)\r\n                      .map((key) => (\r\n                        <p index={key} className=\"capitalize\">\r\n                          {key}: {item?.productId?.attributes[key]}\r\n                        </p>\r\n                      ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <div className=\"text-sm font-medium 2xl:w-80 xl:w-60 lg:w-40 flex-shrink-0\">\r\n              <h2>Expected delivery on Monday, 12th March</h2>\r\n              <div className=\"flex gap-2\">\r\n                <p>Order date :</p>\r\n                <p>{formatDate(new Date(order.createdAt))}</p>\r\n              </div>\r\n              <div className=\"flex gap-2\">\r\n                <p>Total :</p>\r\n                <p>₹ {order.totalPrice}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"BUTTONS-SECTION flex flex-col gap-y-2 flex-shrink-0\">\r\n            <Button>Track order</Button>\r\n            <Button reverse onClick={() => navigate(`/order/${order._id}`)}>\r\n              View order details\r\n            </Button>\r\n            <div className=\"flex lg:flex-col justify-around items-center\">\r\n              <button className=\"text-blue-500 text-sm px-4 py-2\">\r\n                Get invoice\r\n              </button>\r\n              <button className=\"text-blue-500 text-sm px-4 py-2\">\r\n                Edit address\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderHistoryCard;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport Button from \"../../components/Button\";\r\n\r\nconst NoOrder = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <h4 className=\"text-lg font-secondary font-medium text-center\">\r\n        No order placed\r\n      </h4>\r\n      <ul className=\"flex justify-center gap-4\">\r\n        {Array.from({ length: 3 }).map((_, index) => (\r\n          <li\r\n            key={index}\r\n            className=\"size-40 max-lg:size-30 max-sm:size-20 bg-mainGray\"\r\n          ></li>\r\n        ))}\r\n      </ul>\r\n      <Button\r\n        onClick={() => navigate(\"/wishlist\")}\r\n        className=\"px-6 py-3 rounded-full text-lg mx-auto\"\r\n      >\r\n        GO TO WISHLIST\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoOrder;\r\n","import { motion } from \"framer-motion\";\r\nimport useOrder from \"../../hooks/useOrder\";\r\nimport { useMemo } from \"react\";\r\nimport OrderHistoryCard from \"./OrderHistoryCard\";\r\nimport { useSearchParamsState } from \"../../hooks/useSearchParamsState\";\r\nimport NoOrder from \"./NoOrder\";\r\nimport Pagination from \"../../components/Pagination\";\r\n\r\nconst Orders = () => {\r\n  const { orders, loading, error } = useOrder();\r\n  const [page, setPage] = useSearchParamsState(\"page\", 1);\r\n  const limit = 5;\r\n\r\n  const currentTableData = useMemo(() => {\r\n    const firstPageIndex = (page - 1) * limit;\r\n    const lastPageIndex = firstPageIndex + limit;\r\n    return orders.slice(firstPageIndex, lastPageIndex);\r\n  }, [page, orders]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"w-full\">\r\n        <h2 className=\"text-center font-secondary font-medium text-xl mt-8\">\r\n          Loading...\r\n        </h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"w-full\">\r\n        <h2 className=\"text-center font-secondary font-medium text-xl mt-8\">\r\n          {error.message}\r\n        </h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <motion.main\r\n      className=\"flex-1\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <div className=\"bg-white p-6 rounded-md lg:shadow-md\">\r\n        <h2 className=\"text-2xl font-semibold mb-4\">My Orders</h2>\r\n\r\n        {orders.length === 0 ? (\r\n          <NoOrder />\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            {currentTableData.map((order) => (\r\n              <OrderHistoryCard key={order._id} order={order} />\r\n            ))}\r\n\r\n            <Pagination\r\n              currentPage={parseInt(page, 10)}\r\n              totalCount={orders.length}\r\n              pageSize={limit}\r\n              onPageChange={(page) => setPage(page.toString())}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </motion.main>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","const formatDate = (date) => {\r\n  const day = date.getDate();\r\n  const month = date.toLocaleString(\"default\", { month: \"long\" });\r\n  const year = date.getFullYear();\r\n\r\n  const daySuffix = (day) => {\r\n    if (day > 3 && day < 21) return \"th\"; // Special case for 11th, 12th, 13th\r\n    switch (day % 10) {\r\n      case 1:\r\n        return \"st\";\r\n      case 2:\r\n        return \"nd\";\r\n      case 3:\r\n        return \"rd\";\r\n      default:\r\n        return \"th\";\r\n    }\r\n  };\r\n\r\n  return `${day}${daySuffix(day)} ${month}, ${year}`;\r\n};\r\n\r\nconst formatTime = (date) => {\r\n  return date.toLocaleString(\"en-US\", {\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    hour12: true,\r\n  });\r\n};\r\n\r\nexport { formatDate, formatTime };\r\n"],"names":["getAllOrders","token","getCookie","axiosInstance","get","headers","authorization","getOrderById","orderId","createOrder","orderItems","address","pricingDetails","paymentMethod","post","orderItem","payment_method","process","updateOrderStatus","status","getStatusHistory","_ref","children","type","className","onClick","disabled","reverse","_jsx","DOTS","range","start","end","length","Array","from","_","idx","onPageChange","totalCount","siblingCount","currentPage","pageSize","paginationRange","limit","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","lastPageIndex","rightRange","middleRange","usePagination","lastPage","_jsxs","map","pageNumber","index","Fragment","onPrevious","FiChevronLeft","size","onNext","FiChevronRight","orders","setOrders","useState","order","setOrder","statusHistory","setStatusHistory","loading","setLoading","error","setError","fetchOrders","useCallback","async","response","console","log","data","fetchOrder","fetchStatusHistory","statusDetails","orderStatusDetails","useEffect","useSearchParamsState","searchParamName","defaultValue","replace","arguments","undefined","searchParams","setSearchParams","useSearchParams","isInitialized","useRef","current","has","nextParams","URLSearchParams","set","acquiredSearchParam","newState","delete","toString","navigate","useNavigate","getColorForStatus","formatDate","Date","updatedAt","slice","item","_item$productId","_item$productId2","_item$productId2$prod","_item$productId3","_item$productId4","_item$productId5","Link","to","_id","productId","src","images","alt","productGroup","name","attributes","Object","keys","key","_item$productId6","createdAt","totalPrice","Button","NoOrder","Orders","useOrder","page","setPage","currentTableData","firstPageIndex","message","motion","main","initial","opacity","animate","transition","duration","OrderHistoryCard","Pagination","parseInt","date","day","getDate","month","toLocaleString","year","getFullYear","daySuffix","formatTime","hour","minute","hour12"],"sourceRoot":""}