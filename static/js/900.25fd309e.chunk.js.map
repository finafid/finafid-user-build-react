{"version":3,"file":"static/js/900.25fd309e.chunk.js","mappings":"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","sources":["components/Logout.jsx","hooks/useShare.js","layouts/AccountNav/Tab.jsx","layouts/AccountNav/index.jsx","pages/Account/index.jsx"],"sourcesContent":["import { useAuth } from \"../contexts/authContext\";\r\nimport { useModal } from \"../contexts/modalContext\";\r\nimport Button from \"./Button\";\r\nimport { FaPowerOff } from \"react-icons/fa\";\r\n\r\nconst Logout = () => {\r\n  const { closeModal } = useModal();\r\n  const { logout } = useAuth();\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <div className=\"sm:w-100 bg-white rounded-xl p-12 space-y-12\">\r\n      <div className=\"HEAD space-y-2\">\r\n        <span className=\"block absolute right-1/2 translate-x-1/2 top-0 -translate-y-1/2 w-max bg-primeRed p-4 rounded-full text-white\">\r\n          <FaPowerOff size={32} />\r\n        </span>\r\n        <p className=\"font-medium text-center\">Logout Account</p>\r\n        <p className=\"text-sm font-medium text-primary text-center\">\r\n          Are you sure you want to logout?\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"BTN-SECTION flex justify-center\">\r\n        <Button\r\n          onClick={handleLogout}\r\n          className=\"px-6 py-3 rounded-tl-md rounded-bl-md\"\r\n        >\r\n          yes, logout!\r\n        </Button>\r\n        <Button\r\n          reverse\r\n          onClick={() => closeModal()}\r\n          className=\"px-6 py-3 rounded-tr-md rounded-br-md\"\r\n        >\r\n          cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n","import { useState, useCallback } from \"react\";\r\nimport { useModal } from \"../contexts/modalContext\";\r\nimport InputBox from \"../components/InputBox\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport { useToast } from \"../contexts/toastContext\";\r\n\r\nconst useShare = () => {\r\n  const [isSharing, setIsSharing] = useState(false);\r\n  const { openModal, closeModal } = useModal();\r\n  const toast = useToast();\r\n\r\n  const copyToClipboard = useCallback(\r\n    async (content) => {\r\n      try {\r\n        await navigator.clipboard.writeText(content);\r\n        toast.success(\"Link copied to clipboard!\");\r\n      } catch (error) {\r\n        console.error(\"Failed to copy text:\", error);\r\n        toast.error(\"Failed to copy link. Please try manually.\");\r\n      }\r\n    },\r\n    //eslint-disable-next-line\r\n    [openModal]\r\n  );\r\n\r\n  const handleNonNativeShare = useCallback(\r\n    ({ title, text, url }) => {\r\n      openModal(\r\n        <div className=\"relative max-w-80 w-svw bg-white p-4 space-y-4\">\r\n          <h3 className=\"font-medium\">{title}</h3>\r\n          <p className=\"text-sm\">{text}</p>\r\n          <InputBox\r\n            value={url}\r\n            readOnly\r\n            className=\"px-4 py-2 border border-dark rounded-md text-sm font-medium\"\r\n          />\r\n          <button\r\n            onClick={() => copyToClipboard(url)}\r\n            className=\"w-full bg-blue-500 px-4 py-2 rounded-md text-sm text-white font-medium\"\r\n          >\r\n            Copy Link\r\n          </button>\r\n          <button\r\n            onClick={closeModal}\r\n            className=\"inline-block absolute -top-2 right-2\"\r\n          >\r\n            <IoClose size={18} />\r\n          </button>\r\n        </div>\r\n      );\r\n    },\r\n    [openModal, closeModal, copyToClipboard]\r\n  );\r\n\r\n  const shareContent = useCallback(\r\n    async ({ title, text, url, files }) => {\r\n      if (navigator?.share) {\r\n        try {\r\n          setIsSharing(true);\r\n          const shareData = { title, text, url };\r\n\r\n          if (navigator.canShare && files && navigator.canShare({ files })) {\r\n            shareData.files = files;\r\n          }\r\n\r\n          await navigator.share(shareData);\r\n        } catch (error) {\r\n          console.error(\"Error during native sharing:\", error);\r\n        } finally {\r\n          setIsSharing(false);\r\n        }\r\n      } else {\r\n        handleNonNativeShare({ title, text, url });\r\n      }\r\n    },\r\n    [handleNonNativeShare]\r\n  );\r\n\r\n  return { shareContent, isSharing };\r\n};\r\n\r\nexport default useShare;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useModal } from \"../../contexts/modalContext\";\r\nimport Logout from \"../../components/Logout\";\r\nimport useShare from \"../../hooks/useShare\";\r\nimport { useReferral } from \"../../services/userServices\";\r\n\r\nconst Tab = ({ icon, text, url }) => {\r\n  const location = useLocation();\r\n  const [isSelected, setIsSelected] = useState(false);\r\n  const [isLocation, setIsLocation] = useState(false);\r\n  const { openModal } = useModal();\r\n  const { shareContent } = useShare();\r\n  const { data: referralCode } = useReferral();\r\n\r\n  useEffect(() => {\r\n    if (location.pathname.includes(url)) setIsLocation(true);\r\n  }, [url, location.pathname]);\r\n\r\n  const handleReferralClick = async () => {\r\n    if (referralCode) {\r\n      shareContent({\r\n        title: \"Join us and get rewards!\",\r\n        text: \"Use my referral link to sign up.\",\r\n        url: referralCode,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (text === \"logout\") openModal(<Logout />);\r\n    if (text === \"refer & earn\") handleReferralClick();\r\n  };\r\n\r\n  return (\r\n    <Link\r\n      to={url}\r\n      onMouseEnter={() => setIsSelected(true)}\r\n      onMouseLeave={() => setIsSelected(false)}\r\n      onClick={handleClick}\r\n      className={`relative py-2 max-lg:py-3 px-6 flex items-center gap-4 shadow ${\r\n        isSelected || isLocation ? \"bg-white\" : \"bg-offWhite\"\r\n      }`}\r\n    >\r\n      <div\r\n        className={`${\r\n          isSelected || isLocation ? \"text-primeRed\" : \"lg:text-primary\"\r\n        }`}\r\n      >\r\n        {icon}\r\n      </div>\r\n      <p\r\n        className={`capitalize font-medium ${\r\n          isSelected || isLocation ? \"text-primeRed\" : \"lg:text-primary\"\r\n        }`}\r\n      >\r\n        {text}\r\n      </p>\r\n\r\n      <span\r\n        style={{\r\n          transform: isSelected || isLocation ? \"scaleY(1)\" : \"scaleY(0)\",\r\n        }}\r\n        className=\"absolute h-full w-[2px] bg-primeRed left-0 scale-y-0\"\r\n      />\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Tab;\r\n","import { BiWallet } from \"react-icons/bi\";\r\nimport { useUser } from \"../../contexts/userContext\";\r\nimport { useWallet } from \"../../contexts/walletContext\";\r\nimport { accountTabs } from \"../../utils/Constants\";\r\nimport Tab from \"./Tab\";\r\n\r\nconst AccountNav = () => {\r\n  const { user } = useUser();\r\n  const { balance } = useWallet();\r\n\r\n  return (\r\n    <aside className=\"bg-white w-full lg:w-80 h-max space-y-8 flex-shrink-0\">\r\n      <div className=\"flex flex-col items-center space-y-4 p-4 bg-lightGray rounded-md\">\r\n        <img\r\n          src={user.imgUrl}\r\n          alt={user.fullName}\r\n          className=\"rounded-full size-16 md:size-20\"\r\n        />\r\n        <div>\r\n          <h3 className=\"text-xl text-center font-semibold\">{user.fullName}</h3>\r\n          <div className=\"flex items-center justify-center gap-1\">\r\n            <BiWallet className=\"text-primary\" />\r\n            <p className=\"text-primary\">{balance}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <nav className=\"space-y-2\">\r\n        {accountTabs.map((tab, index) => (\r\n          <Tab key={index} icon={tab.icon} text={tab.title} url={tab.url} />\r\n        ))}\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default AccountNav;\r\n","import { Outlet } from \"react-router-dom\";\r\nimport AccountNav from \"../../layouts/AccountNav\";\r\nimport useMediaQuery from \"../../hooks/useMediaQuery\";\r\n\r\nconst Account = () => {\r\n  const maxLg = useMediaQuery(\"(min-width: 1024px)\");\r\n\r\n  return (\r\n    <main className=\"container max-w-full py-8\">\r\n      <div className=\"WRAPPER flex justify-between gap-16\">\r\n        <AccountNav />\r\n        {maxLg && <Outlet />}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n"],"names":["Logout","closeModal","useModal","logout","useAuth","_jsxs","className","children","_jsx","FaPowerOff","size","Button","onClick","handleLogout","reverse","useShare","isSharing","setIsSharing","useState","openModal","toast","useToast","copyToClipboard","useCallback","async","navigator","clipboard","writeText","content","success","error","console","handleNonNativeShare","_ref","title","text","url","InputBox","value","readOnly","IoClose","shareContent","_navigator","files","_ref2","share","shareData","canShare","icon","location","useLocation","isSelected","setIsSelected","isLocation","setIsLocation","data","referralCode","useReferral","useEffect","pathname","includes","Link","to","onMouseEnter","onMouseLeave","handleClick","handleReferralClick","style","transform","AccountNav","user","useUser","balance","useWallet","src","imgUrl","alt","fullName","BiWallet","accountTabs","map","tab","index","Tab","Account","maxLg","useMediaQuery","Outlet"],"sourceRoot":""}