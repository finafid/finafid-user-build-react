{"version":3,"file":"static/js/404.219b2825.chunk.js","mappings":"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","sources":["components/LeaderBoard.jsx","components/ProductCard.jsx","pages/Utsav/Home/BrandSlide.jsx","pages/Utsav/Home/NewArrivals.jsx","components/Gallery.jsx","pages/Utsav/Home/UtsavGallery.jsx","pages/Utsav/Home/UtsavProducts.jsx","pages/Utsav/Home/index.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { useBanners } from \"../services/bannerServices\";\r\nimport Carousel from \"./Carousel\";\r\nimport Skeleton from \"./Skeleton\";\r\nimport useInView from \"../hooks/useInView\";\r\nimport useMediaQuery from \"../hooks/useMediaQuery\";\r\n\r\nconst LeaderBoard = ({\r\n  preload = false,\r\n  position,\r\n  resourceType,\r\n  valueId,\r\n  title,\r\n  subtitle,\r\n  className,\r\n  containerClassName = \"container max-w-full\",\r\n}) => {\r\n  const containerRef = useRef(null);\r\n  const hasFetchedOnce = useRef(false);\r\n  const [shouldFetch, setShouldFetch] = useState(preload);\r\n  const maxMd = useMediaQuery(\"(max-width: 768px)\");\r\n\r\n  const isInView = useInView(containerRef, {\r\n    threshold: 0.1,\r\n    rootMargin: \"100px\",\r\n  });\r\n\r\n  const { data: banners = [], isLoading } = useBanners(\r\n    {\r\n      bannerType: \"Leaderboard\",\r\n      position,\r\n      resourceType,\r\n      valueId,\r\n    },\r\n    { enabled: shouldFetch }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!hasFetchedOnce.current && isInView && position && resourceType) {\r\n      setShouldFetch(true);\r\n      hasFetchedOnce.current = true;\r\n    }\r\n  }, [isInView, position, resourceType]);\r\n\r\n  return (\r\n    <div ref={containerRef}>\r\n      {isLoading ? (\r\n        <ul className={`flex gap-4 overflow-x-hidden ${containerClassName}`}>\r\n          {Array.from({ length: 1 }).map((_, index) => (\r\n            <li\r\n              key={index}\r\n              className={`block relative w-full h-30 max-lg:h-20 max-md:h-10 overflow-hidden flex-shrink-0 ${className}`}\r\n            >\r\n              <Skeleton />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        banners?.length > 0 && (\r\n          <div className={`space-y-4 max-lg::space-y-2 ${containerClassName}`}>\r\n            {title || subtitle ? (\r\n              <div>\r\n                <h1 className=\"text-2xl max-lg:text-xl font-bold\">{title}</h1>\r\n                <p className=\"text-sm\">{subtitle}</p>\r\n              </div>\r\n            ) : null}\r\n            <Carousel autoplay delay={5000} navigation={!maxMd} pagination>\r\n              {banners.map((banner) => (\r\n                <a\r\n                  key={banner.bannerTitle || banner._id}\r\n                  href={banner.linkUrl}\r\n                  className=\"block relative w-full h-max\"\r\n                >\r\n                  <img\r\n                    src={banner.bannerImg}\r\n                    alt={banner.bannerTitle || banner._id}\r\n                    loading=\"lazy\"\r\n                    className={`w-full object-cover object-center ${className}`}\r\n                  />\r\n                </a>\r\n              ))}\r\n            </Carousel>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaderBoard;\r\n","import { IoMdHeart } from \"react-icons/io\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useWishlist } from \"../contexts/wishlistContext\";\r\nimport RatingBadge from \"./RatingBadge\";\r\nimport { useRatingDetails } from \"../services/productService\";\r\nimport { useState } from \"react\";\r\nimport Carousel from \"./Carousel\";\r\nimport utsavBadge from \"../assets/images/utsav-badge.png\";\r\n\r\nconst ProductCard = ({ product, dropdown = false }) => {\r\n  const navigate = useNavigate();\r\n  const { addToWishlist, removeFromWishlist, isWished } = useWishlist();\r\n  const { data, isLoading: ratingLoading } = useRatingDetails(\r\n    product.productGroup._id\r\n  );\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const toggleWishlist = (e) => {\r\n    e.stopPropagation();\r\n\r\n    if (isWished(product._id)) {\r\n      removeFromWishlist(product._id);\r\n    } else {\r\n      addToWishlist(product._id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n      className={`size-full flex flex-col border border-secondary rounded-md overflow-hidden hover:shadow-md ${\r\n        product.quantity <= 0 && \"opacity-75\"\r\n      }`}\r\n    >\r\n      <div\r\n        onClick={() => navigate(`/product/${product._id}`)}\r\n        className=\"ITEM-IMAGES relative w-full pt-[100%] cursor-pointer\"\r\n      >\r\n        <div className=\"absolute inset-0 overflow-hidden\">\r\n          {isHovered &&\r\n          product?.productGroup?.otherImages &&\r\n          product?.productGroup?.thumbnail ? (\r\n            <Carousel pagination autoplay delay={2000} loop>\r\n              {[\r\n                ...product?.images,\r\n                ...product?.productGroup?.otherImages,\r\n                ...product?.productGroup?.thumbnail,\r\n              ].map((image, index) => (\r\n                <img\r\n                  key={index}\r\n                  src={image}\r\n                  alt={index}\r\n                  className=\"size-full object-contain object-center\"\r\n                />\r\n              ))}\r\n            </Carousel>\r\n          ) : (\r\n            <img\r\n              src={product?.images[0]}\r\n              alt={product?.productGroup?.name}\r\n              className=\"size-full object-contain object-center\"\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"absolute bottom-2 left-2 z-[5]\">\r\n          {!ratingLoading && data?.averageRating > 0 && (\r\n            <RatingBadge\r\n              rating={data.averageRating}\r\n              totalRatings={data.totalCount}\r\n              ratingsBreakdown={data.ratingCounts}\r\n              dropdown={dropdown}\r\n            />\r\n          )}\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={toggleWishlist}\r\n          className=\"absolute top-2 right-2 z-[5]\"\r\n        >\r\n          <IoMdHeart\r\n            className={`${\r\n              isWished(product._id)\r\n                ? \"text-primeRed\"\r\n                : \"text-halfGray stroke-2 stroke-black\"\r\n            }`}\r\n            size={20}\r\n          />\r\n        </button>\r\n        {product?.isUtsav && (\r\n          <div className=\"absolute top-2 left-2 z-[5]\">\r\n            <img src={utsavBadge} alt=\"utsav\" className=\"h-2\" />\r\n          </div>\r\n        )}\r\n        {product.quantity <= 0 && (\r\n          <div className=\"absolute inset-x-0 bottom-0 bg-lightGray z-10 p-1\">\r\n            <p className=\"font-bold text-error text-center\">SOLD OUT</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"ITEM-DETAILS p-2 leading-none font-secondary flex-grow\">\r\n        <p className=\"NAME text-sm max-md:text-xs font-medium line-clamp-1 text-center\">\r\n          {product?.name}\r\n        </p>\r\n        <Link\r\n          to={`/brand/${product?.productGroup?.brand?._id}`}\r\n          className=\"BRAND font-medium text-xs max-lg:text-xxs text-primary text-center leading-none\"\r\n        >\r\n          <p>{product?.productGroup?.brand?.name}</p>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"BOTTOM-SECTION flex flex-col justify-center items-center gap-y-1 p-2 pt-0\">\r\n        <div className=\"md:space-y-1\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <p className=\"text-xs max-md:text-xxs text-center font-medium text-primary line-through leading-none\">\r\n              ₹ {Math.round(product?.unitPrice)}\r\n            </p>\r\n            <p className=\"font-bold text-lg max-md:text-sm md:text-center leading-none\">\r\n              ₹ {Math.round(product?.sellingPrice)}\r\n            </p>\r\n            {product?.discount > 0 && (\r\n              <span className=\"leading-none text-sm max-md:text-xs font-medium text-green-500\">\r\n                {product?.discountType === \"percent\"\r\n                  ? `${product.discount}%`\r\n                  : `₹${product.discount} OFF`}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"UTSAV-PRICING flex items-center lg:gap-2 gap-1 whitespace-nowrap text-success\">\r\n          <p className=\"font-medium leading-none max-lg:text-xs\">Utsav Price</p>\r\n          <p className=\"text-lg max-lg:text-sm font-bold leading-none\">\r\n            ₹ {Math.round(product.utsavPrice)}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import { Link } from \"react-router-dom\";\r\nimport Carousel from \"../../../components/Carousel\";\r\nimport { useUtsavFeaturedBrands } from \"../../../services/brandService\";\r\nimport useMediaQuery from \"../../../hooks/useMediaQuery\";\r\n\r\nconst BrandSlide = () => {\r\n  const {\r\n    data: utsavFeaturedBrands,\r\n    isLoading,\r\n    error,\r\n  } = useUtsavFeaturedBrands();\r\n  const maxXl = useMediaQuery(\"(max-width: 1280px)\");\r\n  const maxLg = useMediaQuery(\"(max-width: 1024px)\");\r\n\r\n  if (isLoading) {\r\n    return <></>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    utsavFeaturedBrands?.length > 0 && (\r\n      <div className=\"container max-w-full space-y-6 max-lg:space-y-4\">\r\n        <h1 className=\"text-2xl max-lg:text-xl font-bold font-secondary\">\r\n          Top Brands\r\n        </h1>\r\n\r\n        <div className=\"max-w-max mx-auto\">\r\n          <Carousel\r\n            slideWidth={maxLg ? 60 : maxXl ? 80 : 120}\r\n            allowTouchMove\r\n            spaceBetween={maxLg ? 10 : 30}\r\n          >\r\n            {utsavFeaturedBrands.map((brand) => (\r\n              <Link\r\n                to={`/brand/${brand._id}`}\r\n                key={brand.name || brand._id}\r\n                className=\"inline-block relative\"\r\n              >\r\n                <img\r\n                  src={brand.logoUrl}\r\n                  alt={brand.name || brand._id}\r\n                  loading=\"lazy\"\r\n                  className=\"size-[100px] max-xl:size-[80px] max-lg:size-[60px] object-cover object-center\"\r\n                />\r\n              </Link>\r\n            ))}\r\n          </Carousel>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default BrandSlide;\r\n","import Carousel from \"../../../components/Carousel\";\r\nimport ProductCard from \"../../../components/ProductCard\";\r\nimport useMediaQuery from \"../../../hooks/useMediaQuery\";\r\nimport { useNewArrivals } from \"../../../services/productService\";\r\n\r\nconst NewArrivals = () => {\r\n  const { data: newArrivals = [], isLoading, error } = useNewArrivals();\r\n  const maxXl = useMediaQuery(\"(max-width: 1280px)\");\r\n  const minMd = useMediaQuery(\"(min-width: 768px)\");\r\n\r\n  if (isLoading) {\r\n    return <></>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    newArrivals.length > 0 && (\r\n      <div className=\"container max-w-full space-y-8 max-lg:space-y-4\">\r\n        <h1 className=\"text-2xl max-lg:text-xl font-bold\">New Arrivals</h1>\r\n\r\n        <Carousel\r\n          slideWidth={!minMd ? 160 : 200}\r\n          spaceBetween={maxXl ? 10 : 14}\r\n          allowTouchMove\r\n          navigation\r\n        >\r\n          {newArrivals.map((product, index) => (\r\n            <ProductCard key={index} product={product} />\r\n          ))}\r\n        </Carousel>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default NewArrivals;\r\n","import Masonry from \"react-masonry-css\";\r\n\r\nconst breakpointColumnsObj = {\r\n  default: 3,\r\n  1100: 3,\r\n  700: 2,\r\n  500: 1,\r\n};\r\n\r\nconst Gallery = ({ children }) => {\r\n  return (\r\n    <Masonry\r\n      breakpointCols={breakpointColumnsObj}\r\n      className=\"flex w-auto space-x-4 max-lg:space-x-2\"\r\n      columnClassName=\"space-y-4 max-lg:space-y-2\"\r\n    >\r\n      {children}\r\n    </Masonry>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import { Link } from \"react-router-dom\";\r\nimport Gallery from \"../../../components/Gallery\";\r\nimport { useGalleryBanners } from \"../../../services/bannerServices\";\r\n\r\nconst UtsavGallery = () => {\r\n  const { data: banners = [], isLoading, error } = useGalleryBanners();\r\n\r\n  const renderSlides = (banners) => {\r\n    return banners.map((banner) => (\r\n      <Link\r\n        to={`/category/${banner?.categoryId?._id}`}\r\n        className=\"block relative\"\r\n      >\r\n        <img\r\n          src={banner.bannerImg}\r\n          alt={banner.title || banner._id}\r\n          loading=\"lazy\"\r\n        />\r\n      </Link>\r\n    ));\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <></>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    banners.length > 0 && (\r\n      <div className=\"container max-w-full\">\r\n        <Gallery>{renderSlides(banners)}</Gallery>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default UtsavGallery;\r\n","import { useMemo } from \"react\";\r\nimport Pagination from \"../../../components/Pagination\";\r\nimport ProductBox from \"../../../components/ProductBox\";\r\nimport { useAllUtsavVariants } from \"../../../services/productService\";\r\nimport { useSearchParamsState } from \"../../../hooks/useSearchParamsState\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UtsavProducts = () => {\r\n  const { data: products = [], isLoading } = useAllUtsavVariants();\r\n  const [page, setPage] = useSearchParamsState(\"page\", 1);\r\n  const limit = 20;\r\n\r\n  const currentProducts = useMemo(() => {\r\n    const firstPageIndex = (page - 1) * limit;\r\n    const lastPageIndex = firstPageIndex + limit;\r\n    return products.slice(firstPageIndex, lastPageIndex);\r\n  }, [page, products, limit]);\r\n\r\n  return (\r\n    <div className=\"container max-w-full space-y-8 max-lg:space-y-4\">\r\n      <div className=\"HEADING flex items-center justify-between flex-wrap gap-y-2\">\r\n        <div>\r\n          <h1 className=\"text-2xl max-lg:text-xl font-bold\">All Products</h1>\r\n          <p className=\"font-light text-sm max-lg:text-xs\">\r\n            Discover our selection of popular and new products that are sure to\r\n            catch your eye.\r\n          </p>\r\n        </div>\r\n\r\n        <Link to=\"/products\" className=\"font-bold text-blue-500\">\r\n          See more\r\n        </Link>\r\n      </div>\r\n\r\n      {isLoading ? (\r\n        <section className=\"w-full\">\r\n          <h2 className=\"text-center font-secondary font-medium text-xl\">\r\n            Fetching Products\r\n          </h2>\r\n        </section>\r\n      ) : (\r\n        <section className=\"w-full\">\r\n          {products.length === 0 ? (\r\n            <p className=\"text-center font-secondary font-medium text-xl\">\r\n              No Products Found\r\n            </p>\r\n          ) : (\r\n            <ul className=\"grid grid-cols-2 lg:gap-8 sm:gap-4 gap-1 sm:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5\">\r\n              {currentProducts.map((productItem, index) => (\r\n                <li key={index} className=\"flex justify-center items-center\">\r\n                  <ProductBox product={productItem} />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n\r\n          <div className=\"PAGINATION\">\r\n            <Pagination\r\n              currentPage={parseInt(page, 10)}\r\n              totalCount={products.length}\r\n              pageSize={limit}\r\n              onPageChange={(page) => setPage(page.toString())}\r\n            />\r\n          </div>\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UtsavProducts;\r\n","import HeroBanner from \"../../../components/HeroBanner\";\r\nimport LeaderBoard from \"../../../components/LeaderBoard\";\r\nimport BrandSlide from \"./BrandSlide\";\r\nimport NewArrivals from \"./NewArrivals\";\r\nimport UtsavGallery from \"./UtsavGallery\";\r\nimport UtsavProducts from \"./UtsavProducts\";\r\n\r\nconst UtsavHome = () => {\r\n  return (\r\n    <main className=\"space-y-8 py-8\">\r\n      <HeroBanner position=\"Top\" resourceType=\"Utsav\" />\r\n      <LeaderBoard position=\"Middle_1\" resourceType=\"Utsav\" />\r\n      <UtsavGallery />\r\n      <NewArrivals />\r\n      <LeaderBoard position=\"Middle_2\" resourceType=\"Utsav\" />\r\n      <BrandSlide />\r\n      <UtsavProducts />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default UtsavHome;\r\n"],"names":["_ref","preload","position","resourceType","valueId","title","subtitle","className","containerClassName","containerRef","useRef","hasFetchedOnce","shouldFetch","setShouldFetch","useState","maxMd","useMediaQuery","isInView","useInView","threshold","rootMargin","data","banners","isLoading","useBanners","bannerType","enabled","useEffect","current","_jsx","ref","children","Array","from","length","map","_","index","Skeleton","_jsxs","Carousel","autoplay","delay","navigation","pagination","banner","href","linkUrl","src","bannerImg","alt","bannerTitle","_id","loading","_product$productGroup","_product$productGroup2","_product$productGroup3","_product$productGroup4","_product$productGroup5","_product$productGroup6","_product$productGroup7","_product$productGroup8","_product$productGroup9","product","dropdown","navigate","useNavigate","addToWishlist","removeFromWishlist","isWished","useWishlist","ratingLoading","useRatingDetails","productGroup","isHovered","setIsHovered","onMouseEnter","onMouseLeave","quantity","onClick","otherImages","thumbnail","loop","images","image","name","averageRating","RatingBadge","rating","totalRatings","totalCount","ratingsBreakdown","ratingCounts","type","e","stopPropagation","IoMdHeart","size","isUtsav","utsavBadge","Link","to","brand","Math","round","unitPrice","sellingPrice","discount","discountType","utsavPrice","BrandSlide","utsavFeaturedBrands","error","useUtsavFeaturedBrands","maxXl","maxLg","_Fragment","message","slideWidth","allowTouchMove","spaceBetween","logoUrl","NewArrivals","newArrivals","useNewArrivals","minMd","ProductCard","breakpointColumnsObj","default","Masonry","breakpointCols","columnClassName","UtsavGallery","useGalleryBanners","Gallery","_banner$categoryId","categoryId","renderSlides","UtsavProducts","products","useAllUtsavVariants","page","setPage","useSearchParamsState","currentProducts","useMemo","firstPageIndex","lastPageIndex","slice","productItem","ProductBox","Pagination","currentPage","parseInt","pageSize","onPageChange","toString","UtsavHome","HeroBanner","LeaderBoard"],"sourceRoot":""}