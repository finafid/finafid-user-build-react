{"version":3,"file":"static/js/990.45f7cadf.chunk.js","mappings":"iLAEA,MA4IA,EA5IsBA,IAAgB,IAAf,MAAEC,GAAOD,EAC9B,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0CAAyCC,SAAC,oBAEvDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wDAAuDC,SAAA,EACpEF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,SAAQC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,8BAA6BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,MAAIC,MAAM,MAAMH,UAAU,kCAAiCC,SAAC,SAG5DC,EAAAA,EAAAA,KAAA,MAAIC,MAAM,MAAMH,UAAU,kCAAiCC,SAAC,aAG5DC,EAAAA,EAAAA,KAAA,MAAIC,MAAM,MAAMH,UAAU,wBAAuBC,SAAC,SAGlDC,EAAAA,EAAAA,KAAA,MAAIC,MAAM,MAAMH,UAAU,wBAAuBC,SAAC,SAGlDC,EAAAA,EAAAA,KAAA,MAAIC,MAAM,MAAMH,UAAU,wBAAuBC,SAAC,WAGlDC,EAAAA,EAAAA,KAAA,MAAIC,MAAM,MAAMH,UAAU,wBAAuBC,SAAC,cAGlDC,EAAAA,EAAAA,KAAA,MAAIC,MAAM,MAAMH,UAAU,wBAAuBC,SAAC,gBAKtDC,EAAAA,EAAAA,KAAA,SAAAD,SACGH,EAAMM,UAAUC,KAAI,CAACC,EAAMC,KAAK,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAC/BlB,EAAAA,EAAAA,MAAA,MAAgBC,UAAU,4BAA2BC,SAAA,EACnDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,OAAMC,SAAEM,EAAQ,KAC9BL,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SACtBK,EAAKY,WACJnB,EAAAA,EAAAA,MAACoB,EAAAA,GAAI,CACHC,GAAE,YAAAC,OAA4B,QAA5Bb,EAAcF,EAAKY,iBAAS,IAAAV,OAAA,EAAdA,EAAgBc,KAChCtB,UAAU,0BAAyBC,SAAA,EAEnCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACtBC,EAAAA,EAAAA,KAAA,OACEqB,IAAS,OAAJjB,QAAI,IAAJA,GAAe,QAAXG,EAAJH,EAAMY,iBAAS,IAAAT,OAAX,EAAJA,EAAiBe,OAAO,GAC7BC,IAAS,OAAJnB,QAAI,IAAJA,GAAe,QAAXI,EAAJJ,EAAMY,iBAAS,IAAAR,GAAc,QAAdC,EAAfD,EAAiBgB,oBAAY,IAAAf,OAAzB,EAAJA,EAA+BgB,KACpC3B,UAAU,4CAGdD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SAAgB,QAAhBW,EAAEN,EAAKY,iBAAS,IAAAN,OAAA,EAAdA,EAAgBe,QAC7CzB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wBAIPC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iGAAgGC,SAAC,uBAKpHC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wBAAuBC,UACnCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,UAASC,SAAgB,QAAhBY,EAAEP,EAAKY,iBAAS,IAAAL,OAAA,EAAdA,EAAgBe,SAE1C1B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wBAAuBC,UACnCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,UAASC,SAAEK,EAAKuB,kBAE/B3B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wBAAuBC,SAClCK,EAAKY,YACJnB,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASC,SAAA,CAAC,WACJ,QAAda,EAAAR,EAAKY,iBAAS,IAAAJ,OAAA,EAAdA,EAAgBgB,WAAYxB,EAAKuB,mBAI1C3B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wBAAuBC,SAClCK,EAAKY,YACJnB,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASC,SAAA,CAAC,SACnB,MACc,QAAdc,EAAAT,EAAKY,iBAAS,IAAAH,OAAA,EAAdA,EAAgBe,YACF,QADWd,EACzBV,EAAKY,iBAAS,IAAAF,OAAA,EAAdA,EAAgBe,eAChBzB,EAAKuB,mBAIb3B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wBAAuBC,SAClCK,EAAKY,YACJnB,EAAAA,EAAAA,MAAA,KAAGC,UAAU,UAASC,SAAA,CAAC,WACJ,QAAdgB,EAAAX,EAAKY,iBAAS,IAAAD,OAAA,EAAdA,EAAgBc,cAAezB,EAAKuB,oBArDtCtB,EAyDJ,UAIXR,EAAAA,EAAAA,MAAA,MAAIC,UAAU,yDAAwDC,SAAA,EACpEF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,8BAA6BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iBAAgBC,SAAC,cAC9BF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,UAAGH,EAAMkC,gBAEdjC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,8BAA6BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iBAAgBC,SAAC,cAC9BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,eAAcC,SAAA,CAAC,YAAKH,EAAMmC,gBAEzClC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,8BAA6BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iBAAgBC,SAAC,oBAC9BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,eAAcC,SAAA,CAAC,YAAKH,EAAMoC,qBAEzCnC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,8BAA6BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iBAAgBC,SAAC,qBAC9BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,eAAcC,SAAA,CAAC,YAAKH,EAAMqC,sBAEzCpC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,8BAA6BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iBAAgBC,SAAC,yBAC9BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,eAAcC,SAAA,CAAC,YAAKH,EAAMsC,yBAEzCrC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,8BAA6BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iBAAgBC,SAAC,gBAC9BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,eAAcC,SAAA,CAAC,UAAGH,EAAMuC,IAAIC,QAAQ,UAEnDvC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,8BAA6BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iBAAgBC,SAAC,cAC9BC,EAAAA,EAAAA,KAAA,KAAAD,SACGH,EAAMyC,aAAe,EAAC,UAAAlB,OAChBvB,EAAMyC,eAEXrC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,yBAAwBC,SAAC,wBAI/CF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,mDAAkDC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,WACHF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,UAAGH,EAAM0C,yBAId,E,2CCpIV,MAAMC,EAAgB,CACpB,YACA,WACA,mBACA,aA0HF,EAvHgB5C,IAAuC,IAAtC,cAAE6C,EAAa,cAAEC,GAAe9C,EAC/C,MAAM+C,GAAQC,EAAAA,EAAAA,GAAc,sBAEtBC,EACc,cAAlBJ,EACI,IAAID,EAAe,aACD,aAAlBC,EACA,IAAID,EAAe,YACD,qBAAlBC,EACA,IAAID,EAAe,oBACD,qBAAlBC,EACD,IAAID,EAAc,oBACjBA,EAEAM,EAAsBJ,EAAcK,MACxC,CAACC,EAAGC,IACFC,EAAAA,GAAkBC,QAAQH,EAAEI,QAAUF,EAAAA,GAAkBC,QAAQF,EAAEG,UAGhEC,EAAsBR,EAAgBzC,KAAKkD,GACvBR,EAAoBS,MACzCH,GAAWA,EAAOA,SAAWE,KAGX,CACjBF,OAAQE,EACRE,KAAM,KACNnC,IAAI,eAADD,OAAiBkC,MAKpBG,EAAqBJ,EAAoBK,WAC5CN,GAAWA,EAAOA,SAAWX,IAGhC,OACE3C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0CAAyCC,SAAA,EACtDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sHAAqHC,SACjIqD,EAAoBjD,KAAI,CAACgD,EAAQ9C,KAChCR,EAAAA,EAAAA,MAAC6D,EAAAA,SAAQ,CAAA3D,SAAA,EACPF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,QACEF,UAAS,iEAAAqB,OACPd,GAASmD,GAAsBL,EAAOI,KAClC,kBACA,mBACHxD,SAEFM,GAASmD,GAAsBL,EAAOI,OACrCvD,EAAAA,EAAAA,KAAA,QAAMF,UAAU,6CAIpBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kJAAiJC,SAAA,EAC9JC,EAAAA,EAAAA,KAAA,KACEF,UAAS,0BAAAqB,OACPd,GAASmD,GAAsBL,EAAOI,KAClC,gBACA,gBACHxD,SAEFoD,EAAOA,UAEVnD,EAAAA,EAAAA,KAAA,KAAAD,SAAIoD,EAAOI,MAAOI,EAAAA,EAAAA,IAAW,IAAIC,KAAKT,EAAOI,OAAS,QAGvDJ,EAAOA,SAAWX,GAAiBE,GAClC1C,EAAAA,EAAAA,KAAA,QAAMF,UAAU,2GACd,QAGLO,IAAU+C,EAAoBS,OAAS,IACtC7D,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0GAAyGC,SACrHM,EAAQmD,GAAsBL,EAAOI,OACpCvD,EAAAA,EAAAA,KAAA,QAAMF,UAAU,sIAnCTqD,EAAO/B,UA0CD,IAAxBoC,IACC3D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+EAA8EC,SAAA,EAC3FF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2CAA0CC,SAAA,EACvDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAUC,SACpB,IAAI6D,KAAKR,EAAoBI,GAAoBD,MAAMO,aAE1D9D,EAAAA,EAAAA,KAAA,KAAAD,SACG,IAAI6D,KAAKR,EAAoBI,GAAoBD,MAC/CQ,eAAe,UAAW,CAAEC,MAAO,UACnCC,oBAGPpE,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,cAAaC,SAAA,YAAAoB,OAAcqB,EAAc0B,kBACtDlE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,UAChCoE,EAAAA,EAAAA,IACC,IAAIP,KAAKR,EAAoBI,GAAoBD,iBAMvD,EC3EV,EAxCoB5D,IAAuC,IAAtC,cAAE8C,EAAa,cAAED,GAAe7C,EACnD,OACEK,EAAAA,EAAAA,KAAAoE,EAAAA,SAAA,CAAArE,UAKEF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0CAAyCC,SAAC,sBAGvDC,EAAAA,EAAAA,KAACqE,EAAO,CAAC7B,cAAeA,EAAeC,cAAeA,QAyBvD,E,4CCxBP,MA8FA,EA9Fc6B,KACZ,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACZC,KAAM7E,EAAK,UAAE8E,EAAS,MAAEC,IAAUC,EAAAA,EAAAA,IAAaL,IAErDE,KAAMhC,EACNiC,UAAWG,EACXF,MAAOG,IACLC,EAAAA,EAAAA,IAAeR,GACbS,GAAmBC,EAAAA,EAAAA,MACnBC,GAAQC,EAAAA,EAAAA,KAed,OAAIT,GAEA1E,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,UACrBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SAAC,iBAKvD4E,GAEA3E,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,UACrBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SACjD4E,EAAMS,YAObxF,IACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,iFAAgFC,SAAA,EAC9FF,EAAAA,EAAAA,MAAA,WAASC,UAAU,WAAUC,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wCAAuCC,SAAC,mBAGtDC,EAAAA,EAAAA,KAAA,QACEF,UAAS,0BAAAqB,QAA4BkE,EAAAA,EAAAA,IACnCzF,EAAMuD,SACJpD,UAEJC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iCAAgCC,SAC1CH,EAAMuD,OAAOc,sBAKpBpE,EAAAA,EAAAA,MAAA,KAAGC,UAAU,4CAA2CC,SAAA,CAAC,oBACtC4D,EAAAA,EAAAA,IAAW,IAAIC,KAAKhE,EAAM0F,gBAG7CzF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,4CAA2CC,SAAA,CAAC,gBAC1C4D,EAAAA,EAAAA,IAAW,IAAIC,KAAKhE,EAAM2F,8BAI3CvF,EAAAA,EAAAA,KAACwF,EAAAA,EAAM,CACLC,KAAK,SACLC,SAAO,EACPC,QA9DsBC,KAC5BZ,EAAiBa,OAAOtB,EAAS,CAC/BuB,UAAYC,IACV,MAAMC,EAAaD,EAASE,YAC5BC,OAAOC,KAAKH,EAAY,SAAS,EAEnCI,QAAUzB,IACR0B,QAAQ1B,MAAMA,EAAMS,SACpBF,EAAMP,MAAM,iCAAiC,GAE/C,EAqDI7E,UAAU,iCAAgCC,UAE1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCC,EAAAA,EAAAA,KAACsG,EAAAA,IAAU,CAACC,KAAM,MAClBvG,EAAAA,EAAAA,KAAA,KAAGF,UAAU,cAAaC,SAAC,kBAI/BC,EAAAA,EAAAA,KAACwG,EAAa,CAAC5G,MAAOA,IACpBiF,GAAkBC,EAKhB,MAJF9E,EAAAA,EAAAA,KAACyG,EAAW,CACVhE,cAAeA,EACfD,cAAe5C,EAAMuD,WAI5B,C,kHC/FL,MAAMuD,EAAYA,KACTC,EAAAA,EAAAA,GAAS,CACdC,SAAU,CAAC,UACXC,QAASC,EAAAA,GACTC,UAAW,MAITnC,EAAgBL,IACboC,EAAAA,EAAAA,GAAS,CACdC,SAAU,CAAC,QAASrC,GACpBsC,QAASA,KAAMG,EAAAA,EAAAA,GAAazC,GAC5BwC,UAAW,IACXE,UAAW1C,IAITQ,EAAkBR,IACfoC,EAAAA,EAAAA,GAAS,CACdC,SAAU,CAAC,cAAerC,GAC1BsC,QAASA,KAAMK,EAAAA,EAAAA,IAAiB3C,GAChCwC,UAAW,IACXE,UAAW1C,IAIT4C,EAAkB5C,IACtB,MAAM6C,GAAcC,EAAAA,EAAAA,MAEpB,OAAOC,EAAAA,EAAAA,GAAY,CACjBC,WAAYC,EAAAA,GACZ1B,UAAWA,KACTsB,EAAYK,kBAAkB,CAAC,WAC/BL,EAAYK,kBAAkB,CAAC,QAASlD,IACxC6C,EAAYK,kBAAkB,CAAC,cAAelD,GAAS,GAEzD,EAGEU,EAAsBV,IAC1B,MAAM6C,GAAcC,EAAAA,EAAAA,MAEpB,OAAOC,EAAAA,EAAAA,GAAY,CACjBC,WAAYG,EAAAA,GACZ5B,UAAWA,KACTsB,EAAYK,kBAAkB,CAAC,QAASlD,GAAS,GAEnD,C,gHCtDJ,MAAMuC,EAAea,gBACIC,EAAAA,EAAcC,IAAI,qBACzBpD,KAGZuC,EAAeW,gBACIC,EAAAA,EAAcC,IAAI,iBAAD1G,OAAkBoD,KAC1CE,KAGZqD,EAAcA,CAACC,EAAYC,EAASC,EAAgBC,IACjDN,EAAAA,EAAcO,KACnB,eAAaC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAEXlI,UAAW6H,EACXC,WACGC,GAAc,IACjBI,eAAgBH,IAElB,CACEI,QAAS,CACP,YAAaC,sEA+BfC,EAAoBA,CAACjE,EAASpB,IAC3ByE,EAAAA,EAAcO,KAAK,iBAADhH,OACNoD,GACjB,CAAEpB,UACF,CACEmF,QAAS,CACP,YAAaC,sEAMfrB,EAAmBS,UAAoB,IAADc,EAAAC,EAE1C,OAAoB,QAApBD,SADuBb,EAAAA,EAAcC,IAAI,uBAAD1G,OAAwBoD,KAChDE,YAAI,IAAAgE,GAAe,QAAfC,EAAbD,EAAeE,qBAAa,IAAAD,OAAf,EAAbA,EAA8BE,kBAAkB,EAGnDpB,EAAcG,gBACKC,EAAAA,EAAcC,IAAI,mBAAD1G,OAAoBoD,KAC5CE,KAGZiD,EAAkBC,gBACCC,EAAAA,EAAcC,IAAI,oBAAD1G,OAAqBoD,KAC7CE,I","sources":["pages/Order/PurchaseTable.jsx","components/Tracker.jsx","pages/Order/OrderStatus.jsx","pages/Order/index.jsx","services/orderServices.js","api/orderApis.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst PurchaseTable = ({ order }) => {\n  return (\n    <div className=\"DETAILS \">\n      <p className=\"font-medium font-secondary text-lg my-2\">Item Ordered :</p>\n\n      <div className=\"w-full border border-black rounded-lg overflow-x-auto\">\n        <table className=\"w-full\">\n          <thead>\n            <tr className=\"bg-lightGray font-secondary\">\n              <th scope=\"col\" className=\"px-6 py-4 text-left font-medium\">\n                SL.\n              </th>\n              <th scope=\"col\" className=\"px-6 py-4 text-left font-medium\">\n                Product\n              </th>\n              <th scope=\"col\" className=\"px-6 py-4 font-medium\">\n                SKU\n              </th>\n              <th scope=\"col\" className=\"px-6 py-4 font-medium\">\n                QTY\n              </th>\n              <th scope=\"col\" className=\"px-6 py-4 font-medium\">\n                Price\n              </th>\n              <th scope=\"col\" className=\"px-6 py-4 font-medium\">\n                Discount\n              </th>\n              <th scope=\"col\" className=\"px-6 py-4 font-medium\">\n                Total\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {order.orderItem.map((item, index) => (\n              <tr key={index} className=\"border-b-2 border-primary\">\n                <td className=\"px-6\">{index + 1}</td>\n                <td className=\"px-4 py-3\">\n                  {item.productId ? (\n                    <Link\n                      to={`/product/${item.productId?._id}`}\n                      className=\"PRODUCT-MAIN flex gap-4\"\n                    >\n                      <div className=\"size-16\">\n                        <img\n                          src={item?.productId?.images[0]}\n                          alt={item?.productId?.productGroup?.name}\n                          className=\"size-full object-cover object-center\"\n                        />\n                      </div>\n                      <div className=\"text-xs\">\n                        <h3 className=\"font-medium\">{item.productId?.name}</h3>\n                        <p>Size: XS</p>\n                        <p>Color: White</p>\n                      </div>\n                    </Link>\n                  ) : (\n                    <div className=\"size-16 bg-lightGray flex items-center justify-center text-primary rounded text-xs text-center\">\n                      Invalid Product\n                    </div>\n                  )}\n                </td>\n                <td className=\"px-4 py-3 text-center\">\n                  <p className=\"text-sm\">{item.productId?.sku}</p>\n                </td>\n                <td className=\"px-4 py-3 text-center\">\n                  <p className=\"text-sm\">{item.itemQuantity}</p>\n                </td>\n                <td className=\"px-4 py-3 text-center\">\n                  {item.productId && (\n                    <p className=\"text-sm\">\n                      ₹ {item.productId?.unitPrice * item.itemQuantity}\n                    </p>\n                  )}\n                </td>\n                <td className=\"px-4 py-3 text-center\">\n                  {item.productId && (\n                    <p className=\"text-sm\">\n                      ₹{\" \"}\n                      {(item.productId?.unitPrice -\n                        item.productId?.sellingPrice) *\n                        item.itemQuantity}\n                    </p>\n                  )}\n                </td>\n                <td className=\"px-4 py-3 text-center\">\n                  {item.productId && (\n                    <p className=\"text-sm\">\n                      ₹ {item.productId?.sellingPrice * item.itemQuantity}\n                    </p>\n                  )}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <ul className=\"TABLE-FOOTER space-y-1 ml-auto w-80 px-12 py-2 text-sm\">\n          <li className=\"flex justify-between gap-12\">\n            <p className=\"text-secondary\">Subtotal</p>\n            <p>₹ {order.subtotal}</p>\n          </li>\n          <li className=\"flex justify-between gap-12\">\n            <p className=\"text-secondary\">Discount</p>\n            <p className=\"text-success\">- ₹ {order.discount}</p>\n          </li>\n          <li className=\"flex justify-between gap-12\">\n            <p className=\"text-secondary\">Utsav Discount</p>\n            <p className=\"text-success\">- ₹ {order.utsavDiscount}</p>\n          </li>\n          <li className=\"flex justify-between gap-12\">\n            <p className=\"text-secondary\">Coupon Discount</p>\n            <p className=\"text-success\">- ₹ {order.couponDiscount}</p>\n          </li>\n          <li className=\"flex justify-between gap-12\">\n            <p className=\"text-secondary\">Wallet Balance Used</p>\n            <p className=\"text-success\">- ₹ {order.walletBalanceUsed}</p>\n          </li>\n          <li className=\"flex justify-between gap-12\">\n            <p className=\"text-secondary\">GST (incl)</p>\n            <p className=\"text-primary\">₹ {order.tax.toFixed(2)}</p>\n          </li>\n          <li className=\"flex justify-between gap-12\">\n            <p className=\"text-secondary\">Shipping</p>\n            <p>\n              {order.shippingCost > 0 ? (\n                `₹ ${order.shippingCost}`\n              ) : (\n                <span className=\"text-xs text-green-500\">Free delivery</span>\n              )}\n            </p>\n          </li>\n          <li className=\"flex justify-between gap-6 text-base font-medium\">\n            <p>Total</p>\n            <p>₹ {order.totalPrice}</p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default PurchaseTable;\n","import { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { serverOrderStatus } from \"../utils/Constants\";\nimport { formatDate, formatTime } from \"../utils/dateUtils\";\nimport useMediaQuery from \"../hooks/useMediaQuery\";\n\nconst MAIN_STATUSES = [\n  \"Confirmed\",\n  \"Shipping\",\n  \"Out For delivery\",\n  \"Delivered\",\n];\n\nconst Tracker = ({ currentStatus, statusHistory }) => {\n  const maxMd = useMediaQuery(\"(min-width: 768px)\");\n\n  const displayStatuses =\n    currentStatus === \"Completed\"\n      ? [...MAIN_STATUSES, \"Completed\"]\n      : currentStatus === \"Canceled\"\n      ? [...MAIN_STATUSES, \"Canceled\"]\n      : currentStatus === \"Pickup Completed\"\n      ? [...MAIN_STATUSES, \"Pickup Completed\"]\n      : currentStatus === \"Refund Completed\"\n      ?[...MAIN_STATUSES,\"Refund Completed\"]\n      : MAIN_STATUSES;\n\n  const sortedStatusHistory = statusHistory.sort(\n    (a, b) =>\n      serverOrderStatus.indexOf(a.status) - serverOrderStatus.indexOf(b.status)\n  );\n\n  const mergedStatusHistory = displayStatuses.map((mainStatus) => {\n    const matchingHistory = sortedStatusHistory.find(\n      (status) => status.status === mainStatus\n    );\n    return (\n      matchingHistory || {\n        status: mainStatus,\n        date: null,\n        _id: `placeholder-${mainStatus}`,\n      }\n    );\n  });\n\n  const currentStatusIndex = mergedStatusHistory.findIndex(\n    (status) => status.status === currentStatus\n  );\n\n  return (\n    <div className=\"relative border border-black rounded-lg\">\n      <div className=\"PROGRESS-BAR px-16 pt-8 pb-16 max-md:p-8 flex max-md:flex-col justify-between md:items-center border-b border-black\">\n        {mergedStatusHistory.map((status, index) => (\n          <Fragment key={status._id}>\n            <div className=\"relative\">\n              <span\n                className={`size-6 border-3 rounded-full flex justify-center items-center ${\n                  index <= currentStatusIndex && status.date\n                    ? \"border-primeRed\"\n                    : \"border-darkGray\"\n                }`}\n              >\n                {index <= currentStatusIndex && status.date && (\n                  <span className=\"block size-4 bg-primeRed rounded-full\" />\n                )}\n              </span>\n\n              <div className=\"absolute md:mt-1 md:left-1/2 md:-translate-x-1/2 max-md:top-1/2 max-md:left-10 max-md:-translate-y-1/2 w-max text-sm md:text-center font-medium\">\n                <p\n                  className={`first-letter:uppercase ${\n                    index <= currentStatusIndex && status.date\n                      ? \"text-primeRed\"\n                      : \"text-primary\"\n                  }`}\n                >\n                  {status.status}\n                </p>\n                <p>{status.date ? formatDate(new Date(status.date)) : \"\"}</p>\n              </div>\n\n              {status.status === currentStatus && maxMd ? (\n                <span className=\"absolute size-5 left-1/2 -translate-x-1/2 top-[78px] rotate-45 bg-white border-t border-l border-black\" />\n              ) : null}\n            </div>\n\n            {index !== mergedStatusHistory.length - 1 && (\n              <div className=\"relative md:h-[3px] md:w-full max-md:w-[3px] max-md:h-24 max-md:left-[10px] bg-darkGray overflow-hidden\">\n                {index < currentStatusIndex && status.date && (\n                  <span className=\"absolute md:h-[3px] md:w-full max-md:w-[3px] max-md:h-full bg-primeRed transition-transform duration-500 ease-out origin-left\" />\n                )}\n              </div>\n            )}\n          </Fragment>\n        ))}\n      </div>\n      {currentStatusIndex !== -1 && (\n        <div className=\"PROGRESS-DETAILS px-12 max-md:px-8 py-3 max-md:py-2 flex items-center gap-12\">\n          <div className=\"font-semibold font-secondary text-center\">\n            <p className=\"text-3xl\">\n              {new Date(mergedStatusHistory[currentStatusIndex].date).getDate()}\n            </p>\n            <p>\n              {new Date(mergedStatusHistory[currentStatusIndex].date)\n                .toLocaleString(\"default\", { month: \"short\" })\n                .toUpperCase()}\n            </p>\n          </div>\n          <div>\n            <p className=\"font-medium\">{`Order is ${currentStatus.toLowerCase()}`}</p>\n            <p className=\"text-sm text-primary\">\n              {formatTime(\n                new Date(mergedStatusHistory[currentStatusIndex].date)\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nTracker.propTypes = {\n  currentStatus: PropTypes.string.isRequired,\n  statusHistory: PropTypes.arrayOf(\n    PropTypes.shape({\n      status: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      _id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Tracker;\n","import Tracker from \"../../components/Tracker\";\n\nconst OrderStatus = ({ statusHistory, currentStatus }) => {\n  return (\n    <>\n      {/* <div className=\"border border-black py-2 px-4 rounded-lg my-8 text-xs flex items-center gap-2\">\n        <strong className=\"text-warning\">Please Note :</strong>\n        <p className=\"text-primary\">This item has not been delivered yet</p>\n      </div> */}\n      <div>\n        <p className=\"font-medium font-secondary text-lg my-2\">\n          Tracking Order :\n        </p>\n        <Tracker currentStatus={currentStatus} statusHistory={statusHistory} />\n      </div>\n      {/* <div className=\"border border-black rounded-lg my-8 flex justify-between divide-x\">\n        <p className=\"px-16 py-4 w-1/2\">\n          Courier Name : <strong>Delivery</strong>\n        </p>\n        <p className=\"px-16 py-4 w-1/2 border-black\">\n          Tracking No : <strong>124532089</strong>\n        </p>\n      </div> */}\n      {/* <div>\n        <p className=\"font-medium font-secondary text-lg my-2\">\n          Shipment URL :\n        </p>\n        <div className=\"border border-black rounded-lg py-2 px-8\">\n          <a\n            href=\"https://facebook.com\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-blue-800\"\n          >\n            https://facebook.com\n          </a>\n        </div>\n      </div> */}\n    </>\n  );\n};\n\nexport default OrderStatus;\n","import { FiDownload } from \"react-icons/fi\";\nimport PurchaseTable from \"./PurchaseTable\";\nimport OrderStatus from \"./OrderStatus\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  useDownloadInvoice,\n  useOrderById,\n  useOrderStatus,\n} from \"../../services/orderServices\";\nimport { formatDate } from \"../../utils/dateUtils\";\nimport { getColorForStatus } from \"../../utils/Constants\";\nimport Button from \"../../components/Button\";\nimport { useToast } from \"../../contexts/toastContext\";\n\nconst Order = () => {\n  const { orderId } = useParams();\n  const { data: order, isLoading, error } = useOrderById(orderId);\n  const {\n    data: statusHistory,\n    isLoading: statusLoading,\n    error: statusError,\n  } = useOrderStatus(orderId);\n  const downloadMutation = useDownloadInvoice();\n  const toast = useToast();\n\n  const handleDownloadInvoice = () => {\n    downloadMutation.mutate(orderId, {\n      onSuccess: (response) => {\n        const invoiceUrl = response.invoicePath;\n        window.open(invoiceUrl, \"_blank\");\n      },\n      onError: (error) => {\n        console.error(error.message);\n        toast.error(\"This order is not shipped yet.\");\n      },\n    });\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"w-full\">\n        <h2 className=\"text-center font-medium text-xl mt-8\">Loading...</h2>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"w-full\">\n        <h2 className=\"text-center font-medium text-xl mt-8\">\n          {error.message}\n        </h2>\n      </div>\n    );\n  }\n\n  return (\n    order && (\n      <main className=\"container max-w-full py-8 px-32 max-xl:px-16 max-lg:px-8 max-md:px-4 space-y-4\">\n        <section className=\"TOP-HEAD\">\n          <div className=\"flex items-center gap-4\">\n            <h2 className=\"font-secondary font-semibold text-3xl\">\n              Order Details\n            </h2>\n            <span\n              className={`px-3 py-1 rounded-full ${getColorForStatus(\n                order.status\n              )}`}\n            >\n              <p className=\"text-xs text-white font-medium\">\n                {order.status.toUpperCase()}\n              </p>\n            </span>\n          </div>\n\n          <p className=\"font-medium text-secondary font-secondary\">\n            Order placed on {formatDate(new Date(order.createdAt))}\n          </p>\n\n          <p className=\"font-medium text-secondary font-secondary\">\n            Arriving on {formatDate(new Date(order.expectedDeliveryDate))}\n          </p>\n        </section>\n\n        <Button\n          type=\"button\"\n          reverse\n          onClick={handleDownloadInvoice}\n          className=\"px-4 py-2 rounded-full ml-auto\"\n        >\n          <div className=\"flex items-center gap-2\">\n            <FiDownload size={18} />\n            <p className=\"font-medium\">INVOICE</p>\n          </div>\n        </Button>\n\n        <PurchaseTable order={order} />\n        {!statusLoading && !statusError ? (\n          <OrderStatus\n            statusHistory={statusHistory}\n            currentStatus={order.status}\n          />\n        ) : null}\n      </main>\n    )\n  );\n};\n\nexport default Order;\n","import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport {\n  cancelOrder,\n  downloadInvoice,\n  getAllOrders,\n  getOrderById,\n  getStatusHistory,\n} from \"../api/orderApis\";\n\nconst useOrders = () => {\n  return useQuery({\n    queryKey: [\"orders\"],\n    queryFn: getAllOrders,\n    staleTime: 1000 * 60 * 5,\n  });\n};\n\nconst useOrderById = (orderId) => {\n  return useQuery({\n    queryKey: [\"order\", orderId],\n    queryFn: () => getOrderById(orderId),\n    staleTime: 1000 * 60 * 5,\n    enabled: !!orderId,\n  });\n};\n\nconst useOrderStatus = (orderId) => {\n  return useQuery({\n    queryKey: [\"orderStatus\", orderId],\n    queryFn: () => getStatusHistory(orderId),\n    staleTime: 1000 * 60 * 5,\n    enabled: !!orderId,\n  });\n};\n\nconst useCancelOrder = (orderId) => {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: cancelOrder,\n    onSuccess: () => {\n      queryClient.invalidateQueries([\"orders\"]);\n      queryClient.invalidateQueries([\"order\", orderId]);\n      queryClient.invalidateQueries([\"orderStatus\", orderId]);\n    },\n  });\n};\n\nconst useDownloadInvoice = (orderId) => {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: downloadInvoice,\n    onSuccess: () => {\n      queryClient.invalidateQueries([\"order\", orderId]);\n    },\n  });\n};\n\nexport {\n  useOrders,\n  useOrderById,\n  useOrderStatus,\n  useCancelOrder,\n  useDownloadInvoice,\n};\n","import axiosInstance from \"./axiosInstance\";\n\nconst getAllOrders = async () => {\n  const response = await axiosInstance.get(\"/getOrderDetails\");\n  return response.data;\n};\n\nconst getOrderById = async (orderId) => {\n  const response = await axiosInstance.get(`/getOrderById/${orderId}`);\n  return response.data;\n};\n\nconst createOrder = (orderItems, address, pricingDetails, paymentMethod) => {\n  return axiosInstance.post(\n    \"/placeOrder\",\n    {\n      orderItem: orderItems,\n      address,\n      ...pricingDetails,\n      payment_method: paymentMethod,\n    },\n    {\n      headers: {\n        \"x-api-key\": process.env.REACT_APP_ORDER_API_KEY,\n      },\n    }\n  );\n};\n\nconst editOrder = (\n  orderId,\n  address,\n  pricingDetails,\n  paymentMethod,\n  hasPaymentCompleted,\n  status\n) => {\n  return axiosInstance.post(\n    `/editOrder/${orderId}`,\n    {\n      address,\n      ...pricingDetails,\n      payment_method: paymentMethod,\n      payment_complete: hasPaymentCompleted,\n      status: status,\n    },\n    {\n      headers: {\n        \"x-api-key\": process.env.REACT_APP_ORDER_API_KEY,\n      },\n    }\n  );\n};\n\nconst updateOrderStatus = (orderId, status) => {\n  return axiosInstance.post(\n    `/updateStatus/${orderId}`,\n    { status },\n    {\n      headers: {\n        \"x-api-key\": process.env.REACT_APP_ORDER_API_KEY,\n      },\n    }\n  );\n};\n\nconst getStatusHistory = async (orderId) => {\n  const response = await axiosInstance.get(`/orderStatusDetails/${orderId}`);\n  return response.data?.statusDetails?.orderStatusDetails;\n};\n\nconst cancelOrder = async (orderId) => {\n  const response = await axiosInstance.get(`/cancelDelivery/${orderId}`);\n  return response.data;\n};\n\nconst downloadInvoice = async (orderId) => {\n  const response = await axiosInstance.get(`/downloadInvoice/${orderId}`);\n  return response.data;\n};\n\nexport {\n  getAllOrders,\n  getOrderById,\n  createOrder,\n  editOrder,\n  updateOrderStatus,\n  getStatusHistory,\n  cancelOrder,\n  downloadInvoice,\n};\n"],"names":["_ref","order","_jsxs","className","children","_jsx","scope","orderItem","map","item","index","_item$productId","_item$productId2","_item$productId3","_item$productId3$prod","_item$productId4","_item$productId5","_item$productId6","_item$productId7","_item$productId8","_item$productId9","productId","Link","to","concat","_id","src","images","alt","productGroup","name","sku","itemQuantity","unitPrice","sellingPrice","subtotal","discount","utsavDiscount","couponDiscount","walletBalanceUsed","tax","toFixed","shippingCost","totalPrice","MAIN_STATUSES","currentStatus","statusHistory","maxMd","useMediaQuery","displayStatuses","sortedStatusHistory","sort","a","b","serverOrderStatus","indexOf","status","mergedStatusHistory","mainStatus","find","date","currentStatusIndex","findIndex","Fragment","formatDate","Date","length","getDate","toLocaleString","month","toUpperCase","toLowerCase","formatTime","_Fragment","Tracker","Order","orderId","useParams","data","isLoading","error","useOrderById","statusLoading","statusError","useOrderStatus","downloadMutation","useDownloadInvoice","toast","useToast","message","getColorForStatus","createdAt","expectedDeliveryDate","Button","type","reverse","onClick","handleDownloadInvoice","mutate","onSuccess","response","invoiceUrl","invoicePath","window","open","onError","console","FiDownload","size","PurchaseTable","OrderStatus","useOrders","useQuery","queryKey","queryFn","getAllOrders","staleTime","getOrderById","enabled","getStatusHistory","useCancelOrder","queryClient","useQueryClient","useMutation","mutationFn","cancelOrder","invalidateQueries","downloadInvoice","async","axiosInstance","get","createOrder","orderItems","address","pricingDetails","paymentMethod","post","_objectSpread","payment_method","headers","process","updateOrderStatus","_response$data","_response$data$status","statusDetails","orderStatusDetails"],"sourceRoot":""}