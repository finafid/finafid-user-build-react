{"version":3,"file":"static/js/8556.a1080395.chunk.js","mappings":"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","sources":["components/InputBox.jsx","hooks/useMultiStepForm.js","hooks/useOtp.js","pages/Auth/OtpVerification.jsx","pages/Auth/Verification.jsx","pages/Auth/ForgetPassword.jsx","pages/Auth/ResetPassword.jsx","pages/Auth/Signup.jsx","pages/Auth/Login.jsx","pages/Auth/index.jsx","utils/validation.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { FiEye, FiEyeOff } from \"react-icons/fi\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BiError } from \"react-icons/bi\";\r\n\r\nconst InputBox = ({\r\n  value = \"\",\r\n  onChange,\r\n  name,\r\n  label,\r\n  type,\r\n  placeholder,\r\n  align = false,\r\n  disabled = false,\r\n  readOnly = false,\r\n  min = 0,\r\n  max = Infinity,\r\n  autoComplete,\r\n  autoCorrect,\r\n  order,\r\n  required = false,\r\n  className = \"w-full px-4 py-2 rounded-md text-xs border border-secondary bg-offWhite\",\r\n  labelClassName = \"capitalize text-sm font-medium\",\r\n  containerClassName = \"flex-col gap-2\",\r\n  validation,\r\n}) => {\r\n  const id = label?.replace(\" \", \"-\").toLowerCase();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [errMessage, setErrMessage] = useState(null);\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (!validation) return;\r\n    else if (!validation(value).success) {\r\n      setErrMessage(validation(value).message);\r\n    } else if (validation(value).success) {\r\n      setErrMessage(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`relative flex ${containerClassName}`}>\r\n      {label && (\r\n        <label\r\n          htmlFor={id}\r\n          className={`${labelClassName}`}\r\n          style={align ? { textAlign: \"center\" } : {}}\r\n        >\r\n          {label}\r\n        </label>\r\n      )}\r\n\r\n      {type !== \"file\" && (\r\n        <input\r\n          id={id}\r\n          type={showPassword ? \"text\" : type}\r\n          name={name}\r\n          value={value}\r\n          placeholder={placeholder || label}\r\n          onChange={onChange}\r\n          onBlur={handleBlur}\r\n          onWheel={(e) => e.target.blur()}\r\n          required={required}\r\n          disabled={disabled}\r\n          readOnly={readOnly}\r\n          min={type === \"number\" ? min : undefined}\r\n          max={type === \"number\" ? max : undefined}\r\n          className={`outline-none placeholder:capitalize read-only:bg-white read-only:cursor-default ${\r\n            type === \"number\" &&\r\n            \"[appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\r\n          } ${disabled && \"opacity-50\"} ${className}`}\r\n        />\r\n      )}\r\n\r\n      {errMessage && (\r\n        <div className=\"absolute top-full w-full p-1 flex items-start gap-1 text-error z-[1] bg-white rounded\">\r\n          <BiError size={12} />\r\n          <p className=\"text-xxs leading-tight\">{errMessage}</p>\r\n        </div>\r\n      )}\r\n\r\n      {type === \"password\" && (\r\n        <button\r\n          type=\"button\"\r\n          onClick={togglePasswordVisibility}\r\n          className=\"absolute right-4 bottom-3 text-secondary text-sm\"\r\n        >\r\n          {showPassword ? <FiEye /> : <FiEyeOff />}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n\r\nInputBox.propTypes = {\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  options: PropTypes.array,\r\n  onChange: PropTypes.func,\r\n  className: PropTypes.string,\r\n  containerClassName: PropTypes.string,\r\n};\r\n","import { useState } from \"react\";\r\n\r\nconst useMultiStepForm = (initialData, onSubmit, steps, initialStep) => {\r\n  const [formData, setFormData] = useState(initialData);\r\n  const [currentStep, setCurrentStep] = useState(initialStep || 1);\r\n\r\n  const clearForm = () => setFormData(initialData);\r\n\r\n  const goToNextStep = () => {\r\n    if (currentStep >= steps.length + 1) return;\r\n    setCurrentStep((prev) => prev + 1);\r\n  };\r\n\r\n  const goToPrevStep = () => {\r\n    if (currentStep <= 0) return;\r\n    setCurrentStep((prev) => prev - 1);\r\n  };\r\n\r\n  const goToStep = (index) => {\r\n    setCurrentStep(index);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, files, checked } = e.target;\r\n\r\n    if (type === \"file\") {\r\n      // Handle file inputs\r\n      setFormData({ ...formData, [name]: files });\r\n    } else if (type === \"checkbox\") {\r\n      // Handle checkbox click\r\n      setFormData({ ...formData, [name]: checked });\r\n    } else {\r\n      // For other inputs, update the formData state as usual\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(formData);\r\n  };\r\n\r\n  return {\r\n    formData,\r\n    currentStep,\r\n    steps,\r\n    goToNextStep,\r\n    goToPrevStep,\r\n    goToStep,\r\n    handleChange,\r\n    handleSubmit,\r\n    clearForm,\r\n  };\r\n};\r\n\r\nexport default useMultiStepForm;\r\n","import { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function useOtp(length, onSubmit) {\r\n  const [otp, setOtp] = useState(new Array(length).fill(\"\"));\r\n  const refs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    refs.current = refs.current?.slice(0, length);\r\n  }, [length]);\r\n\r\n  const handleChange = (index, value) => {\r\n    if (!/^\\d$/.test(value)) return; // Only allow single digits\r\n\r\n    setOtp((prevOtp) => {\r\n      const newOtp = [...prevOtp];\r\n      newOtp[index] = value;\r\n\r\n      // Focus on the next input\r\n      if (value !== \"\" && index < length - 1) {\r\n        refs.current[index + 1].focus();\r\n      }\r\n\r\n      return newOtp;\r\n    });\r\n  };\r\n\r\n  const handlePaste = (index, pastedData) => {\r\n    const newOtp = [...otp];\r\n    pastedData.split(\"\").forEach((value, i) => {\r\n      if (/^\\d$/.test(value) && index + i < length) {\r\n        newOtp[index + i] = value;\r\n      }\r\n    });\r\n    setOtp(newOtp);\r\n  };\r\n\r\n  const handleKeyDown = (index, event) => {\r\n    if (event.key === \"Backspace\") {\r\n      event.preventDefault();\r\n\r\n      setOtp((prevOtp) => {\r\n        const newOtp = [...prevOtp];\r\n\r\n        // Clear current input and focus on the previous one\r\n        if (otp[index] === \"\") {\r\n          if (index > 0) {\r\n            newOtp[index - 1] = \"\";\r\n            refs.current[index - 1].focus();\r\n          }\r\n        } else {\r\n          newOtp[index] = \"\";\r\n        }\r\n\r\n        return newOtp;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (otp.every((code) => code !== \"\")) {\r\n        onSubmit(otp.join(\"\"));\r\n      } else return null; // OTP is not fully filled\r\n    },\r\n    [otp, onSubmit]\r\n  );\r\n\r\n  return { otp, refs, handleChange, handlePaste, handleKeyDown, handleSubmit };\r\n}\r\n","import { sendForgetPasswordOtp, verifyUser } from \"../../api/userApis\";\r\nimport Button from \"../../components/Button\";\r\nimport { useToast } from \"../../contexts/toastContext\";\r\nimport useOtp from \"../../hooks/useOtp\";\r\n\r\nconst OtpVerification = ({ formData, goToStep, length = 4 }) => {\r\n  const toast = useToast();\r\n\r\n  const onSubmitHandler = async (otp) => {\r\n    try {\r\n      const response = await verifyUser({\r\n        otp,\r\n        email: formData.email,\r\n      });\r\n\r\n      if (response?.status) {\r\n        console.log(response.data);\r\n        goToStep(5);\r\n      }\r\n    } catch (error) {\r\n      if (!error?.response) {\r\n        toast.error(\"no server response\");\r\n      } else if (error.response) {\r\n        toast.error(error.response?.data?.message);\r\n      } else {\r\n        toast.error(\"Server issues!!!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSendMail = async () => {\r\n    try {\r\n      const response = await sendForgetPasswordOtp(formData.email);\r\n      if (response?.status) {\r\n        toast.success(\"OTP resend successfully\");\r\n      }\r\n    } catch (error) {\r\n      if (!error?.response) {\r\n        toast.error(\"no server response\");\r\n      } else if (error.response) {\r\n        toast.error(error.response?.data?.message);\r\n      } else {\r\n        toast.error(\"Server issues!!!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const { otp, refs, handleChange, handlePaste, handleKeyDown, handleSubmit } =\r\n    useOtp(length, onSubmitHandler);\r\n\r\n  const onPasteHandler = (e, index) => {\r\n    e.preventDefault();\r\n    const pastedData = e.clipboardData\r\n      .getData(\"text/plain\")\r\n      .substr(0, length - index);\r\n    handlePaste(index, pastedData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-4\">\r\n      <h2 className=\"capitalize text-2xl font-semibold text-center mt-8 mb-24\">\r\n        verification\r\n      </h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"FORM-FIELD flex flex-col w-max mx-auto my-10\">\r\n          <label htmlFor=\"\" className=\"capitalize font-medium text-center my-4\">\r\n            enter verification code\r\n          </label>\r\n\r\n          <div className=\"flex gap-6\">\r\n            {Array.from({ length }).map((_, index) => (\r\n              <input\r\n                key={index}\r\n                type=\"text\"\r\n                ref={(elem) => (refs.current[index] = elem)}\r\n                maxLength={1}\r\n                value={otp[index]}\r\n                onChange={(e) => handleChange(index, e.target.value)}\r\n                onPaste={(e) => onPasteHandler(e, index)}\r\n                onKeyDown={(e) => handleKeyDown(index, e)}\r\n                className=\"border border-primary bg-offWhite outline-none size-10 rounded-full text-center\"\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <p className=\"text-center text-xs text-slate-400 mb-10\">\r\n            If you didn't receive a code.{\" \"}\r\n            <span\r\n              onClick={handleSendMail}\r\n              className=\"text-primeRed cursor-pointer hover:underline\"\r\n            >\r\n              Resend\r\n            </span>\r\n          </p>\r\n        </div>\r\n\r\n        <Button className=\"w-full py-2 px-6 rounded-full font-secondary\">\r\n          Verify\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtpVerification;\r\n","import { sendOtp, verifyUser } from \"../../api/userApis\";\r\nimport useOtp from \"../../hooks/useOtp\";\r\nimport { useToast } from \"../../contexts/toastContext\";\r\nimport { useAuth } from \"../../contexts/authContext\";\r\nimport Button from \"../../components/Button\";\r\n\r\nconst Verification = ({ formData, length = 4 }) => {\r\n  const toast = useToast();\r\n  const { login } = useAuth();\r\n\r\n  const onSubmitHandler = async (otp) => {\r\n    try {\r\n      const response = await verifyUser({\r\n        otp,\r\n        email: formData.email,\r\n      });\r\n\r\n      if (response?.status) {\r\n        console.log(response.data);\r\n        login({ email: formData.email, password: formData.password });\r\n      }\r\n    } catch (error) {\r\n      if (!error?.response) {\r\n        toast.error(\"no server response\");\r\n      } else if (error.response) {\r\n        toast.error(error.response?.data?.message);\r\n      } else {\r\n        toast.error(\"Server issues!!!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSendMail = async () => {\r\n    try {\r\n      const response = await sendOtp(formData.email);\r\n      if (response?.status) {\r\n        toast.success(\"OTP resend successfully\");\r\n      }\r\n    } catch (error) {\r\n      if (!error?.response) {\r\n        toast.error(\"no server response\");\r\n      } else if (error.response) {\r\n        toast.error(error.response?.data?.message);\r\n      } else {\r\n        toast.error(\"Server issues!!!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const { otp, refs, handleChange, handlePaste, handleKeyDown, handleSubmit } =\r\n    useOtp(length, onSubmitHandler);\r\n\r\n  const onPasteHandler = (e, index) => {\r\n    e.preventDefault();\r\n    const pastedData = e.clipboardData\r\n      .getData(\"text/plain\")\r\n      .substr(0, length - index);\r\n    handlePaste(index, pastedData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-4\">\r\n      <h2 className=\"capitalize text-2xl font-semibold text-center mt-8 mb-24\">\r\n        verification\r\n      </h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"FORM-FIELD flex flex-col w-max mx-auto my-10\">\r\n          <label htmlFor=\"\" className=\"capitalize font-medium text-center my-4\">\r\n            enter verification code\r\n          </label>\r\n\r\n          <div className=\"flex gap-6\">\r\n            {Array.from({ length }).map((_, index) => (\r\n              <input\r\n                key={index}\r\n                type=\"text\"\r\n                ref={(elem) => (refs.current[index] = elem)}\r\n                maxLength={1}\r\n                value={otp[index]}\r\n                onChange={(e) => handleChange(index, e.target.value)}\r\n                onPaste={(e) => onPasteHandler(e, index)}\r\n                onKeyDown={(e) => handleKeyDown(index, e)}\r\n                className=\"border border-primary bg-offWhite outline-none size-10 rounded-full text-center\"\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <p className=\"text-center text-xs text-slate-400 mb-10\">\r\n            If you didn't receive a code.{\" \"}\r\n            <span\r\n              onClick={handleSendMail}\r\n              className=\"text-primeRed cursor-pointer hover:underline\"\r\n            >\r\n              Resend\r\n            </span>\r\n          </p>\r\n        </div>\r\n\r\n        <Button className=\"w-full py-2 px-6 rounded-full font-secondary\">\r\n          Verify\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Verification;\r\n","import { sendForgetPasswordOtp } from \"../../api/userApis\";\r\nimport Button from \"../../components/Button\";\r\nimport InputBox from \"../../components/InputBox\";\r\nimport { useToast } from \"../../contexts/toastContext\";\r\nimport { isEmailValid } from \"../../utils/validation\";\r\n\r\nconst ForgetPassword = ({ formData, handleChange, clearForm, goToStep }) => {\r\n  const toast = useToast();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { email } = formData;\r\n\r\n      // Client side validations\r\n      if (!isEmailValid(email).success) {\r\n        toast.error(isEmailValid(email).message);\r\n        return;\r\n      }\r\n\r\n      const response = await sendForgetPasswordOtp(email);\r\n\r\n      if (response?.status) {\r\n        console.log(response.data);\r\n        goToStep(6);\r\n      }\r\n    } catch (error) {\r\n      if (!error?.response) {\r\n        toast.error(\"no server response\");\r\n      } else if (error.response) {\r\n        toast.error(error.response?.data?.message);\r\n      } else {\r\n        toast.error(\"Server issues!!!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sm:px-4\">\r\n      <h2 className=\"capitalize text-2xl font-semibold text-center mt-8 mb-24\">\r\n        forget password\r\n      </h2>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-8\">\r\n        <InputBox\r\n          type=\"email\"\r\n          label=\"Enter Email Address\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          validation={isEmailValid}\r\n          align\r\n          containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n        />\r\n\r\n        <p className=\"relative -top-3 text-center text-xs text-primary\">\r\n          Back to{\" \"}\r\n          <span\r\n            className=\"text-primeRed cursor-pointer hover:underline\"\r\n            onClick={() => goToStep(2)}\r\n          >\r\n            sign in\r\n          </span>\r\n        </p>\r\n\r\n        <div className=\"mt-8\">\r\n          <Button className=\"w-full px-10 py-2 rounded-full font-secondary text-sm\">\r\n            send\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n","import Button from \"../../components/Button\";\r\nimport InputBox from \"../../components/InputBox\";\r\nimport { resetPassword } from \"../../api/userApis\";\r\nimport { isPasswordValid } from \"../../utils/validation\";\r\nimport { useToast } from \"../../contexts/toastContext\";\r\nimport { useAuth } from \"../../contexts/authContext\";\r\n\r\nconst ResetPassword = ({ formData, handleChange, clearForm }) => {\r\n  const toast = useToast();\r\n  const { login } = useAuth();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { newPassword, confirmNewPassword } = formData;\r\n\r\n      // Client side validation\r\n      if (!isPasswordValid(newPassword).success) {\r\n        console.log(isPasswordValid(newPassword).message);\r\n        return;\r\n      } else if (newPassword !== confirmNewPassword) {\r\n        console.log(\"password and confirm password should match\");\r\n        return;\r\n      }\r\n\r\n      const response = await resetPassword({\r\n        email: formData.email,\r\n        password: newPassword,\r\n      });\r\n\r\n      if (response?.status) {\r\n        console.log(response.data);\r\n        toast.success(\"Password updated successfully\");\r\n\r\n        login({ email: formData.email, password: newPassword }).then(() => {\r\n          clearForm();\r\n        });\r\n      }\r\n    } catch (error) {\r\n      if (!error?.response) {\r\n        toast.error(\"no server response\");\r\n      } else if (error.response) {\r\n        toast.error(error.response?.data?.message);\r\n      } else {\r\n        toast.error(\"Server issues!!!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sm:px-4\">\r\n      <h2 className=\"capitalize text-2xl font-semibold text-center mt-8 mb-24\">\r\n        rest password\r\n      </h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"flex flex-col gap-4 max-sm:gap-2\">\r\n          <InputBox\r\n            type=\"password\"\r\n            label=\"enter new password\"\r\n            name=\"newPassword\"\r\n            value={formData.newPassword}\r\n            onChange={handleChange}\r\n            validation={isPasswordValid}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n          <InputBox\r\n            type=\"password\"\r\n            label=\"confirm password\"\r\n            name=\"confirmNewPassword\"\r\n            value={formData.confirmNewPassword}\r\n            onChange={handleChange}\r\n            validation={isPasswordValid}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mt-10\">\r\n          <Button className=\"w-full py-2 px-6 rounded-full font-secondary\">\r\n            save\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import InputBox from \"../../components/InputBox\";\r\nimport Button from \"../../components/Button\";\r\nimport {\r\n  isEmailValid,\r\n  isNameValid,\r\n  isPasswordValid,\r\n  isPhoneValid,\r\n} from \"../../utils/validation\";\r\nimport { registerUser, sendOtp } from \"../../api/userApis\";\r\nimport { useToast } from \"../../contexts/toastContext\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nconst Signup = ({ formData, handleChange, goToStep }) => {\r\n  const toast = useToast();\r\n  const [searchParams] = useSearchParams();\r\n  const referralCode = searchParams.get(\"referralCode\");\r\n\r\n  const isPasswordMatch = (confirmPassword) => {\r\n    if (confirmPassword !== formData.password) {\r\n      return {\r\n        success: false,\r\n        message: \"Confirm password should be the same as the password\",\r\n      };\r\n    }\r\n\r\n    return {\r\n      success: true,\r\n      message: \"OK\",\r\n    };\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { firstName, lastName, email, phone, password, confirmPassword } =\r\n        formData;\r\n      const fullName = firstName + \" \" + lastName;\r\n\r\n      // Client side validations\r\n      if (!isNameValid(fullName).success) {\r\n        toast.error(isNameValid(fullName).message);\r\n        return;\r\n      } else if (!isEmailValid(email).success) {\r\n        toast.error(isEmailValid(email).message);\r\n        return;\r\n      } else if (!isPhoneValid(phone).success) {\r\n        toast.error(isPhoneValid(phone).message);\r\n        return;\r\n      } else if (!isPasswordValid(password).success) {\r\n        toast.error(isPasswordValid(password).message);\r\n        return;\r\n      } else if (password !== confirmPassword) {\r\n        toast.error(\"Confirm password should be the same as the password\");\r\n        return;\r\n      }\r\n\r\n      const response = await registerUser({\r\n        fullName,\r\n        email,\r\n        phone,\r\n        password,\r\n        referralCode,\r\n      });\r\n\r\n      if (response?.status) {\r\n        console.log(response.data);\r\n\r\n        const isOtpSent = await sendOtp(email);\r\n        if (isOtpSent?.status) {\r\n          console.log(isOtpSent.data);\r\n          goToStep(4);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (!error?.response) {\r\n        toast.error(\"no server response\");\r\n      } else if (error.response) {\r\n        toast.error(error.response?.data?.message);\r\n      } else {\r\n        toast.error(\"Server issues!!!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"capitalize text-2xl font-semibold text-center mb-6\">\r\n        sign up\r\n      </h2>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div className=\"grid sm:grid-cols-2 gap-x-6 gap-y-3 max-sm:gap-2\">\r\n          <InputBox\r\n            label=\"first name\"\r\n            name=\"firstName\"\r\n            value={formData.firstName}\r\n            onChange={handleChange}\r\n            validation={isNameValid}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n          <InputBox\r\n            label=\"last name\"\r\n            name=\"lastName\"\r\n            value={formData.lastName}\r\n            onChange={handleChange}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n          <InputBox\r\n            type=\"email\"\r\n            label=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            validation={isEmailValid}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n          <InputBox\r\n            type=\"tel\"\r\n            label=\"phone\"\r\n            name=\"phone\"\r\n            value={formData.phone}\r\n            onChange={handleChange}\r\n            validation={isPhoneValid}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n          <InputBox\r\n            type=\"password\"\r\n            label=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            validation={isPasswordValid}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n          <InputBox\r\n            type=\"password\"\r\n            label=\"confirm password\"\r\n            name=\"confirmPassword\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleChange}\r\n            validation={isPasswordMatch}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"TERMS-BOX flex items-center gap-1\">\r\n          <input\r\n            id=\"user-terms\"\r\n            type=\"checkbox\"\r\n            name=\"userTerms\"\r\n            onChange={handleChange}\r\n            className=\"accent-primeRed cursor-pointer\"\r\n          />\r\n          <label\r\n            htmlFor=\"user-terms\"\r\n            className=\"capitalize text-xs text-primeRed select-none\"\r\n          >\r\n            agree to terms & conditions\r\n          </label>\r\n        </div>\r\n\r\n        <Button\r\n          disabled={!formData.userTerms}\r\n          className=\"px-10 py-2 rounded-full font-secondary text-sm mx-auto\"\r\n        >\r\n          submit\r\n        </Button>\r\n\r\n        <p className=\"text-center text-sm\">\r\n          Already have an account?{\" \"}\r\n          <span\r\n            className=\"text-primeRed hover:underline cursor-pointer\"\r\n            onClick={() => goToStep(2)}\r\n          >\r\n            Login Here\r\n          </span>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import Button from \"../../components/Button\";\r\nimport InputBox from \"../../components/InputBox\";\r\nimport { isEmailValid, isPasswordValid } from \"../../utils/validation\";\r\nimport { useToast } from \"../../contexts/toastContext\";\r\nimport { useAuth } from \"../../contexts/authContext\";\r\n\r\nconst Login = ({ formData, handleChange, goToStep }) => {\r\n  const toast = useToast();\r\n  const { login } = useAuth();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { email_phone, loginPassword } = formData;\r\n\r\n      // Client side validations\r\n      if (!isEmailValid(email_phone).success) {\r\n        toast.error(isEmailValid(email_phone).message);\r\n        return;\r\n      } else if (!isPasswordValid(loginPassword).success) {\r\n        toast.error(isPasswordValid(loginPassword).message);\r\n        return;\r\n      }\r\n\r\n      const payload = { email: email_phone, password: loginPassword };\r\n\r\n      login(payload);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sm:px-4\">\r\n      <h2 className=\"capitalize text-2xl font-semibold text-center mb-16\">\r\n        login\r\n      </h2>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div className=\"flex flex-col gap-4 max-sm:gap-2\">\r\n          <InputBox\r\n            label=\"email / phone\"\r\n            name=\"email_phone\"\r\n            value={formData.email_phone}\r\n            onChange={handleChange}\r\n            validation={isEmailValid}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n          <InputBox\r\n            type=\"password\"\r\n            label=\"password\"\r\n            name=\"loginPassword\"\r\n            value={formData.loginPassword}\r\n            onChange={handleChange}\r\n            validation={isPasswordValid}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"FORGET-PASS relative -top-3 flex justify-end\">\r\n          <p\r\n            className=\"text-slate-400 text-xs cursor-pointer hover:underline\"\r\n            onClick={() => goToStep(3)}\r\n          >\r\n            Forget Password?\r\n          </p>\r\n        </div>\r\n\r\n        <Button className=\"px-10 py-2 rounded-full font-secondary text-sm mx-auto\">\r\n          sign in\r\n        </Button>\r\n\r\n        <p className=\"text-center text-sm\">\r\n          Don't have an account?{\" \"}\r\n          <span\r\n            className=\"text-primeRed hover:underline cursor-pointer\"\r\n            onClick={() => goToStep(1)}\r\n          >\r\n            Sign Up\r\n          </span>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// import { FaFacebook } from \"react-icons/fa\";\r\nimport bg from \"../../assets/images/Rectangle.png\";\r\nimport OtpVerification from \"./OtpVerification\";\r\nimport Verification from \"./Verification\";\r\nimport ForgetPassword from \"./ForgetPassword\";\r\nimport ResetPassword from \"./ResetPassword\";\r\nimport Signup from \"./Signup\";\r\nimport Login from \"./Login\";\r\nimport useMultiStepForm from \"../../hooks/useMultiStepForm\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\n\r\nconst Auth = () => {\r\n  const { formData, handleChange, clearForm, currentStep, goToStep } =\r\n    useMultiStepForm({}, null, 6, 2);\r\n\r\n  const renderStep = () => {\r\n    switch (currentStep) {\r\n      case 1:\r\n        return (\r\n          <Signup\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            clearForm={clearForm}\r\n            goToStep={goToStep}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <Login\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            clearForm={clearForm}\r\n            goToStep={goToStep}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <ForgetPassword\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            clearForm={clearForm}\r\n            goToStep={goToStep}\r\n          />\r\n        );\r\n      case 4:\r\n        return (\r\n          <Verification\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            clearForm={clearForm}\r\n            goToStep={goToStep}\r\n          />\r\n        );\r\n      case 5:\r\n        return (\r\n          <ResetPassword\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            clearForm={clearForm}\r\n            goToStep={goToStep}\r\n          />\r\n        );\r\n      case 6:\r\n        return (\r\n          <OtpVerification\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            clearForm={clearForm}\r\n            goToStep={goToStep}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <Login\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            clearForm={clearForm}\r\n            goToStep={goToStep}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogin = () => {\r\n    window.location.href = `${process.env.REACT_APP_API}/google`;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container max-w-full py-8 max-sm:p-0 bg-cover bg-center bg-no-repeat\"\r\n      style={{ backgroundImage: `url(${bg})` }}\r\n    >\r\n      <div className=\"relative flex flex-col justify-between sm:size-[520px] mx-auto sm:shadow-primary bg-white sm:border sm:border-primary sm:rounded-3xl p-6 space-y-4\">\r\n        {renderStep()}\r\n\r\n        {(currentStep === 1 || currentStep === 2) && (\r\n          <div className=\"EXTRA-BUTTONS sm:w-max mx-auto flex flex-wrap gap-8 max-sm:gap-3\">\r\n            <button\r\n              onClick={handleGoogleLogin}\r\n              className=\"max-sm:w-full flex justify-start items-center gap-2 rounded-lg text-sm p-2 bg-white border border-[#dd4b39]\"\r\n            >\r\n              <FcGoogle size={24} className=\"flex-shrink-0\" />\r\n              <p>Continue with Google</p>\r\n            </button>\r\n            {/* <button className=\"max-sm:w-full flex justify-start items-center gap-2 rounded-lg text-sm p-2 bg-white border border-[#3b5998]\">\r\n              <FaFacebook size={24} className=\"flex-shrink-0 text-[#3b5998]\" />\r\n              <p>Continue with Facebook</p>\r\n            </button> */}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import {\r\n  EMAIL_REGEX,\r\n  NAME_REGEX,\r\n  PASSWORD_REGEX,\r\n  PHONE_REGEX,\r\n  PIN_CODE_REGEX,\r\n} from \"./Constants\";\r\n\r\nconst isNameValid = (name) => {\r\n  if (!name)\r\n    return {\r\n      success: false,\r\n      message: \"Name is required\",\r\n    };\r\n  if (name.length < 3)\r\n    return {\r\n      success: false,\r\n      message: \"Name should be more than 3 characters\",\r\n    };\r\n\r\n  const isValid = NAME_REGEX.test(name);\r\n  if (!isValid)\r\n    return {\r\n      success: false,\r\n      message: \"Please enter a valid name\",\r\n    };\r\n\r\n  return {\r\n    success: true,\r\n    message: \"OK\",\r\n  };\r\n};\r\n\r\nconst isEmailValid = (email) => {\r\n  if (!email)\r\n    return {\r\n      success: false,\r\n      message: \"Email is required\",\r\n    };\r\n  if (email.length > 254)\r\n    return {\r\n      success: false,\r\n      message: \"Please enter a valid email\",\r\n    };\r\n\r\n  const isValid = EMAIL_REGEX.test(email);\r\n  if (!isValid)\r\n    return {\r\n      success: false,\r\n      message: \"Please enter a valid email\",\r\n    };\r\n\r\n  const parts = email.split(\"@\");\r\n  if (parts[0].length > 64)\r\n    return {\r\n      success: false,\r\n      message: \"Please enter a valid email\",\r\n    };\r\n\r\n  return {\r\n    success: true,\r\n    message: \"OK\",\r\n  };\r\n};\r\n\r\nconst isPhoneValid = (phone) => {\r\n  if (!phone)\r\n    return {\r\n      success: false,\r\n      message: \"Phone is required\",\r\n    };\r\n\r\n  const isValid = PHONE_REGEX.test(phone);\r\n  if (!isValid)\r\n    return {\r\n      success: false,\r\n      message: \"Please enter a valid phone\",\r\n    };\r\n\r\n  return {\r\n    success: true,\r\n    message: \"OK\",\r\n  };\r\n};\r\n\r\nconst isPasswordValid = (password) => {\r\n  if (!password)\r\n    return {\r\n      success: false,\r\n      message: \"Password is required\",\r\n    };\r\n\r\n  const isValid = PASSWORD_REGEX.test(password);\r\n  if (!isValid)\r\n    return {\r\n      success: false,\r\n      message:\r\n        \"Your password must be have at least 8 characters long, 1 uppercase & 1 lowercase character, 1 number\",\r\n    };\r\n\r\n  return {\r\n    success: true,\r\n    message: \"OK\",\r\n  };\r\n};\r\n\r\nconst isPinCodeValid = (pinCode) => {\r\n  if (!pinCode) {\r\n    return {\r\n      success: false,\r\n      message: \"Pin code is required\",\r\n    };\r\n  }\r\n\r\n  const isValid = PIN_CODE_REGEX.test(pinCode);\r\n  if (!isValid) {\r\n    return {\r\n      success: false,\r\n      message: \"Please enter a valid pin code\",\r\n    };\r\n  }\r\n\r\n  return {\r\n    success: true,\r\n    message: \"OK\",\r\n  };\r\n};\r\n\r\nexport {\r\n  isNameValid,\r\n  isEmailValid,\r\n  isPhoneValid,\r\n  isPasswordValid,\r\n  isPinCodeValid,\r\n};\r\n"],"names":["_ref","value","onChange","name","label","type","placeholder","align","disabled","readOnly","min","max","Infinity","autoComplete","autoCorrect","order","required","className","labelClassName","containerClassName","validation","id","replace","toLowerCase","showPassword","setShowPassword","useState","errMessage","setErrMessage","_jsxs","children","_jsx","htmlFor","style","textAlign","onBlur","handleBlur","success","message","onWheel","e","target","blur","undefined","BiError","size","onClick","togglePasswordVisibility","FiEye","FiEyeOff","useMultiStepForm","initialData","onSubmit","steps","initialStep","formData","setFormData","currentStep","setCurrentStep","goToNextStep","length","prev","goToPrevStep","goToStep","index","handleChange","files","checked","handleSubmit","preventDefault","clearForm","useOtp","otp","setOtp","Array","fill","refs","useRef","useEffect","_refs$current","current","slice","useCallback","every","code","join","test","prevOtp","newOtp","focus","handlePaste","pastedData","split","forEach","i","handleKeyDown","event","key","toast","useToast","async","response","verifyUser","email","status","console","log","data","error","_error$response","_error$response$data","from","map","_","ref","elem","maxLength","onPaste","onPasteHandler","clipboardData","getData","substr","onKeyDown","sendForgetPasswordOtp","_error$response2","_error$response2$data","Button","login","useAuth","password","sendOtp","isEmailValid","InputBox","newPassword","confirmNewPassword","isPasswordValid","resetPassword","then","searchParams","useSearchParams","referralCode","get","firstName","lastName","phone","confirmPassword","fullName","isNameValid","isPhoneValid","registerUser","isOtpSent","userTerms","email_phone","loginPassword","Auth","backgroundImage","bg","renderStep","Signup","Login","ForgetPassword","Verification","ResetPassword","OtpVerification","handleGoogleLogin","window","location","href","FcGoogle","NAME_REGEX","EMAIL_REGEX","PHONE_REGEX","PASSWORD_REGEX","isPinCodeValid","pinCode","PIN_CODE_REGEX"],"sourceRoot":""}