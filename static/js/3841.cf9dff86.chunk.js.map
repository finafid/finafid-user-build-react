{"version":3,"file":"static/js/3841.cf9dff86.chunk.js","mappings":"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","sources":["components/Carousel.jsx","components/HeroBanner.jsx","components/Rating.jsx","components/RatingBadge.jsx","components/Skeleton.jsx","hooks/useInView.js","api/bannerApis.js","services/bannerServices.js","api/productApis.js","services/productService.js"],"sourcesContent":["import { Children } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport {\r\n  Navigation,\r\n  Pagination,\r\n  Scrollbar,\r\n  A11y,\r\n  Autoplay,\r\n  EffectFade,\r\n} from \"swiper/modules\";\r\nimport \"swiper/css/bundle\";\r\n\r\nconst Carousel = ({\r\n  children,\r\n  spaceBetween = 30,\r\n  slidesPerView = 1,\r\n  slideWidth,\r\n  navigation = false,\r\n  pagination = false,\r\n  scrollbar = false,\r\n  autoplay = false,\r\n  delay = 3000,\r\n  loop = false,\r\n  effect = \"slide\",\r\n  speed = 300,\r\n  allowTouchMove = false,\r\n  ...props\r\n}) => {\r\n  const swiperProps = {\r\n    modules: [Navigation, Pagination, Scrollbar, A11y, Autoplay, EffectFade],\r\n    spaceBetween,\r\n    navigation: navigation ? {} : false,\r\n    pagination: pagination ? { clickable: true } : false,\r\n    scrollbar: scrollbar ? { draggable: true } : false,\r\n    autoplay: autoplay ? { delay } : false,\r\n    loop,\r\n    effect,\r\n    speed,\r\n    slidesPerView: slideWidth ? \"auto\" : slidesPerView,\r\n    allowTouchMove: allowTouchMove,\r\n    ...props,\r\n  };\r\n\r\n  return (\r\n    <Swiper {...swiperProps}>\r\n      {Children.map(children, (child, index) => (\r\n        <SwiperSlide\r\n          key={index}\r\n          style={slideWidth ? { width: `${slideWidth}px` } : {}}\r\n        >\r\n          {child}\r\n        </SwiperSlide>\r\n      ))}\r\n    </Swiper>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useBanners } from \"../services/bannerServices\";\r\nimport Carousel from \"./Carousel\";\r\nimport Skeleton from \"./Skeleton\";\r\nimport useInView from \"../hooks/useInView\";\r\nimport useMediaQuery from \"../hooks/useMediaQuery\";\r\n\r\nconst HeroBanner = ({\r\n  preload = false,\r\n  position,\r\n  resourceType,\r\n  valueId,\r\n  title,\r\n  subtitle,\r\n  className,\r\n  containerClassName = \"container max-w-full\",\r\n}) => {\r\n  const containerRef = useRef(null);\r\n  const hasFetchedOnce = useRef(false);\r\n  const [shouldFetch, setShouldFetch] = useState(preload);\r\n  const maxMd = useMediaQuery(\"(max-width: 768px)\");\r\n\r\n  const isInView = useInView(containerRef, {\r\n    threshold: 0.1,\r\n    rootMargin: \"100px\",\r\n  });\r\n\r\n  const { data: banners = [], isLoading } = useBanners(\r\n    {\r\n      bannerType: \"Hero\",\r\n      position,\r\n      resourceType,\r\n      valueId,\r\n    },\r\n    { enabled: shouldFetch }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!hasFetchedOnce.current && isInView && position && resourceType) {\r\n      setShouldFetch(true);\r\n      hasFetchedOnce.current = true;\r\n    }\r\n  }, [isInView, position, resourceType]);\r\n\r\n  return (\r\n    <div ref={containerRef}>\r\n      {isLoading ? (\r\n        <ul className={`flex gap-4 overflow-x-hidden ${containerClassName}`}>\r\n          {Array.from({ length: 1 }).map((_, index) => (\r\n            <li\r\n              key={index}\r\n              className={`block relative w-full h-80 max-lg:h-48 max-md:h-24 overflow-hidden flex-shrink-0 ${className}`}\r\n            >\r\n              <Skeleton overall=\"light\" />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        banners?.length > 0 && (\r\n          <div className={`space-y-4 max-lg::space-y-2 ${containerClassName}`}>\r\n            {title || subtitle ? (\r\n              <div>\r\n                <h1 className=\"text-2xl max-lg:text-xl font-bold\">{title}</h1>\r\n                <p className=\"text-sm\">{subtitle}</p>\r\n              </div>\r\n            ) : null}\r\n            <Carousel navigation={!maxMd} autoplay delay={5000} allowTouchMove>\r\n              {banners.map((banner, index) => (\r\n                <a\r\n                  key={banner.bannerTitle || index}\r\n                  href={banner.linkUrl}\r\n                  className=\"block relative w-full h-max rounded-lg\"\r\n                >\r\n                  <img\r\n                    src={banner.bannerImg}\r\n                    alt={banner.bannerTitle || index}\r\n                    loading=\"lazy\"\r\n                    className={`w-full object-cover object-center ${className}`}\r\n                  />\r\n                </a>\r\n              ))}\r\n            </Carousel>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroBanner;\r\n","import { IoMdStar, IoMdStarHalf, IoMdStarOutline } from \"react-icons/io\";\r\n\r\nconst Rating = ({ rating, maxRating = 5, size = 16 }) => {\r\n  const renderStars = () => {\r\n    const stars = [];\r\n    const ceilRating = Math.ceil(rating);\r\n    const hasHalfStar = Math.floor(rating) !== Math.ceil(rating);\r\n\r\n    for (let i = 1; i <= maxRating; i++) {\r\n      if (i <= rating)\r\n        stars.push(\r\n          <span key={i} className=\"text-yellow-500 text-lg\">\r\n            <IoMdStar size={size} />\r\n          </span>\r\n        );\r\n      else if (i === ceilRating && hasHalfStar)\r\n        stars.push(\r\n          <span key={i} className=\"text-yellow-500 text-lg\">\r\n            <IoMdStarHalf size={size} />\r\n          </span>\r\n        );\r\n      else\r\n        stars.push(\r\n          <span key={i} className=\"text-gray-300 text-lg\">\r\n            <IoMdStarOutline size={size} />\r\n          </span>\r\n        );\r\n    }\r\n\r\n    return stars;\r\n  };\r\n\r\n  return <div className=\"flex\">{renderStars()}</div>;\r\n};\r\n\r\nexport default Rating;\r\n","import { useState } from \"react\";\r\nimport { IoMdStar } from \"react-icons/io\";\r\nimport Rating from \"./Rating\";\r\n\r\nconst getColorForRating = (rating) => {\r\n  switch (true) {\r\n    case rating >= 4:\r\n      return \"bg-green-500\";\r\n    case rating >= 3:\r\n      return \"bg-green-400\";\r\n    case rating >= 2:\r\n      return \"bg-yellow-400\";\r\n    case rating >= 1:\r\n      return \"bg-orange-400\";\r\n    default:\r\n      return \"bg-gray-200\";\r\n  }\r\n};\r\n\r\nconst getColorForRatingDetails = (rating) => {\r\n  switch (rating) {\r\n    case 5:\r\n      return \"bg-green-500\";\r\n    case 4:\r\n      return \"bg-green-400\";\r\n    case 3:\r\n      return \"bg-yellow-400\";\r\n    case 2:\r\n      return \"bg-orange-400\";\r\n    case 1:\r\n      return \"bg-red-500\";\r\n    default:\r\n      return \"bg-gray-200\";\r\n  }\r\n};\r\n\r\nconst RatingDetailsDropdown = ({ rating, totalRatings, ratingsBreakdown }) => {\r\n  return (\r\n    <div className=\"w-64 p-4 bg-white border rounded shadow-lg\">\r\n      <div className=\"text-center\">\r\n        <div className=\"text-4xl font-bold\">{rating.toFixed(1)}</div>\r\n        <div className=\"text-secondary\">{totalRatings} Ratings</div>\r\n        <div className=\"mt-2 flex justify-center\">\r\n          <Rating rating={rating} size={24} />\r\n        </div>\r\n      </div>\r\n      {ratingsBreakdown && (\r\n        <div className=\"mt-4 space-y-1\">\r\n          {Object.entries(ratingsBreakdown)\r\n            .sort(([a], [b]) => b - a)\r\n            .map(([key, count]) => (\r\n              <div key={key} className=\"flex items-center gap-1\">\r\n                <span className=\"text-secondary\">{key}</span>\r\n                <IoMdStar size={18} className=\"text-secondary mr-2\" />\r\n                <div className=\"flex-1 h-2 bg-lightGray rounded-full overflow-hidden\">\r\n                  <div\r\n                    className={`h-full ${getColorForRatingDetails(\r\n                      Number(key)\r\n                    )}`}\r\n                    style={{ width: `${(count / totalRatings) * 100}%` }}\r\n                  />\r\n                </div>\r\n                <span className=\"ml-2 text-secondary\">({count})</span>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RatingBadge = ({\r\n  rating,\r\n  totalRatings,\r\n  ratingsBreakdown,\r\n  dropdown = false,\r\n}) => {\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className=\"relative inline-block\"\r\n      onMouseEnter={() => setShowDropdown(true)}\r\n      onMouseLeave={() => setShowDropdown(false)}\r\n    >\r\n      <div\r\n        className={`flex items-center justify-center gap-[2px] px-[5px] py-[2px] rounded text-white ${getColorForRating(\r\n          rating\r\n        )}`}\r\n      >\r\n        <span className=\"text-xs font-medium pt-[2px] leading-none\">\r\n          {rating.toFixed(1)}\r\n        </span>\r\n        <IoMdStar size={12} />\r\n      </div>\r\n      {dropdown && showDropdown && (\r\n        <div className=\"absolute z-10 mt-2\">\r\n          <RatingDetailsDropdown\r\n            rating={rating}\r\n            totalRatings={totalRatings}\r\n            ratingsBreakdown={ratingsBreakdown}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RatingBadge;\r\n","const Skeleton = ({ overall = \"normal\" }) => {\r\n  return (\r\n    <div\r\n      className={`size-full animate-pulse ${\r\n        overall === \"dark\"\r\n          ? \"bg-darkGray\"\r\n          : overall === \"normal\"\r\n          ? \"bg-mainGray\"\r\n          : overall === \"light\" && \"bg-lightGray\"\r\n      }`}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useInView = (ref, options = { threshold: 0.1, rootMargin: \"0px\" }) => {\r\n  const [isIntersecting, setIsIntersecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!ref.current) return;\r\n\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      setIsIntersecting(entry.isIntersecting);\r\n    }, options);\r\n\r\n    const element = ref.current;\r\n    observer.observe(element);\r\n\r\n    return () => {\r\n      observer.unobserve(element);\r\n    };\r\n  }, [ref, options]);\r\n\r\n  return isIntersecting;\r\n};\r\n\r\nexport default useInView;\r\n","import axiosInstance from \"./axiosInstance\";\r\n\r\nconst getBanners = async (params) => {\r\n  const response = await axiosInstance.get(\"/getAllBannersByBannerType\", {\r\n    params,\r\n  });\r\n  return response.data?.data;\r\n};\r\n\r\nconst getAllGalleryBanners = async () => {\r\n  const response = await axiosInstance.get(\"/getAllPublishedGallery\");\r\n  return response.data?.galleryDetails;\r\n};\r\n\r\nexport { getBanners, getAllGalleryBanners };\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { getAllGalleryBanners, getBanners } from \"../api/bannerApis\";\r\n\r\nconst useBanners = (params, options) => {\r\n  return useQuery({\r\n    queryKey: [\"banners\", params],\r\n    queryFn: () => getBanners(params),\r\n    staleTime: 1000 * 60 * 5,\r\n    retry: false,\r\n    ...options,\r\n  });\r\n};\r\n\r\nconst useGalleryBanners = () => {\r\n  return useQuery({\r\n    queryKey: [\"galleryBanners\"],\r\n    queryFn: () => getAllGalleryBanners(),\r\n    staleTime: 1000 * 60 * 5,\r\n    retry: false,\r\n  });\r\n};\r\n\r\nexport { useBanners, useGalleryBanners };\r\n","import axiosInstance from \"./axiosInstance\";\r\n\r\nconst getProductById = async (productId) => {\r\n  const response = await axiosInstance.get(`/getProductById/${productId}`);\r\n  return response.data;\r\n};\r\n\r\nconst getAllVariants = async (params) => {\r\n  const response = await axiosInstance.get(\"/getAllVariantsOnUser\", { params });\r\n  return response.data;\r\n};\r\n\r\nconst getAllUtsavVariants = async () => {\r\n  const response = await axiosInstance.get(\"/getAllUtsavProduct\");\r\n  return response.data?.productDetails;\r\n};\r\n\r\nconst getAllFeaturedVariants = async () => {\r\n  const response = await axiosInstance.get(\"/getAllFeaturedProduct\");\r\n  return response.data?.variantDetails;\r\n};\r\n\r\nconst getFeaturedVariantsBasedOnCategory = async (categoryId) => {\r\n  const response = await axiosInstance.get(\r\n    `/getFeaturedProductBasedOnCategory/${categoryId}`\r\n  );\r\n  return response.data?.productList;\r\n};\r\n\r\nconst getAllNewArrivals = async () => {\r\n  const response = await axiosInstance.get(\"/getAllNewArrivals\");\r\n  return response.data?.productDetails;\r\n};\r\n\r\nconst getAllTopSellingProducts = async () => {\r\n  const response = await axiosInstance.get(\"/getAllTopSellingProduct\");\r\n  return response.data;\r\n};\r\n\r\nconst getVariant = async (variantId) => {\r\n  const response = await axiosInstance.get(`/getVariantById/${variantId}`);\r\n  return response.data?.variantDetails;\r\n};\r\n\r\nconst getRecommendation = async (variantId) => {\r\n  const response = await axiosInstance.get(\r\n    `/suggestionProductList/${variantId}`\r\n  );\r\n  return response.data?.suggestionProductList;\r\n};\r\n\r\nconst getAllReviews = async (productId) => {\r\n  const response = await axiosInstance.get(`/GetAllReviews/${productId}`);\r\n  return response.data;\r\n};\r\n\r\nconst getReviewById = async (productId, reviewId) => {\r\n  const response = await axiosInstance.get(\r\n    `/reviewByID/${productId}/${reviewId}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst getRatingDetails = async (productId) => {\r\n  const response = await axiosInstance.get(`/getAvgRating/${productId}`);\r\n  return response.data;\r\n};\r\n\r\nconst createReview = async (reviewData, productId) => {\r\n  const response = await axiosInstance.post(\r\n    `/createReview/${productId}`,\r\n    reviewData,\r\n    { headers: { \"Content-Type\": \"multipart/form-data\" } }\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst updateReview = async (reviewData, productId, reviewId) => {\r\n  const response = await axiosInstance.post(\r\n    `/updateReview/${productId}/${reviewId}`,\r\n    reviewData\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst deleteReview = async (reviewId) => {\r\n  const response = await axiosInstance.get(`/deleteReview/${reviewId}`);\r\n  return response.data;\r\n};\r\n\r\nexport {\r\n  getProductById,\r\n  getAllVariants,\r\n  getAllUtsavVariants,\r\n  getAllFeaturedVariants,\r\n  getFeaturedVariantsBasedOnCategory,\r\n  getAllNewArrivals,\r\n  getAllTopSellingProducts,\r\n  getVariant,\r\n  getRecommendation,\r\n  createReview,\r\n  getAllReviews,\r\n  getReviewById,\r\n  getRatingDetails,\r\n  updateReview,\r\n  deleteReview,\r\n};\r\n","import {\r\n  keepPreviousData,\r\n  useMutation,\r\n  useQuery,\r\n  useQueryClient,\r\n} from \"@tanstack/react-query\";\r\nimport {\r\n  createReview,\r\n  deleteReview,\r\n  getAllFeaturedVariants,\r\n  getAllNewArrivals,\r\n  getAllReviews,\r\n  getAllTopSellingProducts,\r\n  getAllUtsavVariants,\r\n  getAllVariants,\r\n  getFeaturedVariantsBasedOnCategory,\r\n  getProductById,\r\n  getRatingDetails,\r\n  getRecommendation,\r\n  getReviewById,\r\n  getVariant,\r\n  updateReview,\r\n} from \"../api/productApis\";\r\n\r\nconst useProductById = (productId) => {\r\n  return useQuery({\r\n    queryKey: [\"productGroup\", productId],\r\n    queryFn: () => getProductById(productId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!productId,\r\n  });\r\n};\r\n\r\nconst useVariants = (params) => {\r\n  return useQuery({\r\n    queryKey: [\"variants\", params],\r\n    queryFn: () => getAllVariants(params),\r\n    staleTime: 1000 * 60 * 5,\r\n    placeholderData: keepPreviousData,\r\n  });\r\n};\r\n\r\nconst useAllUtsavVariants = () => {\r\n  return useQuery({\r\n    queryKey: [\"variants\", \"utsav\"],\r\n    queryFn: getAllUtsavVariants,\r\n    staleTime: 1000 * 60 * 5,\r\n  });\r\n};\r\n\r\nconst useAllFeaturedVariants = () => {\r\n  return useQuery({\r\n    queryKey: [\"variants\", \"featured\"],\r\n    queryFn: getAllFeaturedVariants,\r\n    staleTime: 1000 * 60 * 5,\r\n  });\r\n};\r\n\r\nconst useFeaturedVariantsBasedOnCategory = (categoryId) => {\r\n  return useQuery({\r\n    queryKey: [\"variants\", \"featured\", categoryId],\r\n    queryFn: () => getFeaturedVariantsBasedOnCategory(categoryId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!categoryId,\r\n  });\r\n};\r\n\r\nconst useTopSellingProducts = () => {\r\n  return useQuery({\r\n    queryKey: [\"products\", \"top selling\"],\r\n    queryFn: getAllTopSellingProducts,\r\n    staleTime: 1000 * 60 * 5,\r\n  });\r\n};\r\n\r\nconst useNewArrivals = () => {\r\n  return useQuery({\r\n    queryKey: [\"variants\", \"new arrivals\"],\r\n    queryFn: getAllNewArrivals,\r\n    staleTime: 1000 * 60 * 5,\r\n  });\r\n};\r\n\r\nconst useRecommendation = (variantId) => {\r\n  return useQuery({\r\n    queryKey: [\"recommendations\", variantId],\r\n    queryFn: () => getRecommendation(variantId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!variantId,\r\n  });\r\n};\r\n\r\nconst useVariantById = (variantId) => {\r\n  return useQuery({\r\n    queryKey: [\"variant\", variantId],\r\n    queryFn: () => getVariant(variantId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!variantId,\r\n  });\r\n};\r\n\r\nconst useReviews = (productId) => {\r\n  return useQuery({\r\n    queryKey: [\"reviews\", productId],\r\n    queryFn: () => getAllReviews(productId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!productId,\r\n  });\r\n};\r\n\r\nconst useReviewById = (productId, reviewId) => {\r\n  return useQuery({\r\n    queryKey: [\"review\", productId, reviewId],\r\n    queryFn: () => getReviewById(productId, reviewId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!productId && !!reviewId,\r\n  });\r\n};\r\n\r\nconst useRatingDetails = (productId) => {\r\n  return useQuery({\r\n    queryKey: [\"rating\", productId],\r\n    queryFn: () => getRatingDetails(productId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!productId,\r\n  });\r\n};\r\n\r\nconst useAddReview = (productId) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: ({ reviewData, productId }) =>\r\n      createReview(reviewData, productId),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([\"reviews\", productId]);\r\n    },\r\n  });\r\n};\r\n\r\nconst useUpdateReview = (productId, reviewId) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: ({ reviewData, productId, reviewId }) =>\r\n      updateReview(reviewData, productId, reviewId),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([\"review\", productId, reviewId]);\r\n    },\r\n  });\r\n};\r\n\r\nconst useDeleteReview = (productId, reviewId) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: deleteReview,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([\"review\", productId, reviewId]);\r\n    },\r\n  });\r\n};\r\n\r\nexport {\r\n  useProductById,\r\n  useVariants,\r\n  useAllUtsavVariants,\r\n  useAllFeaturedVariants,\r\n  useFeaturedVariantsBasedOnCategory,\r\n  useTopSellingProducts,\r\n  useNewArrivals,\r\n  useRecommendation,\r\n  useVariantById,\r\n  useReviews,\r\n  useReviewById,\r\n  useRatingDetails,\r\n  useAddReview,\r\n  useUpdateReview,\r\n  useDeleteReview,\r\n};\r\n"],"names":["_ref","children","spaceBetween","slidesPerView","slideWidth","navigation","pagination","scrollbar","autoplay","delay","loop","effect","speed","allowTouchMove","props","swiperProps","modules","Navigation","Pagination","Scrollbar","A11y","Autoplay","EffectFade","clickable","draggable","_jsx","Swiper","Children","map","child","index","SwiperSlide","style","width","preload","position","resourceType","valueId","title","subtitle","className","containerClassName","containerRef","useRef","hasFetchedOnce","shouldFetch","setShouldFetch","useState","maxMd","useMediaQuery","isInView","useInView","threshold","rootMargin","data","banners","isLoading","useBanners","bannerType","enabled","useEffect","current","ref","Array","from","length","_","Skeleton","overall","_jsxs","Carousel","banner","href","linkUrl","src","bannerImg","alt","bannerTitle","loading","rating","maxRating","size","renderStars","stars","ceilRating","Math","ceil","hasHalfStar","floor","i","push","IoMdStar","IoMdStarHalf","IoMdStarOutline","getColorForRating","getColorForRatingDetails","RatingDetailsDropdown","totalRatings","ratingsBreakdown","toFixed","Rating","Object","entries","sort","_ref2","_ref3","a","b","_ref4","key","count","Number","_ref5","dropdown","showDropdown","setShowDropdown","onMouseEnter","onMouseLeave","options","arguments","undefined","isIntersecting","setIsIntersecting","observer","IntersectionObserver","entry","element","observe","unobserve","params","useQuery","queryKey","queryFn","async","_response$data","axiosInstance","get","getBanners","staleTime","retry","useGalleryBanners","_response$data2","galleryDetails","getAllGalleryBanners","getAllUtsavVariants","productDetails","getAllFeaturedVariants","variantDetails","getAllNewArrivals","_response$data4","getAllTopSellingProducts","useProductById","productId","getProductById","useVariants","getAllVariants","placeholderData","keepPreviousData","useAllUtsavVariants","useAllFeaturedVariants","useFeaturedVariantsBasedOnCategory","categoryId","_response$data3","productList","getFeaturedVariantsBasedOnCategory","useTopSellingProducts","useNewArrivals","useRecommendation","variantId","_response$data6","suggestionProductList","getRecommendation","useVariantById","_response$data5","getVariant","useReviews","getAllReviews","useRatingDetails","getRatingDetails","useAddReview","queryClient","useQueryClient","useMutation","mutationFn","reviewData","post","headers","createReview","onSuccess","invalidateQueries"],"sourceRoot":""}