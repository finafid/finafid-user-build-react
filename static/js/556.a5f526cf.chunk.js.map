{"version":3,"file":"static/js/556.a5f526cf.chunk.js","mappings":"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","sources":["hooks/useMultiStepForm.js","hooks/useOtp.js","pages/Auth/OtpVerification.jsx","pages/Auth/Verification.jsx","pages/Auth/ForgetPassword.jsx","pages/Auth/ResetPassword.jsx","pages/Auth/Signup.jsx","pages/Auth/Login.jsx","pages/Auth/index.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useMultiStepForm = (initialData, onSubmit, steps, initialStep) => {\r\n  const [formData, setFormData] = useState(initialData);\r\n  const [currentStep, setCurrentStep] = useState(initialStep || 1);\r\n\r\n  const clearForm = () => setFormData(initialData);\r\n\r\n  const goToNextStep = () => {\r\n    if (currentStep >= steps.length + 1) return;\r\n    setCurrentStep((prev) => prev + 1);\r\n  };\r\n\r\n  const goToPrevStep = () => {\r\n    if (currentStep <= 0) return;\r\n    setCurrentStep((prev) => prev - 1);\r\n  };\r\n\r\n  const goToStep = (index) => {\r\n    setCurrentStep(index);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, files, checked } = e.target;\r\n\r\n    if (type === \"file\") {\r\n      // Handle file inputs\r\n      setFormData({ ...formData, [name]: files });\r\n    } else if (type === \"checkbox\") {\r\n      // Handle checkbox click\r\n      setFormData({ ...formData, [name]: checked });\r\n    } else {\r\n      // For other inputs, update the formData state as usual\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(formData);\r\n  };\r\n\r\n  return {\r\n    formData,\r\n    currentStep,\r\n    steps,\r\n    goToNextStep,\r\n    goToPrevStep,\r\n    goToStep,\r\n    handleChange,\r\n    handleSubmit,\r\n    clearForm,\r\n  };\r\n};\r\n\r\nexport default useMultiStepForm;\r\n","import { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function useOtp(length, onSubmit) {\r\n  const [otp, setOtp] = useState(new Array(length).fill(\"\"));\r\n  const refs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    refs.current = refs.current?.slice(0, length);\r\n  }, [length]);\r\n\r\n  const handleChange = (index, value) => {\r\n    if (!/^\\d$/.test(value)) return; // Only allow single digits\r\n\r\n    setOtp((prevOtp) => {\r\n      const newOtp = [...prevOtp];\r\n      newOtp[index] = value;\r\n\r\n      // Focus on the next input\r\n      if (value !== \"\" && index < length - 1) {\r\n        refs.current[index + 1].focus();\r\n      }\r\n\r\n      return newOtp;\r\n    });\r\n  };\r\n\r\n  const handlePaste = (index, pastedData) => {\r\n    const newOtp = [...otp];\r\n    pastedData.split(\"\").forEach((value, i) => {\r\n      if (/^\\d$/.test(value) && index + i < length) {\r\n        newOtp[index + i] = value;\r\n      }\r\n    });\r\n    setOtp(newOtp);\r\n  };\r\n\r\n  const handleKeyDown = (index, event) => {\r\n    if (event.key === \"Backspace\") {\r\n      event.preventDefault();\r\n\r\n      setOtp((prevOtp) => {\r\n        const newOtp = [...prevOtp];\r\n\r\n        // Clear current input and focus on the previous one\r\n        if (otp[index] === \"\") {\r\n          if (index > 0) {\r\n            newOtp[index - 1] = \"\";\r\n            refs.current[index - 1].focus();\r\n          }\r\n        } else {\r\n          newOtp[index] = \"\";\r\n        }\r\n\r\n        return newOtp;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (otp.every((code) => code !== \"\")) {\r\n        onSubmit(otp.join(\"\"));\r\n      } else return null; // OTP is not fully filled\r\n    },\r\n    [otp, onSubmit]\r\n  );\r\n\r\n  return { otp, refs, handleChange, handlePaste, handleKeyDown, handleSubmit };\r\n}\r\n","import { sendForgetPasswordOtp, verifyUser } from \"../../api/userApis\";\r\nimport Button from \"../../components/Button\";\r\nimport { useToast } from \"../../contexts/toastContext\";\r\nimport useOtp from \"../../hooks/useOtp\";\r\n\r\nconst OtpVerification = ({ formData, goToStep, length = 4 }) => {\r\n  const toast = useToast();\r\n\r\n  const onSubmitHandler = async (otp) => {\r\n    try {\r\n      const response = await verifyUser({\r\n        otp,\r\n        email: formData.email,\r\n      });\r\n\r\n      if (response?.status) {\r\n        console.log(response.data);\r\n        goToStep(5);\r\n      }\r\n    } catch (error) {\r\n      if (!error?.response) {\r\n        toast.error(\"no server response\");\r\n      } else if (error.response) {\r\n        toast.error(error.response?.data?.message);\r\n      } else {\r\n        toast.error(\"Server issues!!!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSendMail = async () => {\r\n    try {\r\n      const response = await sendForgetPasswordOtp(formData.email);\r\n      if (response?.status) {\r\n        toast.success(\"OTP resend successfully\");\r\n      }\r\n    } catch (error) {\r\n      if (!error?.response) {\r\n        toast.error(\"no server response\");\r\n      } else if (error.response) {\r\n        toast.error(error.response?.data?.message);\r\n      } else {\r\n        toast.error(\"Server issues!!!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const { otp, refs, handleChange, handlePaste, handleKeyDown, handleSubmit } =\r\n    useOtp(length, onSubmitHandler);\r\n\r\n  const onPasteHandler = (e, index) => {\r\n    e.preventDefault();\r\n    const pastedData = e.clipboardData\r\n      .getData(\"text/plain\")\r\n      .substr(0, length - index);\r\n    handlePaste(index, pastedData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-4\">\r\n      <h2 className=\"capitalize text-2xl font-semibold text-center mt-8 mb-24\">\r\n        verification\r\n      </h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"FORM-FIELD flex flex-col w-max mx-auto my-10\">\r\n          <label htmlFor=\"\" className=\"capitalize font-medium text-center my-4\">\r\n            enter verification code\r\n          </label>\r\n\r\n          <div className=\"flex gap-6\">\r\n            {Array.from({ length }).map((_, index) => (\r\n              <input\r\n                key={index}\r\n                type=\"text\"\r\n                ref={(elem) => (refs.current[index] = elem)}\r\n                maxLength={1}\r\n                value={otp[index]}\r\n                onChange={(e) => handleChange(index, e.target.value)}\r\n                onPaste={(e) => onPasteHandler(e, index)}\r\n                onKeyDown={(e) => handleKeyDown(index, e)}\r\n                className=\"border border-primary bg-offWhite outline-none size-10 rounded-full text-center\"\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <p className=\"text-center text-xs text-slate-400 mb-10\">\r\n            If you didn't receive a code.{\" \"}\r\n            <span\r\n              onClick={handleSendMail}\r\n              className=\"text-primeRed cursor-pointer hover:underline\"\r\n            >\r\n              Resend\r\n            </span>\r\n          </p>\r\n        </div>\r\n\r\n        <Button className=\"w-full py-2 px-6 rounded-full font-secondary\">\r\n          Verify\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtpVerification;\r\n","import { sendOtp, verifyUser } from \"../../api/userApis\";\r\nimport useOtp from \"../../hooks/useOtp\";\r\nimport { useToast } from \"../../contexts/toastContext\";\r\nimport { useAuth } from \"../../contexts/authContext\";\r\nimport Button from \"../../components/Button\";\r\n\r\nconst Verification = ({ formData, length = 4 }) => {\r\n  const toast = useToast();\r\n  const { login } = useAuth();\r\n\r\n  const onSubmitHandler = async (otp) => {\r\n    try {\r\n      const response = await verifyUser({\r\n        otp,\r\n        email: formData.email,\r\n      });\r\n\r\n      if (response?.status) {\r\n        console.log(response.data);\r\n        login({ email: formData.email, password: formData.password });\r\n      }\r\n    } catch (error) {\r\n      if (!error?.response) {\r\n        toast.error(\"no server response\");\r\n      } else if (error.response) {\r\n        toast.error(error.response?.data?.message);\r\n      } else {\r\n        toast.error(\"Server issues!!!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSendMail = async () => {\r\n    try {\r\n      const response = await sendOtp(formData.email);\r\n      if (response?.status) {\r\n        toast.success(\"OTP resend successfully\");\r\n      }\r\n    } catch (error) {\r\n      if (!error?.response) {\r\n        toast.error(\"no server response\");\r\n      } else if (error.response) {\r\n        toast.error(error.response?.data?.message);\r\n      } else {\r\n        toast.error(\"Server issues!!!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const { otp, refs, handleChange, handlePaste, handleKeyDown, handleSubmit } =\r\n    useOtp(length, onSubmitHandler);\r\n\r\n  const onPasteHandler = (e, index) => {\r\n    e.preventDefault();\r\n    const pastedData = e.clipboardData\r\n      .getData(\"text/plain\")\r\n      .substr(0, length - index);\r\n    handlePaste(index, pastedData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-4\">\r\n      <h2 className=\"capitalize text-2xl font-semibold text-center mt-8 mb-24\">\r\n        verification\r\n      </h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"FORM-FIELD flex flex-col w-max mx-auto my-10\">\r\n          <label htmlFor=\"\" className=\"capitalize font-medium text-center my-4\">\r\n            enter verification code\r\n          </label>\r\n\r\n          <div className=\"flex gap-6\">\r\n            {Array.from({ length }).map((_, index) => (\r\n              <input\r\n                key={index}\r\n                type=\"text\"\r\n                ref={(elem) => (refs.current[index] = elem)}\r\n                maxLength={1}\r\n                value={otp[index]}\r\n                onChange={(e) => handleChange(index, e.target.value)}\r\n                onPaste={(e) => onPasteHandler(e, index)}\r\n                onKeyDown={(e) => handleKeyDown(index, e)}\r\n                className=\"border border-primary bg-offWhite outline-none size-10 rounded-full text-center\"\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <p className=\"text-center text-xs text-slate-400 mb-10\">\r\n            If you didn't receive a code.{\" \"}\r\n            <span\r\n              onClick={handleSendMail}\r\n              className=\"text-primeRed cursor-pointer hover:underline\"\r\n            >\r\n              Resend\r\n            </span>\r\n          </p>\r\n        </div>\r\n\r\n        <Button className=\"w-full py-2 px-6 rounded-full font-secondary\">\r\n          Verify\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Verification;\r\n","import { sendForgetPasswordOtp } from \"../../api/userApis\";\r\nimport Button from \"../../components/Button\";\r\nimport InputBox from \"../../components/InputBox\";\r\nimport { useToast } from \"../../contexts/toastContext\";\r\nimport { isEmailValid } from \"../../utils/validation\";\r\n\r\nconst ForgetPassword = ({ formData, handleChange, clearForm, goToStep }) => {\r\n  const toast = useToast();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { email } = formData;\r\n\r\n      // Client side validations\r\n      if (!isEmailValid(email).success) {\r\n        toast.error(isEmailValid(email).message);\r\n        return;\r\n      }\r\n\r\n      const response = await sendForgetPasswordOtp(email);\r\n\r\n      if (response?.status) {\r\n        console.log(response.data);\r\n        goToStep(6);\r\n      }\r\n    } catch (error) {\r\n      if (!error?.response) {\r\n        toast.error(\"no server response\");\r\n      } else if (error.response) {\r\n        toast.error(error.response?.data?.message);\r\n      } else {\r\n        toast.error(\"Server issues!!!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sm:px-4\">\r\n      <h2 className=\"capitalize text-2xl font-semibold text-center mt-8 mb-24\">\r\n        forget password\r\n      </h2>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-8\">\r\n        <InputBox\r\n          type=\"email\"\r\n          label=\"Enter Email Address\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          validation={isEmailValid}\r\n          align\r\n          containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n        />\r\n\r\n        <p className=\"relative -top-3 text-center text-xs text-primary\">\r\n          Back to{\" \"}\r\n          <span\r\n            className=\"text-primeRed cursor-pointer hover:underline\"\r\n            onClick={() => goToStep(2)}\r\n          >\r\n            sign in\r\n          </span>\r\n        </p>\r\n\r\n        <div className=\"mt-8\">\r\n          <Button className=\"w-full px-10 py-2 rounded-full font-secondary text-sm\">\r\n            send\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n","import Button from \"../../components/Button\";\r\nimport InputBox from \"../../components/InputBox\";\r\nimport { resetPassword } from \"../../api/userApis\";\r\nimport { isPasswordValid } from \"../../utils/validation\";\r\nimport { useToast } from \"../../contexts/toastContext\";\r\nimport { useAuth } from \"../../contexts/authContext\";\r\n\r\nconst ResetPassword = ({ formData, handleChange, clearForm }) => {\r\n  const toast = useToast();\r\n  const { login } = useAuth();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { newPassword, confirmNewPassword } = formData;\r\n\r\n      // Client side validation\r\n      if (!isPasswordValid(newPassword).success) {\r\n        console.log(isPasswordValid(newPassword).message);\r\n        return;\r\n      } else if (newPassword !== confirmNewPassword) {\r\n        console.log(\"password and confirm password should match\");\r\n        return;\r\n      }\r\n\r\n      const response = await resetPassword({\r\n        email: formData.email,\r\n        password: newPassword,\r\n      });\r\n\r\n      if (response?.status) {\r\n        console.log(response.data);\r\n        toast.success(\"Password updated successfully\");\r\n\r\n        login({ email: formData.email, password: newPassword }).then(() => {\r\n          clearForm();\r\n        });\r\n      }\r\n    } catch (error) {\r\n      if (!error?.response) {\r\n        toast.error(\"no server response\");\r\n      } else if (error.response) {\r\n        toast.error(error.response?.data?.message);\r\n      } else {\r\n        toast.error(\"Server issues!!!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sm:px-4\">\r\n      <h2 className=\"capitalize text-2xl font-semibold text-center mt-8 mb-24\">\r\n        rest password\r\n      </h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"flex flex-col gap-4 max-sm:gap-2\">\r\n          <InputBox\r\n            type=\"password\"\r\n            label=\"enter new password\"\r\n            name=\"newPassword\"\r\n            value={formData.newPassword}\r\n            onChange={handleChange}\r\n            validation={isPasswordValid}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n          <InputBox\r\n            type=\"password\"\r\n            label=\"confirm password\"\r\n            name=\"confirmNewPassword\"\r\n            value={formData.confirmNewPassword}\r\n            onChange={handleChange}\r\n            validation={isPasswordValid}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mt-10\">\r\n          <Button className=\"w-full py-2 px-6 rounded-full font-secondary\">\r\n            save\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import InputBox from \"../../components/InputBox\";\r\nimport Button from \"../../components/Button\";\r\nimport {\r\n  isEmailValid,\r\n  isNameValid,\r\n  isPasswordValid,\r\n  isPhoneValid,\r\n} from \"../../utils/validation\";\r\nimport { registerUser, sendOtp } from \"../../api/userApis\";\r\nimport { useToast } from \"../../contexts/toastContext\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nconst Signup = ({ formData, handleChange, goToStep }) => {\r\n  const toast = useToast();\r\n  const [searchParams] = useSearchParams();\r\n  const referralCode = searchParams.get(\"referralCode\");\r\n\r\n  const isPasswordMatch = (confirmPassword) => {\r\n    if (confirmPassword !== formData.password) {\r\n      return {\r\n        success: false,\r\n        message: \"Confirm password should be the same as the password\",\r\n      };\r\n    }\r\n\r\n    return {\r\n      success: true,\r\n      message: \"OK\",\r\n    };\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { firstName, lastName, email, phone, password, confirmPassword } =\r\n        formData;\r\n      const fullName = firstName + \" \" + lastName;\r\n\r\n      // Client side validations\r\n      if (!isNameValid(fullName).success) {\r\n        toast.error(isNameValid(fullName).message);\r\n        return;\r\n      } else if (!isEmailValid(email).success) {\r\n        toast.error(isEmailValid(email).message);\r\n        return;\r\n      } else if (!isPhoneValid(phone).success) {\r\n        toast.error(isPhoneValid(phone).message);\r\n        return;\r\n      } else if (!isPasswordValid(password).success) {\r\n        toast.error(isPasswordValid(password).message);\r\n        return;\r\n      } else if (password !== confirmPassword) {\r\n        toast.error(\"Confirm password should be the same as the password\");\r\n        return;\r\n      }\r\n\r\n      const response = await registerUser({\r\n        fullName,\r\n        email,\r\n        phone,\r\n        password,\r\n        referralCode,\r\n      });\r\n\r\n      if (response?.status) {\r\n        console.log(response.data);\r\n\r\n        const isOtpSent = await sendOtp(email);\r\n        if (isOtpSent?.status) {\r\n          console.log(isOtpSent.data);\r\n          goToStep(4);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (!error?.response) {\r\n        toast.error(\"no server response\");\r\n      } else if (error.response) {\r\n        toast.error(error.response?.data?.message);\r\n      } else {\r\n        toast.error(\"Server issues!!!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"capitalize text-2xl font-semibold text-center mb-6\">\r\n        sign up\r\n      </h2>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div className=\"grid sm:grid-cols-2 gap-x-6 gap-y-3 max-sm:gap-2\">\r\n          <InputBox\r\n            label=\"first name\"\r\n            name=\"firstName\"\r\n            value={formData.firstName}\r\n            onChange={handleChange}\r\n            validation={isNameValid}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n          <InputBox\r\n            label=\"last name\"\r\n            name=\"lastName\"\r\n            value={formData.lastName}\r\n            onChange={handleChange}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n          <InputBox\r\n            type=\"email\"\r\n            label=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            validation={isEmailValid}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n          <InputBox\r\n            type=\"tel\"\r\n            label=\"phone\"\r\n            name=\"phone\"\r\n            value={formData.phone}\r\n            onChange={handleChange}\r\n            validation={isPhoneValid}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n          <InputBox\r\n            type=\"password\"\r\n            label=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            validation={isPasswordValid}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n          <InputBox\r\n            type=\"password\"\r\n            label=\"confirm password\"\r\n            name=\"confirmPassword\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleChange}\r\n            validation={isPasswordMatch}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"TERMS-BOX flex items-center gap-1\">\r\n          <input\r\n            id=\"user-terms\"\r\n            type=\"checkbox\"\r\n            name=\"userTerms\"\r\n            onChange={handleChange}\r\n            className=\"accent-primeRed cursor-pointer\"\r\n          />\r\n          <label\r\n            htmlFor=\"user-terms\"\r\n            className=\"capitalize text-xs text-primeRed select-none\"\r\n          >\r\n            agree to terms & conditions\r\n          </label>\r\n        </div>\r\n\r\n        <Button\r\n          disabled={!formData.userTerms}\r\n          className=\"px-10 py-2 rounded-full font-secondary text-sm mx-auto\"\r\n        >\r\n          submit\r\n        </Button>\r\n\r\n        <p className=\"text-center text-sm\">\r\n          Already have an account?{\" \"}\r\n          <span\r\n            className=\"text-primeRed hover:underline cursor-pointer\"\r\n            onClick={() => goToStep(2)}\r\n          >\r\n            Login Here\r\n          </span>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import Button from \"../../components/Button\";\r\nimport InputBox from \"../../components/InputBox\";\r\nimport { isEmailValid, isPasswordValid } from \"../../utils/validation\";\r\nimport { useToast } from \"../../contexts/toastContext\";\r\nimport { useAuth } from \"../../contexts/authContext\";\r\n\r\nconst Login = ({ formData, handleChange, goToStep }) => {\r\n  const toast = useToast();\r\n  const { login } = useAuth();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { email_phone, loginPassword } = formData;\r\n\r\n      // Client side validations\r\n      if (!isEmailValid(email_phone).success) {\r\n        toast.error(isEmailValid(email_phone).message);\r\n        return;\r\n      } else if (!isPasswordValid(loginPassword).success) {\r\n        toast.error(isPasswordValid(loginPassword).message);\r\n        return;\r\n      }\r\n\r\n      const payload = { email: email_phone, password: loginPassword };\r\n\r\n      login(payload);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sm:px-4\">\r\n      <h2 className=\"capitalize text-2xl font-semibold text-center mb-16\">\r\n        login\r\n      </h2>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div className=\"flex flex-col gap-4 max-sm:gap-2\">\r\n          <InputBox\r\n            label=\"email / phone\"\r\n            name=\"email_phone\"\r\n            value={formData.email_phone}\r\n            onChange={handleChange}\r\n            validation={isEmailValid}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n          <InputBox\r\n            type=\"password\"\r\n            label=\"password\"\r\n            name=\"loginPassword\"\r\n            value={formData.loginPassword}\r\n            onChange={handleChange}\r\n            validation={isPasswordValid}\r\n            containerClassName=\"flex-col gap-2 max-sm:gap-1\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"FORGET-PASS relative -top-3 flex justify-end\">\r\n          <p\r\n            className=\"text-slate-400 text-xs cursor-pointer hover:underline\"\r\n            onClick={() => goToStep(3)}\r\n          >\r\n            Forget Password?\r\n          </p>\r\n        </div>\r\n\r\n        <Button className=\"px-10 py-2 rounded-full font-secondary text-sm mx-auto\">\r\n          sign in\r\n        </Button>\r\n\r\n        <p className=\"text-center text-sm\">\r\n          Don't have an account?{\" \"}\r\n          <span\r\n            className=\"text-primeRed hover:underline cursor-pointer\"\r\n            onClick={() => goToStep(1)}\r\n          >\r\n            Sign Up\r\n          </span>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// import { FaFacebook } from \"react-icons/fa\";\r\nimport bg from \"../../assets/images/Rectangle.png\";\r\nimport OtpVerification from \"./OtpVerification\";\r\nimport Verification from \"./Verification\";\r\nimport ForgetPassword from \"./ForgetPassword\";\r\nimport ResetPassword from \"./ResetPassword\";\r\nimport Signup from \"./Signup\";\r\nimport Login from \"./Login\";\r\nimport useMultiStepForm from \"../../hooks/useMultiStepForm\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\n\r\nconst Auth = () => {\r\n  const { formData, handleChange, clearForm, currentStep, goToStep } =\r\n    useMultiStepForm({}, null, 6, 2);\r\n\r\n  const renderStep = () => {\r\n    switch (currentStep) {\r\n      case 1:\r\n        return (\r\n          <Signup\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            clearForm={clearForm}\r\n            goToStep={goToStep}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <Login\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            clearForm={clearForm}\r\n            goToStep={goToStep}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <ForgetPassword\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            clearForm={clearForm}\r\n            goToStep={goToStep}\r\n          />\r\n        );\r\n      case 4:\r\n        return (\r\n          <Verification\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            clearForm={clearForm}\r\n            goToStep={goToStep}\r\n          />\r\n        );\r\n      case 5:\r\n        return (\r\n          <ResetPassword\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            clearForm={clearForm}\r\n            goToStep={goToStep}\r\n          />\r\n        );\r\n      case 6:\r\n        return (\r\n          <OtpVerification\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            clearForm={clearForm}\r\n            goToStep={goToStep}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <Login\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            clearForm={clearForm}\r\n            goToStep={goToStep}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogin = () => {\r\n    window.location.href = `${process.env.REACT_APP_API}/google`;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container max-w-full py-8 max-sm:p-0 bg-cover bg-center bg-no-repeat\"\r\n      style={{ backgroundImage: `url(${bg})` }}\r\n    >\r\n      <div className=\"relative flex flex-col justify-between sm:size-[520px] mx-auto sm:shadow-primary bg-white sm:border sm:border-primary sm:rounded-3xl p-6 space-y-4\">\r\n        {renderStep()}\r\n\r\n        {(currentStep === 1 || currentStep === 2) && (\r\n          <div className=\"EXTRA-BUTTONS sm:w-max mx-auto flex flex-wrap gap-8 max-sm:gap-3\">\r\n            <button\r\n              onClick={handleGoogleLogin}\r\n              className=\"max-sm:w-full flex justify-start items-center gap-2 rounded-lg text-sm p-2 bg-white border border-[#dd4b39]\"\r\n            >\r\n              <FcGoogle size={24} className=\"flex-shrink-0\" />\r\n              <p>Continue with Google</p>\r\n            </button>\r\n            {/* <button className=\"max-sm:w-full flex justify-start items-center gap-2 rounded-lg text-sm p-2 bg-white border border-[#3b5998]\">\r\n              <FaFacebook size={24} className=\"flex-shrink-0 text-[#3b5998]\" />\r\n              <p>Continue with Facebook</p>\r\n            </button> */}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["useMultiStepForm","initialData","onSubmit","steps","initialStep","formData","setFormData","useState","currentStep","setCurrentStep","goToNextStep","length","prev","goToPrevStep","goToStep","index","handleChange","e","name","value","type","files","checked","target","handleSubmit","preventDefault","clearForm","useOtp","otp","setOtp","Array","fill","refs","useRef","useEffect","_refs$current","current","slice","useCallback","every","code","join","test","prevOtp","newOtp","focus","handlePaste","pastedData","split","forEach","i","handleKeyDown","event","key","_ref","toast","useToast","async","response","verifyUser","email","status","console","log","data","error","_error$response","_error$response$data","message","_jsxs","className","children","_jsx","htmlFor","from","map","_","ref","elem","maxLength","onChange","onPaste","onPasteHandler","clipboardData","getData","substr","onKeyDown","onClick","sendForgetPasswordOtp","success","_error$response2","_error$response2$data","Button","login","useAuth","password","sendOtp","isEmailValid","InputBox","label","validation","align","containerClassName","newPassword","confirmNewPassword","isPasswordValid","resetPassword","then","searchParams","useSearchParams","referralCode","get","firstName","lastName","phone","confirmPassword","fullName","isNameValid","isPhoneValid","registerUser","isOtpSent","id","disabled","userTerms","email_phone","loginPassword","Auth","style","backgroundImage","bg","renderStep","Signup","Login","ForgetPassword","Verification","ResetPassword","OtpVerification","handleGoogleLogin","window","location","href","FcGoogle","size"],"sourceRoot":""}