{"version":3,"file":"static/js/3841.870b9dcb.chunk.js","mappings":"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","sources":["components/HeroBanner.jsx","components/Rating.jsx","components/RatingBadge.jsx","components/Skeleton.jsx","hooks/useInView.js","api/bannerApis.js","services/bannerServices.js","api/productApis.js","services/productService.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { useBanners } from \"../services/bannerServices\";\r\nimport Carousel from \"./Carousel\";\r\nimport Skeleton from \"./Skeleton\";\r\nimport useInView from \"../hooks/useInView\";\r\nimport useMediaQuery from \"../hooks/useMediaQuery\";\r\n\r\nconst HeroBanner = ({\r\n  preload = false,\r\n  position,\r\n  resourceType,\r\n  valueId,\r\n  title,\r\n  subtitle,\r\n  className,\r\n  containerClassName = \"container max-w-full\",\r\n}) => {\r\n  const containerRef = useRef(null);\r\n  const hasFetchedOnce = useRef(false);\r\n  const [shouldFetch, setShouldFetch] = useState(preload);\r\n  const maxMd = useMediaQuery(\"(max-width: 768px)\");\r\n\r\n  const isInView = useInView(containerRef, {\r\n    threshold: 0.1,\r\n    rootMargin: \"100px\",\r\n  });\r\n\r\n  const { data: banners = [], isLoading } = useBanners(\r\n    {\r\n      bannerType: \"Hero\",\r\n      position,\r\n      resourceType,\r\n      valueId,\r\n    },\r\n    { enabled: shouldFetch }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!hasFetchedOnce.current && isInView && position && resourceType) {\r\n      setShouldFetch(true);\r\n      hasFetchedOnce.current = true;\r\n    }\r\n  }, [isInView, position, resourceType]);\r\n\r\n  return (\r\n    <div ref={containerRef}>\r\n      {isLoading ? (\r\n        <ul className={`flex gap-4 overflow-x-hidden ${containerClassName}`}>\r\n          {Array.from({ length: 1 }).map((_, index) => (\r\n            <li\r\n              key={index}\r\n              className={`block relative w-full h-80 max-lg:h-48 max-md:h-24 overflow-hidden flex-shrink-0 ${className}`}\r\n            >\r\n              <Skeleton overall=\"light\" />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        banners?.length > 0 && (\r\n          <div className={`space-y-4 max-lg::space-y-2 ${containerClassName}`}>\r\n            {title || subtitle ? (\r\n              <div>\r\n                <h1 className=\"text-2xl max-lg:text-xl font-bold\">{title}</h1>\r\n                <p className=\"text-sm\">{subtitle}</p>\r\n              </div>\r\n            ) : null}\r\n            <Carousel navigation={!maxMd} autoplay delay={5000} allowTouchMove>\r\n              {banners.map((banner, index) => (\r\n                <a\r\n                  key={banner.bannerTitle || index}\r\n                  href={banner.linkUrl}\r\n                  className=\"block relative w-full h-max rounded-lg\"\r\n                >\r\n                  <img\r\n                    src={banner.bannerImg}\r\n                    alt={banner.bannerTitle || index}\r\n                    loading=\"lazy\"\r\n                    className={`w-full object-cover object-center ${className}`}\r\n                  />\r\n                </a>\r\n              ))}\r\n            </Carousel>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroBanner;\r\n","import { IoMdStar, IoMdStarHalf, IoMdStarOutline } from \"react-icons/io\";\r\n\r\nconst Rating = ({ rating, maxRating = 5, size = 16 }) => {\r\n  const renderStars = () => {\r\n    const stars = [];\r\n    const ceilRating = Math.ceil(rating);\r\n    const hasHalfStar = Math.floor(rating) !== Math.ceil(rating);\r\n\r\n    for (let i = 1; i <= maxRating; i++) {\r\n      if (i <= rating)\r\n        stars.push(\r\n          <span key={i} className=\"text-yellow-500 text-lg\">\r\n            <IoMdStar size={size} />\r\n          </span>\r\n        );\r\n      else if (i === ceilRating && hasHalfStar)\r\n        stars.push(\r\n          <span key={i} className=\"text-yellow-500 text-lg\">\r\n            <IoMdStarHalf size={size} />\r\n          </span>\r\n        );\r\n      else\r\n        stars.push(\r\n          <span key={i} className=\"text-gray-300 text-lg\">\r\n            <IoMdStarOutline size={size} />\r\n          </span>\r\n        );\r\n    }\r\n\r\n    return stars;\r\n  };\r\n\r\n  return <div className=\"flex\">{renderStars()}</div>;\r\n};\r\n\r\nexport default Rating;\r\n","import { useState } from \"react\";\r\nimport { IoMdStar } from \"react-icons/io\";\r\nimport Rating from \"./Rating\";\r\n\r\nconst getColorForRating = (rating) => {\r\n  switch (true) {\r\n    case rating >= 4:\r\n      return \"bg-green-500\";\r\n    case rating >= 3:\r\n      return \"bg-green-400\";\r\n    case rating >= 2:\r\n      return \"bg-yellow-400\";\r\n    case rating >= 1:\r\n      return \"bg-orange-400\";\r\n    default:\r\n      return \"bg-gray-200\";\r\n  }\r\n};\r\n\r\nconst getColorForRatingDetails = (rating) => {\r\n  switch (rating) {\r\n    case 5:\r\n      return \"bg-green-500\";\r\n    case 4:\r\n      return \"bg-green-400\";\r\n    case 3:\r\n      return \"bg-yellow-400\";\r\n    case 2:\r\n      return \"bg-orange-400\";\r\n    case 1:\r\n      return \"bg-red-500\";\r\n    default:\r\n      return \"bg-gray-200\";\r\n  }\r\n};\r\n\r\nconst RatingDetailsDropdown = ({ rating, totalRatings, ratingsBreakdown }) => {\r\n  return (\r\n    <div className=\"w-64 p-4 bg-white border rounded shadow-lg\">\r\n      <div className=\"text-center\">\r\n        <div className=\"text-4xl font-bold\">{rating.toFixed(1)}</div>\r\n        <div className=\"text-secondary\">{totalRatings} Ratings</div>\r\n        <div className=\"mt-2 flex justify-center\">\r\n          <Rating rating={rating} size={24} />\r\n        </div>\r\n      </div>\r\n      {ratingsBreakdown && (\r\n        <div className=\"mt-4 space-y-1\">\r\n          {Object.entries(ratingsBreakdown)\r\n            .sort(([a], [b]) => b - a)\r\n            .map(([key, count]) => (\r\n              <div key={key} className=\"flex items-center gap-1\">\r\n                <span className=\"text-secondary\">{key}</span>\r\n                <IoMdStar size={18} className=\"text-secondary mr-2\" />\r\n                <div className=\"flex-1 h-2 bg-lightGray rounded-full overflow-hidden\">\r\n                  <div\r\n                    className={`h-full ${getColorForRatingDetails(\r\n                      Number(key)\r\n                    )}`}\r\n                    style={{ width: `${(count / totalRatings) * 100}%` }}\r\n                  />\r\n                </div>\r\n                <span className=\"ml-2 text-secondary\">({count})</span>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RatingBadge = ({\r\n  rating,\r\n  totalRatings,\r\n  ratingsBreakdown,\r\n  dropdown = false,\r\n}) => {\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className=\"relative inline-block\"\r\n      onMouseEnter={() => setShowDropdown(true)}\r\n      onMouseLeave={() => setShowDropdown(false)}\r\n    >\r\n      <div\r\n        className={`flex items-center justify-center gap-[2px] px-[5px] py-[2px] rounded text-white ${getColorForRating(\r\n          rating\r\n        )}`}\r\n      >\r\n        <span className=\"text-xs font-medium pt-[2px] leading-none\">\r\n          {rating.toFixed(1)}\r\n        </span>\r\n        <IoMdStar size={12} />\r\n      </div>\r\n      {dropdown && showDropdown && (\r\n        <div className=\"absolute z-10 mt-2\">\r\n          <RatingDetailsDropdown\r\n            rating={rating}\r\n            totalRatings={totalRatings}\r\n            ratingsBreakdown={ratingsBreakdown}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RatingBadge;\r\n","const Skeleton = ({ overall = \"normal\" }) => {\r\n  return (\r\n    <div\r\n      className={`size-full animate-pulse ${\r\n        overall === \"dark\"\r\n          ? \"bg-darkGray\"\r\n          : overall === \"normal\"\r\n          ? \"bg-mainGray\"\r\n          : overall === \"light\" && \"bg-lightGray\"\r\n      }`}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useInView = (ref, options = { threshold: 0.1, rootMargin: \"0px\" }) => {\r\n  const [isIntersecting, setIsIntersecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!ref.current) return;\r\n\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      setIsIntersecting(entry.isIntersecting);\r\n    }, options);\r\n\r\n    const element = ref.current;\r\n    observer.observe(element);\r\n\r\n    return () => {\r\n      observer.unobserve(element);\r\n    };\r\n  }, [ref, options]);\r\n\r\n  return isIntersecting;\r\n};\r\n\r\nexport default useInView;\r\n","import axiosInstance from \"./axiosInstance\";\r\n\r\nconst getBanners = async (params) => {\r\n  const response = await axiosInstance.get(\"/getAllBannersByBannerType\", {\r\n    params,\r\n  });\r\n  return response.data?.data;\r\n};\r\n\r\nconst getAllGalleryBanners = async () => {\r\n  const response = await axiosInstance.get(\"/getAllPublishedGallery\");\r\n  return response.data?.galleryDetails;\r\n};\r\n\r\nexport { getBanners, getAllGalleryBanners };\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { getAllGalleryBanners, getBanners } from \"../api/bannerApis\";\r\n\r\nconst useBanners = (params, options) => {\r\n  return useQuery({\r\n    queryKey: [\"banners\", params],\r\n    queryFn: () => getBanners(params),\r\n    staleTime: 1000 * 60 * 5,\r\n    retry: false,\r\n    ...options,\r\n  });\r\n};\r\n\r\nconst useGalleryBanners = () => {\r\n  return useQuery({\r\n    queryKey: [\"galleryBanners\"],\r\n    queryFn: () => getAllGalleryBanners(),\r\n    staleTime: 1000 * 60 * 5,\r\n    retry: false,\r\n  });\r\n};\r\n\r\nexport { useBanners, useGalleryBanners };\r\n","import axiosInstance from \"./axiosInstance\";\r\n\r\nconst getProductById = async (productId) => {\r\n  const response = await axiosInstance.get(`/getProductById/${productId}`);\r\n  return response.data;\r\n};\r\n\r\nconst getAllVariants = async (params) => {\r\n  const response = await axiosInstance.get(\"/getAllVariantsOnUser\", { params });\r\n  return response.data;\r\n};\r\n\r\nconst getAllUtsavVariants = async () => {\r\n  const response = await axiosInstance.get(\"/getAllUtsavProduct\");\r\n  return response.data?.productDetails;\r\n};\r\n\r\nconst getAllFeaturedVariants = async () => {\r\n  const response = await axiosInstance.get(\"/getAllFeaturedProduct\");\r\n  return response.data?.variantDetails;\r\n};\r\n\r\nconst getFeaturedVariantsBasedOnCategory = async (categoryId) => {\r\n  const response = await axiosInstance.get(\r\n    `/getFeaturedProductBasedOnCategory/${categoryId}`\r\n  );\r\n  return response.data?.productList;\r\n};\r\n\r\nconst getAllNewArrivals = async () => {\r\n  const response = await axiosInstance.get(\"/getAllNewArrivals\");\r\n  return response.data?.productDetails;\r\n};\r\n\r\nconst getAllTopSellingProducts = async () => {\r\n  const response = await axiosInstance.get(\"/getAllTopSellingProduct\");\r\n  return response.data;\r\n};\r\n\r\nconst getVariant = async (variantId) => {\r\n  const response = await axiosInstance.get(`/getVariantById/${variantId}`);\r\n  return response.data?.variantDetails;\r\n};\r\n\r\nconst getRecommendation = async (variantId) => {\r\n  const response = await axiosInstance.get(\r\n    `/suggestionProductList/${variantId}`\r\n  );\r\n  return response.data?.suggestionProductList;\r\n};\r\n\r\nconst getAllReviews = async (productId) => {\r\n  const response = await axiosInstance.get(`/GetAllReviews/${productId}`);\r\n  return response.data;\r\n};\r\n\r\nconst getReviewById = async (productId, reviewId) => {\r\n  const response = await axiosInstance.get(\r\n    `/reviewByID/${productId}/${reviewId}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst getRatingDetails = async (productId) => {\r\n  const response = await axiosInstance.get(`/getAvgRating/${productId}`);\r\n  return response.data;\r\n};\r\n\r\nconst createReview = async (reviewData, productId) => {\r\n  const response = await axiosInstance.post(\r\n    `/createReview/${productId}`,\r\n    reviewData,\r\n    { headers: { \"Content-Type\": \"multipart/form-data\" } }\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst updateReview = async (reviewData, productId, reviewId) => {\r\n  const response = await axiosInstance.post(\r\n    `/updateReview/${productId}/${reviewId}`,\r\n    reviewData\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst deleteReview = async (reviewId) => {\r\n  const response = await axiosInstance.get(`/deleteReview/${reviewId}`);\r\n  return response.data;\r\n};\r\n\r\nexport {\r\n  getProductById,\r\n  getAllVariants,\r\n  getAllUtsavVariants,\r\n  getAllFeaturedVariants,\r\n  getFeaturedVariantsBasedOnCategory,\r\n  getAllNewArrivals,\r\n  getAllTopSellingProducts,\r\n  getVariant,\r\n  getRecommendation,\r\n  createReview,\r\n  getAllReviews,\r\n  getReviewById,\r\n  getRatingDetails,\r\n  updateReview,\r\n  deleteReview,\r\n};\r\n","import {\r\n  keepPreviousData,\r\n  useMutation,\r\n  useQuery,\r\n  useQueryClient,\r\n} from \"@tanstack/react-query\";\r\nimport {\r\n  createReview,\r\n  deleteReview,\r\n  getAllFeaturedVariants,\r\n  getAllNewArrivals,\r\n  getAllReviews,\r\n  getAllTopSellingProducts,\r\n  getAllUtsavVariants,\r\n  getAllVariants,\r\n  getFeaturedVariantsBasedOnCategory,\r\n  getProductById,\r\n  getRatingDetails,\r\n  getRecommendation,\r\n  getReviewById,\r\n  getVariant,\r\n  updateReview,\r\n} from \"../api/productApis\";\r\n\r\nconst useProductById = (productId) => {\r\n  return useQuery({\r\n    queryKey: [\"productGroup\", productId],\r\n    queryFn: () => getProductById(productId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!productId,\r\n  });\r\n};\r\n\r\nconst useVariants = (params) => {\r\n  return useQuery({\r\n    queryKey: [\"variants\", params],\r\n    queryFn: () => getAllVariants(params),\r\n    staleTime: 1000 * 60 * 5,\r\n    placeholderData: keepPreviousData,\r\n  });\r\n};\r\n\r\nconst useAllUtsavVariants = () => {\r\n  return useQuery({\r\n    queryKey: [\"variants\", \"utsav\"],\r\n    queryFn: getAllUtsavVariants,\r\n    staleTime: 1000 * 60 * 5,\r\n  });\r\n};\r\n\r\nconst useAllFeaturedVariants = () => {\r\n  return useQuery({\r\n    queryKey: [\"variants\", \"featured\"],\r\n    queryFn: getAllFeaturedVariants,\r\n    staleTime: 1000 * 60 * 5,\r\n  });\r\n};\r\n\r\nconst useFeaturedVariantsBasedOnCategory = (categoryId) => {\r\n  return useQuery({\r\n    queryKey: [\"variants\", \"featured\", categoryId],\r\n    queryFn: () => getFeaturedVariantsBasedOnCategory(categoryId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!categoryId,\r\n  });\r\n};\r\n\r\nconst useTopSellingProducts = () => {\r\n  return useQuery({\r\n    queryKey: [\"products\", \"top selling\"],\r\n    queryFn: getAllTopSellingProducts,\r\n    staleTime: 1000 * 60 * 5,\r\n  });\r\n};\r\n\r\nconst useNewArrivals = () => {\r\n  return useQuery({\r\n    queryKey: [\"variants\", \"new arrivals\"],\r\n    queryFn: getAllNewArrivals,\r\n    staleTime: 1000 * 60 * 5,\r\n  });\r\n};\r\n\r\nconst useRecommendation = (variantId) => {\r\n  return useQuery({\r\n    queryKey: [\"recommendations\", variantId],\r\n    queryFn: () => getRecommendation(variantId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!variantId,\r\n  });\r\n};\r\n\r\nconst useVariantById = (variantId) => {\r\n  return useQuery({\r\n    queryKey: [\"variant\", variantId],\r\n    queryFn: () => getVariant(variantId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!variantId,\r\n  });\r\n};\r\n\r\nconst useReviews = (productId) => {\r\n  return useQuery({\r\n    queryKey: [\"reviews\", productId],\r\n    queryFn: () => getAllReviews(productId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!productId,\r\n  });\r\n};\r\n\r\nconst useReviewById = (productId, reviewId) => {\r\n  return useQuery({\r\n    queryKey: [\"review\", productId, reviewId],\r\n    queryFn: () => getReviewById(productId, reviewId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!productId && !!reviewId,\r\n  });\r\n};\r\n\r\nconst useRatingDetails = (productId) => {\r\n  return useQuery({\r\n    queryKey: [\"rating\", productId],\r\n    queryFn: () => getRatingDetails(productId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!productId,\r\n  });\r\n};\r\n\r\nconst useAddReview = (productId) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: ({ reviewData, productId }) =>\r\n      createReview(reviewData, productId),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([\"reviews\", productId]);\r\n    },\r\n  });\r\n};\r\n\r\nconst useUpdateReview = (productId, reviewId) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: ({ reviewData, productId, reviewId }) =>\r\n      updateReview(reviewData, productId, reviewId),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([\"review\", productId, reviewId]);\r\n    },\r\n  });\r\n};\r\n\r\nconst useDeleteReview = (productId, reviewId) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: deleteReview,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([\"review\", productId, reviewId]);\r\n    },\r\n  });\r\n};\r\n\r\nexport {\r\n  useProductById,\r\n  useVariants,\r\n  useAllUtsavVariants,\r\n  useAllFeaturedVariants,\r\n  useFeaturedVariantsBasedOnCategory,\r\n  useTopSellingProducts,\r\n  useNewArrivals,\r\n  useRecommendation,\r\n  useVariantById,\r\n  useReviews,\r\n  useReviewById,\r\n  useRatingDetails,\r\n  useAddReview,\r\n  useUpdateReview,\r\n  useDeleteReview,\r\n};\r\n","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { hashKey, shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<TData, TError, TVariables, TContext> =\n    undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options as\n      | MutationObserverOptions<TData, TError, TVariables, TContext>\n      | undefined\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n\n    if (\n      prevOptions?.mutationKey &&\n      this.options.mutationKey &&\n      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)\n    ) {\n      this.reset()\n    } else if (this.#currentMutation?.state.status === 'pending') {\n      this.#currentMutation.setOptions(this.options)\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    // reset needs to remove the observer from the mutation because there is no way to \"get it back\"\n    // another mutate call will yield a new mutation!\n    this.#currentMutation?.removeObserver(this)\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TContext>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TContext>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TContext>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables!\n        const context = this.#currentResult.context\n\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context!)\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context)\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(action.error, variables, context)\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            variables,\n            context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport { MutationObserver, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { noop, shouldThrowError } from './utils'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n"],"names":["_ref","preload","position","resourceType","valueId","title","subtitle","className","containerClassName","containerRef","useRef","hasFetchedOnce","shouldFetch","setShouldFetch","useState","maxMd","useMediaQuery","isInView","useInView","threshold","rootMargin","data","banners","isLoading","useBanners","bannerType","enabled","useEffect","current","_jsx","ref","children","Array","from","length","map","_","index","Skeleton","overall","_jsxs","Carousel","navigation","autoplay","delay","allowTouchMove","banner","href","linkUrl","src","bannerImg","alt","bannerTitle","loading","rating","maxRating","size","renderStars","stars","ceilRating","Math","ceil","hasHalfStar","floor","i","push","IoMdStar","IoMdStarHalf","IoMdStarOutline","getColorForRating","getColorForRatingDetails","RatingDetailsDropdown","totalRatings","ratingsBreakdown","toFixed","Rating","Object","entries","sort","_ref2","_ref3","a","b","_ref4","key","count","Number","style","width","_ref5","dropdown","showDropdown","setShowDropdown","onMouseEnter","onMouseLeave","options","arguments","undefined","isIntersecting","setIsIntersecting","observer","IntersectionObserver","entry","element","observe","unobserve","params","useQuery","queryKey","queryFn","async","_response$data","axiosInstance","get","getBanners","staleTime","retry","useGalleryBanners","_response$data2","galleryDetails","getAllGalleryBanners","getAllUtsavVariants","productDetails","getAllFeaturedVariants","variantDetails","getAllNewArrivals","_response$data4","getAllTopSellingProducts","useProductById","productId","getProductById","useVariants","getAllVariants","placeholderData","keepPreviousData","useAllUtsavVariants","useAllFeaturedVariants","useFeaturedVariantsBasedOnCategory","categoryId","_response$data3","productList","getFeaturedVariantsBasedOnCategory","useTopSellingProducts","useNewArrivals","useRecommendation","variantId","_response$data6","suggestionProductList","getRecommendation","useVariantById","_response$data5","getVariant","useReviews","getAllReviews","useRatingDetails","getRatingDetails","useAddReview","queryClient","useQueryClient","useMutation","mutationFn","reviewData","post","headers","createReview","onSuccess","invalidateQueries","MutationObserver","Subscribable","constructor","client","super","this","setOptions","bindMethods","mutate","bind","reset","prevOptions","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","type","mutation","mutationKey","hashKey","state","status","onUnsubscribe","hasListeners","removeObserver","onMutationUpdate","action","getCurrentResult","variables","build","addObserver","execute","getDefaultState","isPending","isSuccess","isError","isIdle","notifyManager","batch","context","onSettled","onError","error","listeners","forEach","listener","React","result","onStoreChange","subscribe","batchCalls","mutateOptions","catch","noop","shouldThrowError","throwOnError","mutateAsync"],"sourceRoot":""}