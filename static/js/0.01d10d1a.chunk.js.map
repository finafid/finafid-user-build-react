{"version":3,"file":"static/js/0.01d10d1a.chunk.js","mappings":"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","sources":["pages/GiftCard/RedeemCard.jsx","pages/GiftCard/GiftCardList.jsx","pages/GiftCard/index.jsx","api/giftCardApis.js","services/giftCardServices.js"],"sourcesContent":["import Button from \"../../components/Button\";\r\nimport InputBox from \"../../components/InputBox\";\r\nimport useForm from \"../../hooks/useForm\";\r\nimport { useRedeemGiftCard } from \"../../services/giftCardServices\";\r\nimport { useToast } from \"../../contexts/toastContext\";\r\nimport { useWallet } from \"../../contexts/walletContext\";\r\n\r\nconst RedeemCard = () => {\r\n  const toast = useToast();\r\n  const { getBalance } = useWallet();\r\n  const redeemMutation = useRedeemGiftCard();\r\n\r\n  const onSubmitHandler = (data) => {\r\n    const { code } = data;\r\n\r\n    // Client side validations\r\n    if (!code) {\r\n      toast.error(\"Please enter a code\");\r\n      return;\r\n    }\r\n\r\n    redeemMutation.mutate(code, {\r\n      onSuccess: async () => {\r\n        await getBalance();\r\n        toast.success(\"Balance added into wallet successfully\");\r\n        clearForm();\r\n      },\r\n      onError: (error) => {\r\n        console.error(error);\r\n        toast.error(error?.response?.data?.message);\r\n      },\r\n    });\r\n  };\r\n\r\n  const { formData, handleChange, handleSubmit, clearForm } = useForm(\r\n    {},\r\n    onSubmitHandler\r\n  );\r\n\r\n  return (\r\n    <div className=\"mt-8\">\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"flex flex-wrap items-end gap-x-8 gap-y-2\"\r\n      >\r\n        <InputBox\r\n          label=\"redeem gift card\"\r\n          name=\"code\"\r\n          value={formData.code}\r\n          onChange={handleChange}\r\n          placeholder=\"enter your gift code\"\r\n          className=\"w-60 h-10 border-2 border-secondary rounded-md px-4 py-2 text-sm placeholder:text-sm\"\r\n        />\r\n        <Button\r\n          disabled={redeemMutation.isPending}\r\n          className=\"h-10 px-4 py-2 rounded-md\"\r\n        >\r\n          redeem\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RedeemCard;\r\n","import Spinner from \"../../components/Spinner\";\r\nimport { useGiftCards } from \"../../services/giftCardServices\";\r\n\r\nconst GiftCardList = () => {\r\n  const { data: giftCards, isLoading, error } = useGiftCards();\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex justify-center\">\r\n        <Spinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"flex justify-center text-sm text-error\">\r\n        {error.message}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap justify-center gap-4 mb-8\">\r\n      {giftCards.length === 0 ? (\r\n        <p className=\"text-center text-primary\">No gift cards available.</p>\r\n      ) : (\r\n        giftCards.map((card) => (\r\n          <div key={card._id} className=\"h-24 w-32 rounded overflow-hidden\">\r\n            <img\r\n              src={card?.templateId?.template}\r\n              alt={card?.templateId?.title}\r\n              className=\"size-full object-cover object-center\"\r\n            />\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GiftCardList;\r\n","import { FiPlusSquare } from \"react-icons/fi\";\r\nimport RedeemCard from \"./RedeemCard\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport GiftCardList from \"./GiftCardList\";\r\n\r\nconst GiftCard = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <motion.main\r\n      className=\"flex-1\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <div className=\"bg-white p-6 rounded-md lg:shadow-md\">\r\n        <h2 className=\"text-2xl font-semibold mb-6\">Gift Cards</h2>\r\n\r\n        <GiftCardList />\r\n\r\n        <button\r\n          onClick={() => navigate(\"create\")}\r\n          className=\"px-4 py-2 flex justify-start items-center gap-2 border border-primeRed rounded-md text-primeRed bg-white hover:bg-offWhite\"\r\n        >\r\n          <FiPlusSquare size={18} />\r\n          <p className=\"font-medium\">Create Gift Card</p>\r\n        </button>\r\n\r\n        <RedeemCard />\r\n      </div>\r\n    </motion.main>\r\n  );\r\n};\r\n\r\nexport default GiftCard;\r\n","import axiosInstance from \"./axiosInstance\";\r\n\r\nconst getGiftCards = async () => {\r\n  const response = await axiosInstance.get(\"/getGiftCardByUser\");\r\n  return response.data;\r\n};\r\n\r\nconst createGiftCard = async (cardData) => {\r\n  const response = await axiosInstance.post(\"/createGiftCard\", cardData);\r\n  return response.data;\r\n};\r\n\r\nconst redeemGiftCard = async (code) => {\r\n  const response = await axiosInstance.post(\"/redeemGiftCard\", { code });\r\n  return response.data;\r\n};\r\n\r\nconst getAllTemplates = async () => {\r\n  const response = await axiosInstance.get(\"/getAllTemplates\");\r\n  return response.data?.allTemplates;\r\n};\r\n\r\nexport { getGiftCards, createGiftCard, redeemGiftCard, getAllTemplates };\r\n","import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport {\r\n  createGiftCard,\r\n  getAllTemplates,\r\n  getGiftCards,\r\n  redeemGiftCard,\r\n} from \"../api/giftCardApis\";\r\n\r\nconst useGiftCards = () => {\r\n  return useQuery({\r\n    queryKey: [\"giftCards\"],\r\n    queryFn: getGiftCards,\r\n    staleTime: 1000 * 60 * 5,\r\n  });\r\n};\r\n\r\nconst useCreateGiftCard = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: createGiftCard,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([\"giftCards\"]);\r\n    },\r\n  });\r\n};\r\n\r\nconst useRedeemGiftCard = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: redeemGiftCard,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([\"giftCards\"]);\r\n    },\r\n  });\r\n};\r\n\r\nconst useGiftCardTemplates = () => {\r\n  return useQuery({\r\n    queryKey: [\"giftCard-templates\"],\r\n    queryFn: getAllTemplates,\r\n    staleTime: 1000 * 60 * 5,\r\n  });\r\n};\r\n\r\nexport {\r\n  useGiftCards,\r\n  useCreateGiftCard,\r\n  useRedeemGiftCard,\r\n  useGiftCardTemplates,\r\n};\r\n"],"names":["RedeemCard","toast","useToast","getBalance","useWallet","redeemMutation","useRedeemGiftCard","formData","handleChange","handleSubmit","clearForm","useForm","data","code","mutate","onSuccess","async","success","onError","error","_error$response","_error$response$data","console","response","message","_jsx","className","children","_jsxs","onSubmit","InputBox","label","name","value","onChange","placeholder","Button","disabled","isPending","GiftCardList","giftCards","isLoading","useGiftCards","Spinner","length","map","card","_card$templateId","_card$templateId2","src","templateId","template","alt","title","_id","GiftCard","navigate","useNavigate","motion","main","initial","opacity","animate","transition","duration","onClick","FiPlusSquare","size","getGiftCards","axiosInstance","get","createGiftCard","post","cardData","redeemGiftCard","getAllTemplates","_response$data","allTemplates","useQuery","queryKey","queryFn","staleTime","useCreateGiftCard","queryClient","useQueryClient","useMutation","mutationFn","invalidateQueries","useGiftCardTemplates"],"sourceRoot":""}