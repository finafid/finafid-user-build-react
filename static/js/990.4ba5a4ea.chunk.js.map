{"version":3,"file":"static/js/990.4ba5a4ea.chunk.js","mappings":"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","sources":["api/orderApis.js","pages/Order/PurchaseTable.jsx","components/Tracker.jsx","pages/Order/OrderStatus.jsx","pages/Order/index.jsx","services/orderServices.js"],"sourcesContent":["import axiosInstance from \"./axiosInstance\";\r\n\r\nconst getAllOrders = async () => {\r\n  const response = await axiosInstance.get(\"/getOrderDetails\");\r\n  return response.data;\r\n};\r\n\r\nconst getOrderById = async (orderId) => {\r\n  const response = await axiosInstance.get(`/getOrderById/${orderId}`);\r\n  return response.data;\r\n};\r\n\r\nconst createOrder = (orderItems, address, pricingDetails, paymentMethod) => {\r\n  return axiosInstance.post(\r\n    \"/placeOrder\",\r\n    {\r\n      orderItem: orderItems,\r\n      address,\r\n      ...pricingDetails,\r\n      payment_method: paymentMethod,\r\n    },\r\n    {\r\n      headers: {\r\n        \"x-api-key\": process.env.REACT_APP_ORDER_API_KEY,\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nconst editOrder = (\r\n  orderId,\r\n  address,\r\n  pricingDetails,\r\n  paymentMethod,\r\n  hasPaymentCompleted,\r\n  status\r\n) => {\r\n  return axiosInstance.post(\r\n    `/editOrder/${orderId}`,\r\n    {\r\n      address,\r\n      ...pricingDetails,\r\n      payment_method: paymentMethod,\r\n      payment_complete: hasPaymentCompleted,\r\n      status: status,\r\n    },\r\n    {\r\n      headers: {\r\n        \"x-api-key\": process.env.REACT_APP_ORDER_API_KEY,\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nconst updateOrderStatus = (orderId, status) => {\r\n  return axiosInstance.post(\r\n    `/updateStatus/${orderId}`,\r\n    { status },\r\n    {\r\n      headers: {\r\n        \"x-api-key\": process.env.REACT_APP_ORDER_API_KEY,\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nconst getStatusHistory = async (orderId) => {\r\n  const response = await axiosInstance.get(`/orderStatusDetails/${orderId}`);\r\n  return response.data?.statusDetails?.orderStatusDetails;\r\n};\r\n\r\nconst cancelOrder = async (orderId) => {\r\n  const response = await axiosInstance.get(`/cancelDelivery/${orderId}`);\r\n  return response.data;\r\n};\r\n\r\nconst downloadInvoice = async (orderId) => {\r\n  const response = await axiosInstance.get(`/downloadInvoice/${orderId}`);\r\n  return response.data;\r\n};\r\n\r\nexport {\r\n  getAllOrders,\r\n  getOrderById,\r\n  createOrder,\r\n  editOrder,\r\n  updateOrderStatus,\r\n  getStatusHistory,\r\n  cancelOrder,\r\n  downloadInvoice,\r\n};\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst PurchaseTable = ({ order }) => {\r\n  return (\r\n    <div className=\"DETAILS \">\r\n      <p className=\"font-medium font-secondary text-lg my-2\">Item Ordered :</p>\r\n\r\n      <div className=\"w-full border border-black rounded-lg overflow-x-auto\">\r\n        <table className=\"w-full\">\r\n          <thead>\r\n            <tr className=\"bg-lightGray font-secondary\">\r\n              <th scope=\"col\" className=\"px-6 py-4 text-left font-medium\">\r\n                SL.\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-4 text-left font-medium\">\r\n                Product\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-4 font-medium\">\r\n                SKU\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-4 font-medium\">\r\n                QTY\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-4 font-medium\">\r\n                Price\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-4 font-medium\">\r\n                Discount\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-4 font-medium\">\r\n                Total\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {order.orderItem.map((item, index) => (\r\n              <tr key={index} className=\"border-b-2 border-primary\">\r\n                <td className=\"px-6\">{index + 1}</td>\r\n                <td className=\"px-4 py-3\">\r\n                  {item.productId ? (\r\n                    <Link\r\n                      to={`/product/${item.productId?._id}`}\r\n                      className=\"PRODUCT-MAIN flex gap-4\"\r\n                    >\r\n                      <div className=\"size-16\">\r\n                        <img\r\n                          src={item?.productId?.images[0]}\r\n                          alt={item?.productId?.productGroup?.name}\r\n                          className=\"size-full object-cover object-center\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"text-xs\">\r\n                        <h3 className=\"font-medium\">{item.productId?.name}</h3>\r\n                        <p>Size: XS</p>\r\n                        <p>Color: White</p>\r\n                      </div>\r\n                    </Link>\r\n                  ) : (\r\n                    <div className=\"size-16 bg-lightGray flex items-center justify-center text-primary rounded text-xs text-center\">\r\n                      Invalid Product\r\n                    </div>\r\n                  )}\r\n                </td>\r\n                <td className=\"px-4 py-3 text-center\">\r\n                  <p className=\"text-sm\">{item.productId?.sku}</p>\r\n                </td>\r\n                <td className=\"px-4 py-3 text-center\">\r\n                  <p className=\"text-sm\">{item.itemQuantity}</p>\r\n                </td>\r\n                <td className=\"px-4 py-3 text-center\">\r\n                  {item.productId && (\r\n                    <p className=\"text-sm\">\r\n                      ₹ {item.productId?.unitPrice * item.itemQuantity}\r\n                    </p>\r\n                  )}\r\n                </td>\r\n                <td className=\"px-4 py-3 text-center\">\r\n                  {item.productId && (\r\n                    <p className=\"text-sm\">\r\n                      ₹{\" \"}\r\n                      {(item.productId?.unitPrice -\r\n                        item.productId?.sellingPrice) *\r\n                        item.itemQuantity}\r\n                    </p>\r\n                  )}\r\n                </td>\r\n                <td className=\"px-4 py-3 text-center\">\r\n                  {item.productId && (\r\n                    <p className=\"text-sm\">\r\n                      ₹ {item.productId?.sellingPrice * item.itemQuantity}\r\n                    </p>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <ul className=\"TABLE-FOOTER space-y-1 ml-auto w-80 px-12 py-2 text-sm\">\r\n          <li className=\"flex justify-between gap-12\">\r\n            <p className=\"text-secondary\">Subtotal</p>\r\n            <p>₹ {order.subtotal}</p>\r\n          </li>\r\n          <li className=\"flex justify-between gap-12\">\r\n            <p className=\"text-secondary\">Discount</p>\r\n            <p className=\"text-success\">- ₹ {order.discount}</p>\r\n          </li>\r\n          <li className=\"flex justify-between gap-12\">\r\n            <p className=\"text-secondary\">Utsav Discount</p>\r\n            <p className=\"text-success\">- ₹ {order.utsavDiscount}</p>\r\n          </li>\r\n          <li className=\"flex justify-between gap-12\">\r\n            <p className=\"text-secondary\">Coupon Discount</p>\r\n            <p className=\"text-success\">- ₹ {order.couponDiscount}</p>\r\n          </li>\r\n          <li className=\"flex justify-between gap-12\">\r\n            <p className=\"text-secondary\">Wallet Balance Used</p>\r\n            <p className=\"text-success\">- ₹ {order.walletBalanceUsed}</p>\r\n          </li>\r\n          <li className=\"flex justify-between gap-12\">\r\n            <p className=\"text-secondary\">GST (incl)</p>\r\n            <p className=\"text-primary\">₹ {order.tax.toFixed(2)}</p>\r\n          </li>\r\n          <li className=\"flex justify-between gap-12\">\r\n            <p className=\"text-secondary\">Shipping</p>\r\n            <p>\r\n              {order.shippingCost > 0 ? (\r\n                `₹ ${order.shippingCost}`\r\n              ) : (\r\n                <span className=\"text-xs text-green-500\">Free delivery</span>\r\n              )}\r\n            </p>\r\n          </li>\r\n          <li className=\"flex justify-between gap-6 text-base font-medium\">\r\n            <p>Total</p>\r\n            <p>₹ {order.totalPrice}</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseTable;\r\n","import { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { serverOrderStatus } from \"../utils/Constants\";\r\nimport { formatDate, formatTime } from \"../utils/dateUtils\";\r\nimport useMediaQuery from \"../hooks/useMediaQuery\";\r\n\r\nconst MAIN_STATUSES = [\r\n  \"Confirmed\",\r\n  \"Shipping\",\r\n  \"Out For delivery\",\r\n  \"Delivered\",\r\n];\r\n\r\nconst Tracker = ({ currentStatus, statusHistory }) => {\r\n  const maxMd = useMediaQuery(\"(min-width: 768px)\");\r\n\r\n  const displayStatuses =\r\n    currentStatus === \"Completed\"\r\n      ? [...MAIN_STATUSES, \"Completed\"]\r\n      : currentStatus === \"Canceled\"\r\n      ? [...MAIN_STATUSES, \"Canceled\"]\r\n      : currentStatus === \"Pickup Completed\"\r\n      ? [...MAIN_STATUSES, \"Pickup Completed\"]\r\n      : currentStatus === \"Refund Completed\"\r\n      ?[...MAIN_STATUSES,\"Refund Completed\"]\r\n      : MAIN_STATUSES;\r\n\r\n  const sortedStatusHistory = statusHistory.sort(\r\n    (a, b) =>\r\n      serverOrderStatus.indexOf(a.status) - serverOrderStatus.indexOf(b.status)\r\n  );\r\n\r\n  const mergedStatusHistory = displayStatuses.map((mainStatus) => {\r\n    const matchingHistory = sortedStatusHistory.find(\r\n      (status) => status.status === mainStatus\r\n    );\r\n    return (\r\n      matchingHistory || {\r\n        status: mainStatus,\r\n        date: null,\r\n        _id: `placeholder-${mainStatus}`,\r\n      }\r\n    );\r\n  });\r\n\r\n  const currentStatusIndex = mergedStatusHistory.findIndex(\r\n    (status) => status.status === currentStatus\r\n  );\r\n\r\n  return (\r\n    <div className=\"relative border border-black rounded-lg\">\r\n      <div className=\"PROGRESS-BAR px-16 pt-8 pb-16 max-md:p-8 flex max-md:flex-col justify-between md:items-center border-b border-black\">\r\n        {mergedStatusHistory.map((status, index) => (\r\n          <Fragment key={status._id}>\r\n            <div className=\"relative\">\r\n              <span\r\n                className={`size-6 border-3 rounded-full flex justify-center items-center ${\r\n                  index <= currentStatusIndex && status.date\r\n                    ? \"border-primeRed\"\r\n                    : \"border-darkGray\"\r\n                }`}\r\n              >\r\n                {index <= currentStatusIndex && status.date && (\r\n                  <span className=\"block size-4 bg-primeRed rounded-full\" />\r\n                )}\r\n              </span>\r\n\r\n              <div className=\"absolute md:mt-1 md:left-1/2 md:-translate-x-1/2 max-md:top-1/2 max-md:left-10 max-md:-translate-y-1/2 w-max text-sm md:text-center font-medium\">\r\n                <p\r\n                  className={`first-letter:uppercase ${\r\n                    index <= currentStatusIndex && status.date\r\n                      ? \"text-primeRed\"\r\n                      : \"text-primary\"\r\n                  }`}\r\n                >\r\n                  {status.status}\r\n                </p>\r\n                <p>{status.date ? formatDate(new Date(status.date)) : \"\"}</p>\r\n              </div>\r\n\r\n              {status.status === currentStatus && maxMd ? (\r\n                <span className=\"absolute size-5 left-1/2 -translate-x-1/2 top-[78px] rotate-45 bg-white border-t border-l border-black\" />\r\n              ) : null}\r\n            </div>\r\n\r\n            {index !== mergedStatusHistory.length - 1 && (\r\n              <div className=\"relative md:h-[3px] md:w-full max-md:w-[3px] max-md:h-24 max-md:left-[10px] bg-darkGray overflow-hidden\">\r\n                {index < currentStatusIndex && status.date && (\r\n                  <span className=\"absolute md:h-[3px] md:w-full max-md:w-[3px] max-md:h-full bg-primeRed transition-transform duration-500 ease-out origin-left\" />\r\n                )}\r\n              </div>\r\n            )}\r\n          </Fragment>\r\n        ))}\r\n      </div>\r\n      {currentStatusIndex !== -1 && (\r\n        <div className=\"PROGRESS-DETAILS px-12 max-md:px-8 py-3 max-md:py-2 flex items-center gap-12\">\r\n          <div className=\"font-semibold font-secondary text-center\">\r\n            <p className=\"text-3xl\">\r\n              {new Date(mergedStatusHistory[currentStatusIndex].date).getDate()}\r\n            </p>\r\n            <p>\r\n              {new Date(mergedStatusHistory[currentStatusIndex].date)\r\n                .toLocaleString(\"default\", { month: \"short\" })\r\n                .toUpperCase()}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <p className=\"font-medium\">{`Order is ${currentStatus.toLowerCase()}`}</p>\r\n            <p className=\"text-sm text-primary\">\r\n              {formatTime(\r\n                new Date(mergedStatusHistory[currentStatusIndex].date)\r\n              )}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nTracker.propTypes = {\r\n  currentStatus: PropTypes.string.isRequired,\r\n  statusHistory: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      status: PropTypes.string.isRequired,\r\n      date: PropTypes.string.isRequired,\r\n      _id: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Tracker;\r\n","import Tracker from \"../../components/Tracker\";\r\n\r\nconst OrderStatus = ({ statusHistory, currentStatus }) => {\r\n  return (\r\n    <>\r\n      {/* <div className=\"border border-black py-2 px-4 rounded-lg my-8 text-xs flex items-center gap-2\">\r\n        <strong className=\"text-warning\">Please Note :</strong>\r\n        <p className=\"text-primary\">This item has not been delivered yet</p>\r\n      </div> */}\r\n      <div>\r\n        <p className=\"font-medium font-secondary text-lg my-2\">\r\n          Tracking Order :\r\n        </p>\r\n        <Tracker currentStatus={currentStatus} statusHistory={statusHistory} />\r\n      </div>\r\n      {/* <div className=\"border border-black rounded-lg my-8 flex justify-between divide-x\">\r\n        <p className=\"px-16 py-4 w-1/2\">\r\n          Courier Name : <strong>Delivery</strong>\r\n        </p>\r\n        <p className=\"px-16 py-4 w-1/2 border-black\">\r\n          Tracking No : <strong>124532089</strong>\r\n        </p>\r\n      </div> */}\r\n      {/* <div>\r\n        <p className=\"font-medium font-secondary text-lg my-2\">\r\n          Shipment URL :\r\n        </p>\r\n        <div className=\"border border-black rounded-lg py-2 px-8\">\r\n          <a\r\n            href=\"https://facebook.com\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            className=\"text-blue-800\"\r\n          >\r\n            https://facebook.com\r\n          </a>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderStatus;\r\n","import { FiDownload } from \"react-icons/fi\";\r\nimport PurchaseTable from \"./PurchaseTable\";\r\nimport OrderStatus from \"./OrderStatus\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  useDownloadInvoice,\r\n  useOrderById,\r\n  useOrderStatus,\r\n} from \"../../services/orderServices\";\r\nimport { formatDate } from \"../../utils/dateUtils\";\r\nimport { getColorForStatus } from \"../../utils/Constants\";\r\nimport Button from \"../../components/Button\";\r\nimport { useToast } from \"../../contexts/toastContext\";\r\n\r\nconst Order = () => {\r\n  const { orderId } = useParams();\r\n  const { data: order, isLoading, error } = useOrderById(orderId);\r\n  const {\r\n    data: statusHistory,\r\n    isLoading: statusLoading,\r\n    error: statusError,\r\n  } = useOrderStatus(orderId);\r\n  const downloadMutation = useDownloadInvoice();\r\n  const toast = useToast();\r\n\r\n  const handleDownloadInvoice = () => {\r\n    downloadMutation.mutate(orderId, {\r\n      onSuccess: (response) => {\r\n        const invoiceUrl = response.invoicePath;\r\n        window.open(invoiceUrl, \"_blank\");\r\n      },\r\n      onError: (error) => {\r\n        console.error(error.message);\r\n        toast.error(\"This order is not shipped yet.\");\r\n      },\r\n    });\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"w-full\">\r\n        <h2 className=\"text-center font-medium text-xl mt-8\">Loading...</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"w-full\">\r\n        <h2 className=\"text-center font-medium text-xl mt-8\">\r\n          {error.message}\r\n        </h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    order && (\r\n      <main className=\"container max-w-full py-8 px-32 max-xl:px-16 max-lg:px-8 max-md:px-4 space-y-4\">\r\n        <section className=\"TOP-HEAD\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <h2 className=\"font-secondary font-semibold text-3xl\">\r\n              Order Details\r\n            </h2>\r\n            <span\r\n              className={`px-3 py-1 rounded-full ${getColorForStatus(\r\n                order.status\r\n              )}`}\r\n            >\r\n              <p className=\"text-xs text-white font-medium\">\r\n                {order.status.toUpperCase()}\r\n              </p>\r\n            </span>\r\n          </div>\r\n\r\n          <p className=\"font-medium text-secondary font-secondary\">\r\n            Order placed on {formatDate(new Date(order.createdAt))}\r\n          </p>\r\n\r\n          <p className=\"font-medium text-secondary font-secondary\">\r\n            Arriving on {formatDate(new Date(order.expectedDeliveryDate))}\r\n          </p>\r\n        </section>\r\n\r\n        <Button\r\n          type=\"button\"\r\n          reverse\r\n          onClick={handleDownloadInvoice}\r\n          className=\"px-4 py-2 rounded-full ml-auto\"\r\n        >\r\n          <div className=\"flex items-center gap-2\">\r\n            <FiDownload size={18} />\r\n            <p className=\"font-medium\">INVOICE</p>\r\n          </div>\r\n        </Button>\r\n\r\n        <PurchaseTable order={order} />\r\n        {!statusLoading && !statusError ? (\r\n          <OrderStatus\r\n            statusHistory={statusHistory}\r\n            currentStatus={order.status}\r\n          />\r\n        ) : null}\r\n      </main>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport {\r\n  cancelOrder,\r\n  downloadInvoice,\r\n  getAllOrders,\r\n  getOrderById,\r\n  getStatusHistory,\r\n} from \"../api/orderApis\";\r\n\r\nconst useOrders = () => {\r\n  return useQuery({\r\n    queryKey: [\"orders\"],\r\n    queryFn: getAllOrders,\r\n    staleTime: 1000 * 60 * 5,\r\n  });\r\n};\r\n\r\nconst useOrderById = (orderId) => {\r\n  return useQuery({\r\n    queryKey: [\"order\", orderId],\r\n    queryFn: () => getOrderById(orderId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!orderId,\r\n  });\r\n};\r\n\r\nconst useOrderStatus = (orderId) => {\r\n  return useQuery({\r\n    queryKey: [\"orderStatus\", orderId],\r\n    queryFn: () => getStatusHistory(orderId),\r\n    staleTime: 1000 * 60 * 5,\r\n    enabled: !!orderId,\r\n  });\r\n};\r\n\r\nconst useCancelOrder = (orderId) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: cancelOrder,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([\"orders\"]);\r\n      queryClient.invalidateQueries([\"order\", orderId]);\r\n      queryClient.invalidateQueries([\"orderStatus\", orderId]);\r\n    },\r\n  });\r\n};\r\n\r\nconst useDownloadInvoice = (orderId) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: downloadInvoice,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([\"order\", orderId]);\r\n    },\r\n  });\r\n};\r\n\r\nexport {\r\n  useOrders,\r\n  useOrderById,\r\n  useOrderStatus,\r\n  useCancelOrder,\r\n  useDownloadInvoice,\r\n};\r\n"],"names":["getAllOrders","async","axiosInstance","get","data","getOrderById","orderId","createOrder","orderItems","address","pricingDetails","paymentMethod","post","orderItem","payment_method","headers","process","updateOrderStatus","status","getStatusHistory","_response$data","_response$data$status","statusDetails","orderStatusDetails","cancelOrder","downloadInvoice","_ref","order","_jsxs","className","children","_jsx","scope","map","item","index","_item$productId","_item$productId2","_item$productId3","_item$productId3$prod","_item$productId4","_item$productId5","_item$productId6","_item$productId7","_item$productId8","_item$productId9","productId","Link","to","_id","src","images","alt","productGroup","name","sku","itemQuantity","unitPrice","sellingPrice","subtotal","discount","utsavDiscount","couponDiscount","walletBalanceUsed","tax","toFixed","shippingCost","totalPrice","MAIN_STATUSES","currentStatus","statusHistory","maxMd","useMediaQuery","displayStatuses","sortedStatusHistory","sort","a","b","serverOrderStatus","indexOf","mergedStatusHistory","mainStatus","find","date","currentStatusIndex","findIndex","Fragment","formatDate","Date","length","getDate","toLocaleString","month","toUpperCase","toLowerCase","formatTime","_Fragment","Tracker","Order","useParams","isLoading","error","useOrderById","statusLoading","statusError","useOrderStatus","downloadMutation","useDownloadInvoice","toast","useToast","message","getColorForStatus","createdAt","expectedDeliveryDate","Button","type","reverse","onClick","handleDownloadInvoice","mutate","onSuccess","response","invoiceUrl","invoicePath","window","open","onError","console","FiDownload","size","PurchaseTable","OrderStatus","useOrders","useQuery","queryKey","queryFn","staleTime","enabled","useCancelOrder","queryClient","useQueryClient","useMutation","mutationFn","invalidateQueries"],"sourceRoot":""}