{"version":3,"file":"static/js/300.d39af27a.chunk.js","mappings":"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","sources":["pages/GiftCard/CreateCard.jsx","api/giftCardApis.js","services/giftCardServices.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Button from \"../../components/Button\";\r\nimport InputBox from \"../../components/InputBox\";\r\nimport TextareaBox from \"../../components/TextareaBox\";\r\nimport useForm from \"../../hooks/useForm\";\r\nimport { useUser } from \"../../contexts/userContext\";\r\nimport { useWallet } from \"../../contexts/walletContext\";\r\nimport {\r\n  useCreateGiftCard,\r\n  useGiftCardTemplates,\r\n} from \"../../services/giftCardServices\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useToast } from \"../../contexts/toastContext\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst AmountBtn = ({ amount, isActive = false, onClick }) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={onClick}\r\n      className={`w-16 h-7 border border-primeRed rounded-md flex items-center justify-center gap-1 p-1 text-sm font-secondary font-medium text-primeRed ${\r\n        isActive ? \"bg-lightGray\" : \"bg-white\"\r\n      }`}\r\n    >\r\n      <span>â‚¹</span>\r\n      <p>{amount}</p>\r\n    </button>\r\n  );\r\n};\r\n\r\nconst CreateCard = () => {\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n  const { user } = useUser();\r\n  const { getBalance } = useWallet();\r\n  const {\r\n    data: templates = [],\r\n    isLoading: templatesLoading,\r\n    error: templatesError,\r\n  } = useGiftCardTemplates();\r\n  const createMutation = useCreateGiftCard();\r\n  const [amount, setAmount] = useState(null);\r\n  const [customAmount, setCustomAmount] = useState(null);\r\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\r\n\r\n  const handleCustomAmount = (value) => {\r\n    setCustomAmount(value);\r\n    setAmount(null);\r\n  };\r\n\r\n  const handleAmount = (value) => {\r\n    setCustomAmount(null);\r\n    setAmount(value);\r\n  };\r\n\r\n  const onSubmitHandler = async (cardData) => {\r\n    const { recipientName, recipientEmail, recipientPhone, message } = cardData;\r\n\r\n    // Client side validations\r\n    const warnings = [];\r\n\r\n    if (!customAmount && !amount) {\r\n      warnings.push(\"Please select an amount\");\r\n    }\r\n    if (!selectedTemplate) {\r\n      warnings.push(\"Please select a gift card template\");\r\n    }\r\n\r\n    if (warnings.length > 0) {\r\n      warnings.forEach((warning) => toast.error(warning));\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      value: amount || customAmount,\r\n      Recipient_Information: {\r\n        name: recipientName,\r\n        email: recipientEmail,\r\n        phoneNumber: recipientPhone,\r\n      },\r\n      templateId: selectedTemplate._id,\r\n      message,\r\n    };\r\n\r\n    createMutation.mutate(payload, {\r\n      onSuccess: async () => {\r\n        await getBalance();\r\n        toast.success(\"Gift card created successfully\");\r\n        navigate(\"/account/gift-card\");\r\n        clearForm();\r\n      },\r\n      onError: (error) => {\r\n        console.error(error);\r\n        toast.error(error?.response?.data?.message);\r\n      },\r\n    });\r\n  };\r\n\r\n  const { formData, handleChange, handleSubmit, clearForm } = useForm(\r\n    {},\r\n    onSubmitHandler\r\n  );\r\n\r\n  return (\r\n    <motion.main\r\n      className=\"flex-1\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <div className=\"bg-white p-6 rounded-md lg:shadow-md\">\r\n        <h2 className=\"text-2xl font-semibold mb-4\">Create Gift Card</h2>\r\n\r\n        <section className=\"flex justify-center flex-wrap gap-8\">\r\n          <div className=\"LEFT space-y-4\">\r\n            <div className=\"w-80 h-48 bg-lightGray rounded-md flex justify-center items-center overflow-hidden\">\r\n              {selectedTemplate ? (\r\n                <img\r\n                  src={selectedTemplate.template}\r\n                  alt={selectedTemplate.title}\r\n                  className=\"size-full\"\r\n                />\r\n              ) : (\r\n                <p className=\"text-primary\">No template selected</p>\r\n              )}\r\n            </div>\r\n            <div className=\"w-80 bg-white rounded-md border border-secondary p-4 text-sm space-y-2 overflow-x-hidden\">\r\n              <p>From: {user.fullName}</p>\r\n              <p>To: {formData.recipientName}</p>\r\n              <p>Expires: {new Date().toLocaleDateString()}</p>\r\n              <p>\r\n                {formData.message || \"Enjoy this gift card on Finafid.com!\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"RIGHT flex-grow space-y-4\">\r\n            <p className=\"font-secondary font-medium leading-none\">\r\n              Choose a design\r\n            </p>\r\n            <div className=\"GIFT-CARDS-CONTAINER w-full min-h-20 max-h-52 overflow-y-scroll\">\r\n              <ul className=\"flex gap-4 flex-wrap p-1\">\r\n                {templatesLoading ? (\r\n                  <div className=\"w-full flex justify-center\">\r\n                    <Spinner />\r\n                  </div>\r\n                ) : templatesError ? (\r\n                  <p className=\"w-full text-center text-primary\">\r\n                    templatesError.message\r\n                  </p>\r\n                ) : templates.length === 0 ? (\r\n                  <p className=\"w-full text-center text-primary\">\r\n                    No Templates available.\r\n                  </p>\r\n                ) : (\r\n                  templates.map((template, index) => (\r\n                    <li\r\n                      onClick={() => setSelectedTemplate(template)}\r\n                      key={index}\r\n                      className={`w-20 h-14 flex-shrink-0 ${\r\n                        selectedTemplate &&\r\n                        selectedTemplate._id === template._id &&\r\n                        \"outline outline-primeRed\"\r\n                      }`}\r\n                    >\r\n                      <img\r\n                        src={template.template}\r\n                        alt={template.title}\r\n                        className=\"size-full\"\r\n                      />\r\n                    </li>\r\n                  ))\r\n                )}\r\n              </ul>\r\n            </div>\r\n\r\n            <p className=\"font-secondary font-medium leading-none\">\r\n              Choose an amount\r\n            </p>\r\n            <div className=\"flex gap-4 flex-wrap items-center\">\r\n              {Array.from([1000, 2000, 3000, 4000]).map((value, index) => (\r\n                <AmountBtn\r\n                  key={index}\r\n                  isActive={value === amount}\r\n                  amount={value}\r\n                  onClick={() => handleAmount(value)}\r\n                />\r\n              ))}\r\n\r\n              <div className=\"CUSTOM-AMOUNT\">\r\n                <p className=\"text-[9px]\">Custom amount:</p>\r\n                <div className=\"w-20 h-7 flex border border-primeRed rounded-md bg-white overflow-hidden\">\r\n                  <span className=\"w-max h-full flex items-center justify-center text-sm text-primeRed px-2 border-r border-primeRed\">\r\n                    â‚¹\r\n                  </span>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"customAmount\"\r\n                    value={customAmount || \"\"}\r\n                    onChange={(e) => handleCustomAmount(e.target.value)}\r\n                    className=\"[appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none outline-none w-full px-2 text-sm font-secondary font-medium text-primeRed\"\r\n                  />\r\n                </div>\r\n                <p className=\"text-[9px]\">(Maximum â‚¹ 10,000)</p>\r\n              </div>\r\n            </div>\r\n\r\n            <p className=\"font-secondary font-medium leading-none\">\r\n              Recipient Details\r\n            </p>\r\n            <div className=\"space-y-2\">\r\n              <p className=\"font-medium text-xs\">Enter the details</p>\r\n              <form className=\"space-y-3\" onSubmit={handleSubmit}>\r\n                <InputBox\r\n                  type=\"tel\"\r\n                  name=\"recipientPhone\"\r\n                  value={formData.recipientPhone}\r\n                  onChange={handleChange}\r\n                  placeholder=\"recipient mobile number\"\r\n                  className=\"border-b-2 border-dark py-1 text-sm placeholder:text-secondary\"\r\n                />\r\n                <InputBox\r\n                  type=\"email\"\r\n                  name=\"recipientEmail\"\r\n                  value={formData.recipientEmail}\r\n                  onChange={handleChange}\r\n                  placeholder=\"recipient email\"\r\n                  className=\"border-b-2 border-dark py-1 text-sm placeholder:text-secondary\"\r\n                />\r\n                <InputBox\r\n                  type=\"text\"\r\n                  name=\"recipientName\"\r\n                  value={formData.recipientName}\r\n                  onChange={handleChange}\r\n                  placeholder=\"recipient name\"\r\n                  className=\"border-b-2 border-dark py-1 text-sm placeholder:text-secondary\"\r\n                />\r\n              </form>\r\n            </div>\r\n            <p className=\"font-secondary font-medium\">\r\n              Add an optional message\r\n            </p>\r\n            <div>\r\n              <form onSubmit={handleSubmit}>\r\n                <TextareaBox\r\n                  name=\"message\"\r\n                  value={formData.message}\r\n                  onChange={handleChange}\r\n                  maxLength={150}\r\n                  placeholder=\"Enter optional message\"\r\n                  className=\"resize-none h-36 text-sm placeholder:text-secondary border-b-2 border-dark\"\r\n                />\r\n                <Button\r\n                  disabled={createMutation.isPending}\r\n                  className=\"ml-auto mt-8 px-4 py-2 rounded-md font-secondary text-sm\"\r\n                >\r\n                  create\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </motion.main>\r\n  );\r\n};\r\n\r\nexport default CreateCard;\r\n","import axiosInstance from \"./axiosInstance\";\r\n\r\nconst getGiftCards = async () => {\r\n  const response = await axiosInstance.get(\"/getGiftCardByUser\");\r\n  return response.data;\r\n};\r\n\r\nconst createGiftCard = async (cardData) => {\r\n  const response = await axiosInstance.post(\"/createGiftCard\", cardData);\r\n  return response.data;\r\n};\r\n\r\nconst redeemGiftCard = async (code) => {\r\n  const response = await axiosInstance.post(\"/redeemGiftCard\", { code });\r\n  return response.data;\r\n};\r\n\r\nconst getAllTemplates = async () => {\r\n  const response = await axiosInstance.get(\"/getAllTemplates\");\r\n  return response.data?.allTemplates;\r\n};\r\n\r\nexport { getGiftCards, createGiftCard, redeemGiftCard, getAllTemplates };\r\n","import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport {\r\n  createGiftCard,\r\n  getAllTemplates,\r\n  getGiftCards,\r\n  redeemGiftCard,\r\n} from \"../api/giftCardApis\";\r\n\r\nconst useGiftCards = () => {\r\n  return useQuery({\r\n    queryKey: [\"giftCards\"],\r\n    queryFn: getGiftCards,\r\n    staleTime: 1000 * 60 * 5,\r\n  });\r\n};\r\n\r\nconst useCreateGiftCard = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: createGiftCard,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([\"giftCards\"]);\r\n    },\r\n  });\r\n};\r\n\r\nconst useRedeemGiftCard = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: redeemGiftCard,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([\"giftCards\"]);\r\n    },\r\n  });\r\n};\r\n\r\nconst useGiftCardTemplates = () => {\r\n  return useQuery({\r\n    queryKey: [\"giftCard-templates\"],\r\n    queryFn: getAllTemplates,\r\n    staleTime: 1000 * 60 * 5,\r\n  });\r\n};\r\n\r\nexport {\r\n  useGiftCards,\r\n  useCreateGiftCard,\r\n  useRedeemGiftCard,\r\n  useGiftCardTemplates,\r\n};\r\n"],"names":["AmountBtn","_ref","amount","isActive","onClick","_jsxs","type","className","children","_jsx","CreateCard","navigate","useNavigate","toast","useToast","user","useUser","getBalance","useWallet","data","templates","isLoading","templatesLoading","error","templatesError","useGiftCardTemplates","createMutation","useCreateGiftCard","setAmount","useState","customAmount","setCustomAmount","selectedTemplate","setSelectedTemplate","formData","handleChange","handleSubmit","clearForm","useForm","async","recipientName","recipientEmail","recipientPhone","message","cardData","warnings","push","length","forEach","warning","payload","value","Recipient_Information","name","email","phoneNumber","templateId","_id","mutate","onSuccess","success","onError","_error$response","_error$response$data","console","response","motion","main","initial","opacity","animate","transition","duration","src","template","alt","title","fullName","Date","toLocaleDateString","Spinner","map","index","Array","from","handleAmount","onChange","e","handleCustomAmount","target","onSubmit","InputBox","placeholder","TextareaBox","maxLength","Button","disabled","isPending","getGiftCards","axiosInstance","get","createGiftCard","post","redeemGiftCard","code","getAllTemplates","_response$data","allTemplates","useGiftCards","useQuery","queryKey","queryFn","staleTime","queryClient","useQueryClient","useMutation","mutationFn","invalidateQueries","useRedeemGiftCard"],"sourceRoot":""}